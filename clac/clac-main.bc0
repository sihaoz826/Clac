C0 C0 FF EE       # magic number
00 17             # version 11, arch = 1 (64 bits)

00 04             # int pool count
# int pool
7F FF FF FF
80 00 00 00
7F FF FF FF
80 00 00 00

6C 64             # string pool total size
# string pool
73 74 72 69 6E 67 5F 63 68 61 72 61 74 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 33 33 2D 31 39 2E 34 39 29 00  # "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 31 34 2D 32 33 2E 33 36 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 31 39 2D 32 34 2E 33 35 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
73 74 72 69 6E 67 5F 6A 6F 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 34 2E 33 38 2D 32 34 2E 35 34 29 00  # "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 32 33 2E 36 2D 32 34 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 35 32 2D 33 31 2E 36 38 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 31 2E 36 2D 33 31 2E 36 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 73 75 62 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 31 34 2D 33 32 2E 33 36 29 00  # "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 32 2E 36 2D 33 32 2E 35 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 33 37 2E 36 2D 33 37 2E 34 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 33 2E 36 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 31 34 2D 34 34 2E 33 36 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 34 2E 36 2D 34 34 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 63 68 61 72 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 31 34 2D 34 35 2E 33 39 29 00  # "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 34 35 2E 36 2D 34 35 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 32 2E 36 2D 35 32 2E 34 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 33 34 2D 35 36 2E 35 30 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 36 2E 36 2D 35 36 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 34 31 2D 35 37 2E 35 37 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
73 74 72 69 6E 67 5F 74 6F 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 31 34 2D 35 37 2E 36 32 29 00  # "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 35 37 2E 36 2D 35 37 2E 36 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 31 35 2D 36 32 2E 34 37 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 32 2E 36 2D 36 32 2E 34 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 72 69 6E 67 5F 66 72 6F 6D 5F 63 68 61 72 61 72 72 61 79 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 31 34 2D 36 33 2E 33 36 29 00  # "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 33 2E 36 2D 36 33 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 37 2E 36 2D 36 37 2E 34 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 73 74 72 69 6E 67 2E 68 30 3A 20 36 39 2E 36 2D 36 39 2E 33 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 31 36 2D 31 34 2E 32 31 29 00  # "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 63 6F 6E 69 6F 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 73 5F 73 65 67 6D 65 6E 74 5F 73 6C 69 73 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 32 36 2E 31 30 2D 32 36 2E 34 34 29 00  # "is_segment_slist (lib/queue_of_string.c0: 26.10-26.44)"
69 73 5F 71 75 65 75 65 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 30 2E 38 2D 34 30 2E 34 33 29 00  # "is_queue (lib/queue_of_string.c0: 40.8-40.43)"
71 75 65 75 65 5F 65 6D 70 74 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 34 2E 31 33 2D 34 34 2E 32 34 29 00  # "queue_empty (lib/queue_of_string.c0: 44.13-44.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 34 2E 34 2D 34 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 44.4-44.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 30 2E 31 33 2D 35 30 2E 32 34 29 00  # "queue_is_read_only (lib/queue_of_string.c0: 50.13-50.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 30 2E 34 2D 35 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 50.4-50.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 6E 65 77 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 31 32 2D 35 36 2E 32 39 29 00  # "queue_new (lib/queue_of_string.c0: 56.12-56.29)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 34 2D 35 36 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 56.4-56.30: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 31 32 2D 35 37 2E 33 32 29 00  # "queue_new (lib/queue_of_string.c0: 57.12-57.32)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 37 2E 34 2D 35 37 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 57.4-57.33: @ensures annotation failed"
65 6E 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 31 33 2D 36 38 2E 32 34 29 00  # "enq (lib/queue_of_string.c0: 68.13-68.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 68.4-68.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 31 32 2D 36 39 2E 32 33 29 00  # "enq (lib/queue_of_string.c0: 69.12-69.23)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 34 2D 36 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 69.4-69.24: @ensures annotation failed"
65 6E 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 31 33 2D 37 30 2E 32 37 29 00  # "enq (lib/queue_of_string.c0: 70.13-70.27)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 34 2D 37 30 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 70.4-70.28: @ensures annotation failed"
65 6E 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 31 32 2D 36 39 2E 32 33 29 00  # "enq (lib/queue_of_string.c0: 69.12-69.23)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 39 2E 34 2D 36 39 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 69.4-69.24: @ensures annotation failed"
65 6E 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 31 33 2D 37 30 2E 32 37 29 00  # "enq (lib/queue_of_string.c0: 70.13-70.27)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 30 2E 34 2D 37 30 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 70.4-70.28: @ensures annotation failed"
64 65 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 31 33 2D 38 30 2E 32 34 29 00  # "deq (lib/queue_of_string.c0: 80.13-80.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 34 2D 38 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 80.4-80.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 31 2E 31 34 2D 38 31 2E 32 38 29 00  # "deq (lib/queue_of_string.c0: 81.14-81.28)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 31 2E 34 2D 38 31 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 81.4-81.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 32 2E 31 32 2D 38 32 2E 32 33 29 00  # "deq (lib/queue_of_string.c0: 82.12-82.23)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 32 2E 34 2D 38 32 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 82.4-82.24: @ensures annotation failed"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 30 2E 31 33 2D 39 30 2E 32 34 29 00  # "queue_print (lib/queue_of_string.c0: 90.13-90.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 30 2E 34 2D 39 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 90.4-90.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
5B 66 72 6F 6E 74 5D 20 00  # "[front] "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 32 2E 33 2D 39 32 2E 32 31 29 00  # "queue_print (lib/queue_of_string.c0: 92.3-92.21)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 35 2D 39 34 2E 32 36 29 00  # "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 35 2D 39 34 2E 32 36 29 00  # "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
00  # ""
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 35 2D 39 34 2E 32 36 29 00  # "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
20 3C 3C 20 00  # " << "
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 35 2E 32 39 2D 39 35 2E 34 33 29 00  # "queue_print (lib/queue_of_string.c0: 95.29-95.43)"
20 5B 62 61 63 6B 5D 00  # " [back]"
71 75 65 75 65 5F 70 72 69 6E 74 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 37 2E 33 2D 39 37 2E 32 30 29 00  # "queue_print (lib/queue_of_string.c0: 97.3-97.20)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 31 33 2D 31 30 31 2E 32 34 29 00  # "queue_read_only_copy (lib/queue_of_string.c0: 101.13-101.24)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 31 2E 34 2D 31 30 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 101.4-101.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 32 2E 31 32 2D 31 30 32 2E 32 33 29 00  # "queue_read_only_copy (lib/queue_of_string.c0: 102.12-102.23)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 32 2E 34 2D 31 30 32 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 102.4-102.24: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 33 2E 31 32 2D 31 30 33 2E 32 39 29 00  # "queue_read_only_copy (lib/queue_of_string.c0: 103.12-103.29)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 103.4-103.30: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 34 2E 31 32 2D 31 30 34 2E 33 39 29 00  # "queue_read_only_copy (lib/queue_of_string.c0: 104.12-104.39)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 34 2E 34 2D 31 30 34 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 104.4-104.40: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 32 2E 34 2D 31 32 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 65 6D 70 74 79 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 31 2E 31 2D 31 32 32 2E 33 39 29 00  # "queue_empty__1 (lib/queue_of_string.c0: 121.1-122.39)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 35 2E 34 2D 31 32 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 69 73 5F 72 65 61 64 5F 6F 6E 6C 79 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 34 2E 31 2D 31 32 35 2E 33 39 29 00  # "queue_is_read_only__1 (lib/queue_of_string.c0: 124.1-125.39)"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 37 2E 31 2D 31 32 39 2E 33 39 29 00  # "queue_new__1 (lib/queue_of_string.c0: 127.1-129.39)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 38 2E 34 2D 31 32 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
71 75 65 75 65 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 31 32 2D 31 32 39 2E 33 32 29 00  # "queue_new__1 (lib/queue_of_string.c0: 129.12-129.32)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 39 2E 34 2D 31 32 39 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 32 2E 34 2D 31 33 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 6E 71 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 31 2E 31 2D 31 33 33 2E 33 39 29 00  # "enq__1 (lib/queue_of_string.c0: 131.1-133.39)"
65 6E 71 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
65 6E 71 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 31 33 2D 31 33 33 2E 32 37 29 00  # "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 33 2E 34 2D 31 33 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 36 2E 34 2D 31 33 36 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 31 34 2D 31 33 37 2E 32 38 29 00  # "deq__1 (lib/queue_of_string.c0: 137.14-137.28)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 37 2E 34 2D 31 33 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 65 71 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 35 2E 31 2D 31 33 37 2E 33 39 29 00  # "deq__1 (lib/queue_of_string.c0: 135.1-137.39)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 30 2E 34 2D 31 34 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 75 65 75 65 5F 70 72 69 6E 74 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 33 39 2E 31 2D 31 34 30 2E 33 39 29 00  # "queue_print__1 (lib/queue_of_string.c0: 139.1-140.39)"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 35 2E 31 2D 31 34 37 2E 34 36 29 00  # "queue_read_only_copy__1 (lib/queue_of_string.c0: 145.1-147.46)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 36 2E 34 2D 31 34 36 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
71 75 65 75 65 5F 72 65 61 64 5F 6F 6E 6C 79 5F 63 6F 70 79 5F 5F 31 20 28 6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 31 32 2D 31 34 37 2E 33 39 29 00  # "queue_read_only_copy__1 (lib/queue_of_string.c0: 147.12-147.39)"
6C 69 62 2F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 34 37 2E 34 2D 31 34 37 2E 34 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
69 73 5F 61 73 73 6F 63 6C 69 73 74 5F 73 65 67 6D 65 6E 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 32 38 2E 33 32 2D 32 38 2E 37 30 29 00  # "is_assoclist_segment (lib/dict.c0: 28.32-28.70)"
69 73 5F 61 63 79 63 6C 69 63 5F 61 73 73 6F 63 6C 69 73 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 33 38 2E 32 31 2D 33 38 2E 35 36 29 00  # "is_acyclic_assoclist (lib/dict.c0: 38.21-38.56)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 33 38 2E 36 2D 33 38 2E 35 37 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 38.6-38.57: @loop_invariant annotation failed"
69 73 5F 64 69 63 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 35 39 2E 32 33 2D 35 39 2E 35 37 29 00  # "is_dict (lib/dict.c0: 59.23-59.57)"
64 69 63 74 5F 6E 65 77 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 36 34 2E 31 32 2D 36 34 2E 32 38 29 00  # "dict_new (lib/dict.c0: 64.12-64.28)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 36 34 2E 34 2D 36 34 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 64.4-64.29: @ensures annotation failed"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 37 32 2E 31 33 2D 37 32 2E 32 33 29 00  # "dict_lookup (lib/dict.c0: 72.13-72.23)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 37 32 2E 34 2D 37 32 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 72.4-72.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 37 35 2E 32 31 2D 37 35 2E 34 34 29 00  # "dict_lookup (lib/dict.c0: 75.21-75.44)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 37 35 2E 36 2D 37 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 75.6-75.45: @loop_invariant annotation failed"
64 69 63 74 5F 6C 6F 6F 6B 75 70 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 37 37 2E 39 2D 37 37 2E 33 36 29 00  # "dict_lookup (lib/dict.c0: 77.9-77.36)"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 36 2E 31 33 2D 38 36 2E 32 33 29 00  # "dict_insert (lib/dict.c0: 86.13-86.23)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 36 2E 34 2D 38 36 2E 32 34 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 86.4-86.24: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 37 2E 34 2D 38 37 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 87.4-87.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 39 32 2E 32 31 2D 39 32 2E 34 34 29 00  # "dict_insert (lib/dict.c0: 92.21-92.44)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 39 32 2E 36 2D 39 32 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 92.6-92.45: @loop_invariant annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 39 34 2E 39 2D 39 34 2E 33 36 29 00  # "dict_insert (lib/dict.c0: 94.9-94.36)"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 31 32 2D 38 38 2E 32 32 29 00  # "dict_insert (lib/dict.c0: 88.12-88.22)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 34 2D 38 38 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 31 32 2D 38 39 2E 33 32 29 00  # "dict_insert (lib/dict.c0: 89.12-89.32)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 34 2D 38 39 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 31 32 2D 38 38 2E 32 32 29 00  # "dict_insert (lib/dict.c0: 88.12-88.22)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 34 2D 38 38 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 31 32 2D 38 39 2E 33 32 29 00  # "dict_insert (lib/dict.c0: 89.12-89.32)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 34 2D 38 39 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 31 32 2D 38 38 2E 32 32 29 00  # "dict_insert (lib/dict.c0: 88.12-88.22)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 38 2E 34 2D 38 38 2E 32 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
64 69 63 74 5F 69 6E 73 65 72 74 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 31 32 2D 38 39 2E 33 32 29 00  # "dict_insert (lib/dict.c0: 89.12-89.32)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 38 39 2E 34 2D 38 39 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
64 69 63 74 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 31 36 2E 31 2D 31 31 37 2E 33 35 29 00  # "dict_new__1 (lib/dict.c0: 116.1-117.35)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 31 37 2E 36 2D 31 31 37 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/dict.c0: 117.6-117.30: @ensures annotation failed"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 32 31 2E 36 2D 31 32 31 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 121.6-121.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 6C 6F 6F 6B 75 70 5F 5F 31 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 32 30 2E 31 2D 31 32 31 2E 33 30 29 00  # "dict_lookup__1 (lib/dict.c0: 120.1-121.30)"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 32 34 2E 36 2D 31 32 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 124.6-124.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 32 35 2E 36 2D 31 32 35 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/dict.c0: 125.6-125.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
64 69 63 74 5F 69 6E 73 65 72 74 5F 5F 31 20 28 6C 69 62 2F 64 69 63 74 2E 63 30 3A 20 31 32 33 2E 31 2D 31 32 35 2E 33 32 29 00  # "dict_insert__1 (lib/dict.c0: 123.1-125.32)"
69 73 5F 73 65 67 6D 65 6E 74 5F 69 6E 74 6C 69 73 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 32 36 2E 31 30 2D 32 36 2E 34 36 29 00  # "is_segment_intlist (lib/stack_of_int.c0: 26.10-26.46)"
69 73 5F 73 74 61 63 6B 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 33 39 2E 38 2D 33 39 2E 34 34 29 00  # "is_stack (lib/stack_of_int.c0: 39.8-39.44)"
73 74 61 63 6B 5F 65 6D 70 74 79 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 33 2E 31 33 2D 34 33 2E 32 34 29 00  # "stack_empty (lib/stack_of_int.c0: 43.13-43.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 33 2E 34 2D 34 33 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 43.4-43.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 6E 65 77 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 32 39 29 00  # "stack_new (lib/stack_of_int.c0: 49.12-49.29)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 33 30 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 49.4-49.30: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 30 2E 31 32 2D 35 30 2E 33 32 29 00  # "stack_new (lib/stack_of_int.c0: 50.12-50.32)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 35 30 2E 34 2D 35 30 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 50.4-50.33: @ensures annotation failed"
70 75 73 68 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 30 2E 31 33 2D 36 30 2E 32 34 29 00  # "push (lib/stack_of_int.c0: 60.13-60.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 30 2E 34 2D 36 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 60.4-60.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 31 2E 31 32 2D 36 31 2E 32 33 29 00  # "push (lib/stack_of_int.c0: 61.12-61.23)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 36 31 2E 34 2D 36 31 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 61.4-61.24: @ensures annotation failed"
70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 30 2E 31 33 2D 37 30 2E 32 34 29 00  # "pop (lib/stack_of_int.c0: 70.13-70.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 30 2E 34 2D 37 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 70.4-70.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 31 2E 31 34 2D 37 31 2E 32 38 29 00  # "pop (lib/stack_of_int.c0: 71.14-71.28)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 31 2E 34 2D 37 31 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 71.4-71.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 32 2E 31 32 2D 37 32 2E 32 33 29 00  # "pop (lib/stack_of_int.c0: 72.12-72.23)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 37 32 2E 34 2D 37 32 2E 32 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 72.4-72.24: @ensures annotation failed"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 30 2E 31 33 2D 38 30 2E 32 34 29 00  # "stack_print (lib/stack_of_int.c0: 80.13-80.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 30 2E 34 2D 38 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 80.4-80.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 32 2E 33 2D 38 32 2E 31 38 29 00  # "stack_print (lib/stack_of_int.c0: 82.3-82.18)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 32 36 29 00  # "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 32 36 29 00  # "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
00  # ""
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 34 2E 35 2D 38 34 2E 32 36 29 00  # "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
20 7C 20 00  # " | "
73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 38 35 2E 33 30 2D 38 35 2E 34 33 29 00  # "stack_print (lib/stack_of_int.c0: 85.30-85.43)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 30 2E 34 2D 31 30 30 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 39 39 2E 31 2D 31 30 30 2E 34 30 29 00  # "stack_empty__1 (lib/stack_of_int.c0: 99.1-100.40)"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 32 2E 31 2D 31 30 34 2E 34 30 29 00  # "stack_new__1 (lib/stack_of_int.c0: 102.1-104.40)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 33 2E 34 2D 31 30 33 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 103.4-103.28: @ensures annotation failed"
73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 34 2E 31 32 2D 31 30 34 2E 33 32 29 00  # "stack_new__1 (lib/stack_of_int.c0: 104.12-104.32)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 34 2E 34 2D 31 30 34 2E 33 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 104.4-104.33: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 37 2E 34 2D 31 30 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 36 2E 31 2D 31 30 38 2E 33 39 29 00  # "push__1 (lib/stack_of_int.c0: 106.1-108.39)"
70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 31 33 2D 31 30 38 2E 32 37 29 00  # "push__1 (lib/stack_of_int.c0: 108.13-108.27)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 31 33 2D 31 30 38 2E 32 37 29 00  # "push__1 (lib/stack_of_int.c0: 108.13-108.27)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 32 2E 31 34 2D 31 31 32 2E 32 38 29 00  # "pop__1 (lib/stack_of_int.c0: 112.14-112.28)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 32 2E 34 2D 31 31 32 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 6F 70 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 30 2E 31 2D 31 31 32 2E 34 30 29 00  # "pop__1 (lib/stack_of_int.c0: 110.1-112.40)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 69 6E 74 2E 63 30 3A 20 31 31 34 2E 31 2D 31 31 35 2E 34 30 29 00  # "stack_print__1 (lib/stack_of_int.c0: 114.1-115.40)"
69 73 5F 73 65 67 6D 65 6E 74 5F 71 6C 69 73 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 33 32 2E 33 33 2D 33 32 2E 36 37 29 00  # "is_segment_qlist (lib/stack_of_queue_of_string.c0: 32.33-32.67)"
69 73 5F 71 73 74 61 63 6B 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 35 2E 38 2D 34 35 2E 34 32 29 00  # "is_qstack (lib/stack_of_queue_of_string.c0: 45.8-45.42)"
71 73 74 61 63 6B 5F 65 6D 70 74 79 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 39 2E 31 33 2D 34 39 2E 32 35 29 00  # "qstack_empty (lib/stack_of_queue_of_string.c0: 49.13-49.25)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 49.4-49.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 6E 65 77 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 35 2E 31 32 2D 35 35 2E 33 30 29 00  # "qstack_new (lib/stack_of_queue_of_string.c0: 55.12-55.30)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 35 2E 34 2D 35 35 2E 33 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 55.4-55.31: @ensures annotation failed"
71 73 74 61 63 6B 5F 6E 65 77 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 31 32 2D 35 36 2E 33 33 29 00  # "qstack_new (lib/stack_of_queue_of_string.c0: 56.12-56.33)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 35 36 2E 34 2D 35 36 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 56.4-56.34: @ensures annotation failed"
71 70 75 73 68 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 31 33 2D 36 36 2E 32 35 29 00  # "qpush (lib/stack_of_queue_of_string.c0: 66.13-66.25)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 36 2E 34 2D 36 36 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 66.4-66.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 38 2E 34 2D 36 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 68.4-68.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 75 73 68 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 31 32 2D 36 37 2E 32 34 29 00  # "qpush (lib/stack_of_queue_of_string.c0: 67.12-67.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 36 37 2E 34 2D 36 37 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 67.4-67.25: @ensures annotation failed"
71 70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 31 33 2D 37 37 2E 32 35 29 00  # "qpop (lib/stack_of_queue_of_string.c0: 77.13-77.25)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 37 2E 34 2D 37 37 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 77.4-77.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 31 34 2D 37 38 2E 32 39 29 00  # "qpop (lib/stack_of_queue_of_string.c0: 78.14-78.29)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 38 2E 34 2D 37 38 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 78.4-78.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 31 32 2D 37 39 2E 32 34 29 00  # "qpop (lib/stack_of_queue_of_string.c0: 79.12-79.24)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 37 39 2E 34 2D 37 39 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 79.4-79.25: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 30 2E 34 2D 38 30 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 80.4-80.28: @ensures annotation failed"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 38 2E 31 33 2D 38 38 2E 32 35 29 00  # "qstack_print (lib/stack_of_queue_of_string.c0: 88.13-88.25)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 38 38 2E 34 2D 38 38 2E 32 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 88.4-88.26: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
54 4F 50 3A 20 00  # "TOP: "
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 30 2E 33 2D 39 30 2E 31 38 29 00  # "qstack_print (lib/stack_of_queue_of_string.c0: 90.3-90.18)"
20 20 20 20 20 00  # "     "
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 32 2E 32 32 2D 39 32 2E 33 37 29 00  # "qstack_print (lib/stack_of_queue_of_string.c0: 92.22-92.37)"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 33 2E 35 2D 39 33 2E 32 35 29 00  # "qstack_print (lib/stack_of_queue_of_string.c0: 93.5-93.25)"
0A 00  # "\n"
71 73 74 61 63 6B 5F 70 72 69 6E 74 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 39 34 2E 33 30 2D 39 34 2E 34 32 29 00  # "qstack_print (lib/stack_of_queue_of_string.c0: 94.30-94.42)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 38 2E 34 2D 31 30 38 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 108.4-108.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 65 6D 70 74 79 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 30 37 2E 31 2D 31 30 38 2E 34 33 29 00  # "qstack_empty__1 (lib/stack_of_queue_of_string.c0: 107.1-108.43)"
71 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 30 2E 31 2D 31 31 32 2E 34 33 29 00  # "qstack_new__1 (lib/stack_of_queue_of_string.c0: 110.1-112.43)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 31 2E 34 2D 31 31 31 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 111.4-111.28: @ensures annotation failed"
71 73 74 61 63 6B 5F 6E 65 77 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 32 2E 31 32 2D 31 31 32 2E 33 33 29 00  # "qstack_new__1 (lib/stack_of_queue_of_string.c0: 112.12-112.33)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 32 2E 34 2D 31 31 32 2E 33 34 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 112.4-112.34: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 35 2E 34 2D 31 31 35 2E 33 36 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 115.4-115.36: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 34 2E 31 2D 31 31 36 2E 34 33 29 00  # "qpush__1 (lib/stack_of_queue_of_string.c0: 114.1-116.43)"
71 70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 36 2E 31 33 2D 31 31 36 2E 32 38 29 00  # "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 36 2E 34 2D 31 31 36 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 116.4-116.29: @ensures annotation failed"
71 70 75 73 68 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 36 2E 31 33 2D 31 31 36 2E 32 38 29 00  # "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 36 2E 34 2D 31 31 36 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 116.4-116.29: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 39 2E 34 2D 31 31 39 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 30 2E 31 34 2D 31 32 30 2E 32 39 29 00  # "qpop__1 (lib/stack_of_queue_of_string.c0: 120.14-120.29)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 30 2E 34 2D 31 32 30 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 120.4-120.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 70 6F 70 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 31 38 2E 31 2D 31 32 31 2E 34 33 29 00  # "qpop__1 (lib/stack_of_queue_of_string.c0: 118.1-121.43)"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 31 2E 34 2D 31 32 31 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/stack_of_queue_of_string.c0: 121.4-121.28: @ensures annotation failed"
6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 34 2E 34 2D 31 32 34 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/stack_of_queue_of_string.c0: 124.4-124.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
71 73 74 61 63 6B 5F 70 72 69 6E 74 5F 5F 31 20 28 6C 69 62 2F 73 74 61 63 6B 5F 6F 66 5F 71 75 65 75 65 5F 6F 66 5F 73 74 72 69 6E 67 2E 63 30 3A 20 31 32 33 2E 31 2D 31 32 34 2E 34 33 29 00  # "qstack_print__1 (lib/stack_of_queue_of_string.c0: 123.1-124.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 30 2E 36 2D 31 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 33 34 2D 31 35 2E 35 34 29 00  # "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 31 35 2E 36 2D 31 35 2E 35 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 31 36 2D 32 31 2E 33 30 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 31 2E 36 2D 32 31 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
66 69 6C 65 5F 63 6C 6F 73 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 31 34 2D 32 32 2E 32 38 29 00  # "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 32 2E 36 2D 32 32 2E 32 39 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 36 2E 36 2D 32 36 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 65 6F 66 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 31 36 2D 32 37 2E 33 30 29 00  # "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 31 36 2D 33 35 2E 33 30 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 35 2E 36 2D 33 35 2E 33 31 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
66 69 6C 65 5F 72 65 61 64 6C 69 6E 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 31 36 2D 33 36 2E 32 37 29 00  # "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 66 69 6C 65 2E 68 30 3A 20 33 36 2E 36 2D 33 36 2E 32 38 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 35 2E 36 2D 32 35 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 25.6-25.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 5F 5F 31 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 36 2E 31 36 2D 32 36 2E 32 31 29 00  # "input_line__1 (lib/tokenize.c0: 26.16-26.21)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 36 2E 36 2D 32 36 2E 32 32 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 26.6-26.22: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 5F 5F 31 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 34 2E 31 2D 32 36 2E 32 38 29 00  # "input_line__1 (lib/tokenize.c0: 24.1-26.28)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 30 2E 36 2D 33 30 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 30.6-30.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 66 69 6C 65 5F 5F 31 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 32 39 2E 31 2D 33 30 2E 33 30 29 00  # "input_file__1 (lib/tokenize.c0: 29.1-30.30)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 34 2E 36 2D 33 34 2E 32 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 34.6-34.25: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 73 74 72 69 6E 67 5F 5F 31 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 33 33 2E 31 2D 33 34 2E 33 30 29 00  # "input_string__1 (lib/tokenize.c0: 33.1-34.30)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 34 37 2E 34 2D 34 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 47.4-47.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 34 39 2E 31 33 2D 34 39 2E 32 39 29 00  # "input_string (lib/tokenize.c0: 49.13-49.29)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 32 2E 38 2D 35 32 2E 34 36 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0: 52.8-52.46: @loop_invariant annotation failed"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 36 2E 31 32 2D 35 36 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0: 56.12-56.48: @loop_invariant annotation failed"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 35 2E 33 39 2D 35 35 2E 35 38 29 00  # "input_string (lib/tokenize.c0: 55.39-55.58)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 35 35 2E 32 35 2D 35 35 2E 35 39 29 00  # "input_string (lib/tokenize.c0: 55.25-55.59)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 31 2E 31 32 2D 36 31 2E 34 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "lib/tokenize.c0: 61.12-61.48: @loop_invariant annotation failed"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 30 2E 34 30 2D 36 30 2E 35 39 29 00  # "input_string (lib/tokenize.c0: 60.40-60.59)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 30 2E 32 36 2D 36 30 2E 36 30 29 00  # "input_string (lib/tokenize.c0: 60.26-60.60)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 33 2E 32 37 2D 36 33 2E 34 38 29 00  # "input_string (lib/tokenize.c0: 63.27-63.48)"
69 6E 70 75 74 5F 73 74 72 69 6E 67 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 36 33 2E 32 30 2D 36 33 2E 34 39 29 00  # "input_string (lib/tokenize.c0: 63.20-63.49)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 32 2E 34 2D 37 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 72.4-72.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 33 2E 31 34 2D 37 33 2E 31 39 29 00  # "input_line (lib/tokenize.c0: 73.14-73.19)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 33 2E 34 2D 37 33 2E 32 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 73.4-73.20: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 35 2E 31 37 2D 37 35 2E 32 37 29 00  # "input_line (lib/tokenize.c0: 75.17-75.27)"
69 6E 70 75 74 5F 6C 69 6E 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 37 36 2E 33 2D 37 36 2E 32 34 29 00  # "input_line (lib/tokenize.c0: 76.3-76.24)"
6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 32 2E 34 2D 38 32 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "lib/tokenize.c0: 82.4-82.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
69 6E 70 75 74 5F 66 69 6C 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 34 2E 31 37 2D 38 34 2E 33 32 29 00  # "input_file (lib/tokenize.c0: 84.17-84.32)"
45 72 72 6F 72 3A 20 66 69 6C 65 20 64 6F 65 73 20 6E 6F 74 20 65 78 69 73 74 00  # "Error: file does not exist"
69 6E 70 75 74 5F 66 69 6C 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 36 2E 31 31 2D 38 36 2E 32 35 29 00  # "input_file (lib/tokenize.c0: 86.11-86.25)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 37 2E 31 39 2D 38 37 2E 33 38 29 00  # "input_file (lib/tokenize.c0: 87.19-87.38)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 38 38 2E 35 2D 38 38 2E 32 36 29 00  # "input_file (lib/tokenize.c0: 88.5-88.26)"
69 6E 70 75 74 5F 66 69 6C 65 20 28 6C 69 62 2F 74 6F 6B 65 6E 69 7A 65 2E 63 30 3A 20 39 30 2E 33 2D 39 30 2E 31 39 29 00  # "input_file (lib/tokenize.c0: 90.3-90.19)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 33 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 74 6F 6B 65 6E 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 33 34 2D 32 33 2E 34 37 29 00  # "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 31 35 2D 32 37 2E 33 34 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 37 2E 36 2D 32 37 2E 33 35 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 61 72 73 65 5F 69 6E 74 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 33 34 2D 32 38 2E 34 37 29 00  # "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 70 61 72 73 65 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 38 2E 36 2D 38 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 31 34 2E 36 2D 31 34 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 32 30 2E 36 2D 32 30 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 61 72 67 73 2E 68 30 3A 20 33 34 2E 36 2D 33 34 2E 37 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
69 6E 74 5F 73 69 7A 65 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 38 2E 31 2D 39 2E 33 33 29 00  # "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 39 2E 36 2D 39 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
69 6E 74 5F 6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 30 2E 31 2D 31 31 2E 34 32 29 00  # "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 31 2E 36 2D 31 31 2E 33 36 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
69 6E 74 5F 6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 32 2E 31 2D 31 33 2E 34 33 29 00  # "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 33 2E 36 2D 31 33 2E 33 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 31 39 2D 31 37 2E 32 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 37 2E 36 2D 31 37 2E 32 39 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
61 62 73 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 36 2E 31 2D 31 39 2E 34 38 29 00  # "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 38 2E 36 2D 31 38 2E 32 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 31 39 2E 36 2D 31 39 2E 34 32 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
6D 61 78 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 32 2E 31 2D 32 34 2E 34 39 29 00  # "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 33 2E 36 2D 32 33 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 34 2E 36 2D 32 34 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
6D 69 6E 5F 5F 31 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 37 2E 31 2D 32 39 2E 34 39 29 00  # "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 38 2E 36 2D 32 38 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 68 30 3A 20 32 39 2E 36 2D 32 39 2E 34 33 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 33 2E 34 2D 31 33 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 31 34 2E 34 2D 31 34 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 31 2E 34 2D 32 31 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 32 2E 34 2D 32 32 2E 34 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
61 62 73 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 31 37 2D 32 39 2E 32 36 29 00  # "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 32 39 2E 34 2D 32 39 2E 32 37 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 30 2E 34 2D 33 30 2E 32 35 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 33 37 2E 34 2D 33 37 2E 33 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 32 31 2D 34 30 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 30 2E 31 32 2D 34 30 2E 33 39 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 32 31 2D 34 32 2E 33 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
68 65 78 64 69 67 32 63 68 61 72 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 32 2E 31 32 2D 34 32 2E 34 34 29 00  # "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 31 2E 31 38 2D 35 31 2E 32 38 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 35 2E 38 2D 35 35 2E 34 35 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 35 37 2E 32 33 2D 35 37 2E 34 33 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 36 30 2E 31 30 2D 36 30 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 31 32 2D 34 39 2E 33 34 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
69 6E 74 32 68 65 78 20 28 2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 30 2D 34 39 2E 35 30 29 00  # "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
2F 61 66 73 2F 61 6E 64 72 65 77 2F 63 6F 75 72 73 65 2F 31 35 2F 31 32 32 2F 6C 69 62 2F 75 74 69 6C 2E 63 30 3A 20 34 39 2E 34 2D 34 39 2E 35 31 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
69 6E 69 74 5F 73 74 61 74 65 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 2E 31 35 2D 33 30 2E 32 35 29 00  # "init_state (clac.c0: 30.15-30.25)"
69 6E 69 74 5F 73 74 61 74 65 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 2E 31 37 2D 33 31 2E 32 39 29 00  # "init_state (clac.c0: 31.17-31.29)"
63 6C 61 63 2E 63 30 3A 20 32 37 2E 34 2D 32 37 2E 32 38 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 27.4-27.28: @ensures annotation failed"
63 6C 61 63 2E 63 30 3A 20 33 38 2E 34 2D 33 38 2E 32 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 38.4-38.20: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
63 6C 61 63 2E 63 30 3A 20 35 38 2E 34 2D 35 38 2E 35 30 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac.c0: 58.4-58.50: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 36 31 2E 31 31 2D 36 31 2E 32 35 29 00  # "eval (clac.c0: 61.11-61.25)"
00  # ""
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 36 33 2E 31 30 2D 36 33 2E 32 34 29 00  # "eval (clac.c0: 63.10-63.24)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 36 34 2E 31 33 2D 36 34 2E 31 39 29 00  # "eval (clac.c0: 64.13-64.19)"
70 72 69 6E 74 00  # "print"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 36 39 2E 39 2D 36 39 2E 33 35 29 00  # "eval (clac.c0: 69.9-69.35)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 30 2E 31 32 2D 37 30 2E 32 36 29 00  # "eval (clac.c0: 70.12-70.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 31 2E 31 37 2D 37 31 2E 32 33 29 00  # "eval (clac.c0: 71.17-71.23)"
00  # ""
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 32 2E 39 2D 37 32 2E 32 36 29 00  # "eval (clac.c0: 72.9-72.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 32 2E 39 2D 37 32 2E 32 36 29 00  # "eval (clac.c0: 72.9-72.26)"
0A 00  # "\n"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 32 2E 39 2D 37 32 2E 32 36 29 00  # "eval (clac.c0: 72.9-72.26)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
71 75 69 74 00  # "quit"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 37 39 2E 31 34 2D 37 39 2E 33 39 29 00  # "eval (clac.c0: 79.14-79.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 35 39 2E 33 32 2D 35 39 2E 34 36 29 00  # "eval (clac.c0: 59.32-59.46)"
63 6C 61 63 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 59.4-59.47: @ensures annotation failed"
2B 00  # "+"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 38 34 2E 31 34 2D 38 34 2E 33 36 29 00  # "eval (clac.c0: 84.14-84.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 38 35 2E 31 31 2D 38 35 2E 32 35 29 00  # "eval (clac.c0: 85.11-85.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 38 38 2E 31 35 2D 38 38 2E 32 31 29 00  # "eval (clac.c0: 88.15-88.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 38 39 2E 31 31 2D 38 39 2E 32 35 29 00  # "eval (clac.c0: 89.11-89.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 39 32 2E 31 35 2D 39 32 2E 32 31 29 00  # "eval (clac.c0: 92.15-92.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 39 34 2E 37 2D 39 34 2E 31 39 29 00  # "eval (clac.c0: 94.7-94.19)"
2D 00  # "-"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 39 38 2E 31 34 2D 39 38 2E 33 36 29 00  # "eval (clac.c0: 98.14-98.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 39 39 2E 31 31 2D 39 39 2E 32 35 29 00  # "eval (clac.c0: 99.11-99.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 32 2E 31 35 2D 31 30 32 2E 32 31 29 00  # "eval (clac.c0: 102.15-102.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 33 2E 31 31 2D 31 30 33 2E 32 35 29 00  # "eval (clac.c0: 103.11-103.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 36 2E 31 35 2D 31 30 36 2E 32 31 29 00  # "eval (clac.c0: 106.15-106.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 30 38 2E 37 2D 31 30 38 2E 32 36 29 00  # "eval (clac.c0: 108.7-108.26)"
2A 00  # "*"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 31 33 2E 31 34 2D 31 31 33 2E 33 36 29 00  # "eval (clac.c0: 113.14-113.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 31 34 2E 31 31 2D 31 31 34 2E 32 35 29 00  # "eval (clac.c0: 114.11-114.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 31 37 2E 31 35 2D 31 31 37 2E 32 31 29 00  # "eval (clac.c0: 117.15-117.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 31 38 2E 31 31 2D 31 31 38 2E 32 35 29 00  # "eval (clac.c0: 118.11-118.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 32 31 2E 31 35 2D 31 32 31 2E 32 31 29 00  # "eval (clac.c0: 121.15-121.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 32 33 2E 37 2D 31 32 33 2E 32 33 29 00  # "eval (clac.c0: 123.7-123.23)"
2A 2A 00  # "**"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 32 37 2E 31 34 2D 31 32 37 2E 33 37 29 00  # "eval (clac.c0: 127.14-127.37)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 32 38 2E 31 31 2D 31 32 38 2E 32 35 29 00  # "eval (clac.c0: 128.11-128.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 31 2E 31 35 2D 31 33 31 2E 32 31 29 00  # "eval (clac.c0: 131.15-131.21)"
6E 65 67 61 74 69 76 65 20 65 78 70 6F 6E 65 6E 74 00  # "negative exponent"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 35 2E 31 31 2D 31 33 35 2E 32 35 29 00  # "eval (clac.c0: 135.11-135.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 38 2E 31 35 2D 31 33 38 2E 32 31 29 00  # "eval (clac.c0: 138.15-138.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 33 39 2E 31 37 2D 31 33 39 2E 32 36 29 00  # "eval (clac.c0: 139.17-139.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 30 2E 37 2D 31 34 30 2E 31 39 29 00  # "eval (clac.c0: 140.7-140.19)"
2F 00  # "/"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 34 2E 31 34 2D 31 34 34 2E 33 36 29 00  # "eval (clac.c0: 144.14-144.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 35 2E 31 31 2D 31 34 35 2E 32 35 29 00  # "eval (clac.c0: 145.11-145.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 34 38 2E 31 35 2D 31 34 38 2E 32 31 29 00  # "eval (clac.c0: 148.15-148.21)"
44 69 76 69 73 69 6F 6E 20 62 79 20 7A 65 72 6F 2C 20 6E 6F 74 20 76 61 6C 69 64 21 00  # "Division by zero, not valid!"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 35 32 2E 31 31 2D 31 35 32 2E 32 35 29 00  # "eval (clac.c0: 152.11-152.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 35 35 2E 31 35 2D 31 35 35 2E 32 31 29 00  # "eval (clac.c0: 155.15-155.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 35 36 2E 31 36 2D 31 35 36 2E 32 35 29 00  # "eval (clac.c0: 156.16-156.25)"
69 6E 74 20 6D 69 6E 20 64 69 76 69 64 65 64 20 62 79 20 2D 31 2C 20 6E 6F 74 20 76 61 6C 69 64 21 00  # "int min divided by -1, not valid!"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 30 2E 37 2D 31 36 30 2E 32 34 29 00  # "eval (clac.c0: 160.7-160.24)"
25 00  # "%"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 34 2E 31 34 2D 31 36 34 2E 33 36 29 00  # "eval (clac.c0: 164.14-164.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 35 2E 31 31 2D 31 36 35 2E 32 35 29 00  # "eval (clac.c0: 165.11-165.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 36 38 2E 31 35 2D 31 36 38 2E 32 31 29 00  # "eval (clac.c0: 168.15-168.21)"
4D 6F 64 75 6C 6F 20 62 79 20 7A 65 72 6F 2C 20 6E 6F 74 20 76 61 6C 69 64 21 00  # "Modulo by zero, not valid!"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 32 2E 31 31 2D 31 37 32 2E 32 35 29 00  # "eval (clac.c0: 172.11-172.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 35 2E 31 35 2D 31 37 35 2E 32 31 29 00  # "eval (clac.c0: 175.15-175.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 37 36 2E 31 36 2D 31 37 36 2E 32 35 29 00  # "eval (clac.c0: 176.16-176.25)"
69 6E 74 20 6D 69 6E 20 6D 6F 64 20 62 79 20 2D 31 2C 20 6E 6F 74 20 76 61 6C 69 64 21 00  # "int min mod by -1, not valid!"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 30 2E 37 2D 31 38 30 2E 32 32 29 00  # "eval (clac.c0: 180.7-180.22)"
3C 00  # "<"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 34 2E 31 34 2D 31 38 34 2E 33 36 29 00  # "eval (clac.c0: 184.14-184.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 35 2E 31 31 2D 31 38 35 2E 32 35 29 00  # "eval (clac.c0: 185.11-185.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 38 2E 31 35 2D 31 38 38 2E 32 31 29 00  # "eval (clac.c0: 188.15-188.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 38 39 2E 31 31 2D 31 38 39 2E 32 35 29 00  # "eval (clac.c0: 189.11-189.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 31 39 32 2E 31 35 2D 31 39 32 2E 32 31 29 00  # "eval (clac.c0: 192.15-192.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 30 2E 37 2D 32 30 30 2E 31 39 29 00  # "eval (clac.c0: 200.7-200.19)"
64 72 6F 70 00  # "drop"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 34 2E 31 34 2D 32 30 34 2E 33 39 29 00  # "eval (clac.c0: 204.14-204.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 35 2E 31 31 2D 32 30 35 2E 32 35 29 00  # "eval (clac.c0: 205.11-205.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 30 38 2E 37 2D 32 30 38 2E 31 33 29 00  # "eval (clac.c0: 208.7-208.13)"
73 77 61 70 00  # "swap"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 32 2E 31 34 2D 32 31 32 2E 33 39 29 00  # "eval (clac.c0: 212.14-212.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 33 2E 31 31 2D 32 31 33 2E 32 35 29 00  # "eval (clac.c0: 213.11-213.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 36 2E 31 35 2D 32 31 36 2E 32 31 29 00  # "eval (clac.c0: 216.15-216.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 31 37 2E 31 31 2D 32 31 37 2E 32 35 29 00  # "eval (clac.c0: 217.11-217.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 30 2E 31 35 2D 32 32 30 2E 32 31 29 00  # "eval (clac.c0: 220.15-220.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 31 2E 37 2D 32 32 31 2E 31 37 29 00  # "eval (clac.c0: 221.7-221.17)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 32 2E 37 2D 32 32 32 2E 31 37 29 00  # "eval (clac.c0: 222.7-222.17)"
72 6F 74 00  # "rot"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 36 2E 31 34 2D 32 32 36 2E 33 38 29 00  # "eval (clac.c0: 226.14-226.38)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 32 37 2E 31 31 2D 32 32 37 2E 32 35 29 00  # "eval (clac.c0: 227.11-227.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 30 2E 31 35 2D 32 33 30 2E 32 31 29 00  # "eval (clac.c0: 230.15-230.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 31 2E 31 31 2D 32 33 31 2E 32 35 29 00  # "eval (clac.c0: 231.11-231.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 34 2E 31 35 2D 32 33 34 2E 32 31 29 00  # "eval (clac.c0: 234.15-234.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 35 2E 31 31 2D 32 33 35 2E 32 35 29 00  # "eval (clac.c0: 235.11-235.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 38 2E 31 35 2D 32 33 38 2E 32 31 29 00  # "eval (clac.c0: 238.15-238.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 33 39 2E 37 2D 32 33 39 2E 31 37 29 00  # "eval (clac.c0: 239.7-239.17)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 30 2E 37 2D 32 34 30 2E 31 37 29 00  # "eval (clac.c0: 240.7-240.17)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 31 2E 37 2D 32 34 31 2E 31 37 29 00  # "eval (clac.c0: 241.7-241.17)"
69 66 00  # "if"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 35 2E 31 32 2D 32 34 35 2E 33 35 29 00  # "eval (clac.c0: 245.12-245.35)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 36 2E 31 31 2D 32 34 36 2E 32 35 29 00  # "eval (clac.c0: 246.11-246.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 34 39 2E 31 35 2D 32 34 39 2E 32 31 29 00  # "eval (clac.c0: 249.15-249.21)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 32 2E 31 36 2D 32 35 32 2E 33 30 29 00  # "eval (clac.c0: 252.16-252.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 35 33 2E 31 33 2D 32 35 33 2E 31 39 29 00  # "eval (clac.c0: 253.13-253.19)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 71 75 65 75 65 00  # "not enough elements on queue"
73 6B 69 70 00  # "skip"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 33 2E 31 34 2D 32 36 33 2E 33 39 29 00  # "eval (clac.c0: 263.14-263.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 34 2E 31 31 2D 32 36 34 2E 32 35 29 00  # "eval (clac.c0: 264.11-264.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 36 37 2E 31 35 2D 32 36 37 2E 32 31 29 00  # "eval (clac.c0: 267.15-267.21)"
6E 20 73 68 6F 75 6C 64 20 62 65 20 67 72 65 61 74 65 72 20 74 68 61 6E 20 6F 72 20 65 71 75 61 6C 20 74 6F 20 7A 65 72 6F 21 00  # "n should be greater than or equal to zero!"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 37 32 2E 31 33 2D 32 37 32 2E 32 37 29 00  # "eval (clac.c0: 272.13-272.27)"
75 6E 65 78 70 65 63 74 65 64 20 65 6E 64 20 6F 66 20 69 6E 70 75 74 00  # "unexpected end of input"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 37 35 2E 39 2D 32 37 35 2E 31 35 29 00  # "eval (clac.c0: 275.9-275.15)"
70 69 63 6B 00  # "pick"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 30 2E 31 34 2D 32 38 30 2E 33 39 29 00  # "eval (clac.c0: 280.14-280.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 31 2E 31 31 2D 32 38 31 2E 32 35 29 00  # "eval (clac.c0: 281.11-281.25)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 34 2E 31 35 2D 32 38 34 2E 32 31 29 00  # "eval (clac.c0: 284.15-284.21)"
70 69 63 6B 20 6D 75 73 74 20 62 65 20 70 6F 73 69 74 69 76 65 00  # "pick must be positive"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 38 38 2E 32 31 2D 32 38 38 2E 33 32 29 00  # "eval (clac.c0: 288.21-288.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 30 2E 31 33 2D 32 39 30 2E 32 37 29 00  # "eval (clac.c0: 290.13-290.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 31 2E 32 31 2D 32 39 31 2E 32 37 29 00  # "eval (clac.c0: 291.21-291.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 31 2E 31 31 2D 32 39 31 2E 32 38 29 00  # "eval (clac.c0: 291.11-291.28)"
6E 6F 74 20 65 6E 6F 75 67 68 20 65 6C 65 6D 65 6E 74 73 20 6F 6E 20 73 74 61 63 6B 00  # "not enough elements on stack"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 37 2E 31 38 2D 32 39 37 2E 32 36 29 00  # "eval (clac.c0: 297.18-297.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 38 2E 37 2D 32 39 38 2E 32 30 29 00  # "eval (clac.c0: 298.7-298.20)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 32 39 39 2E 31 34 2D 32 39 39 2E 33 30 29 00  # "eval (clac.c0: 299.14-299.30)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 30 2E 31 37 2D 33 30 30 2E 32 35 29 00  # "eval (clac.c0: 300.17-300.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 30 2E 39 2D 33 30 30 2E 32 36 29 00  # "eval (clac.c0: 300.9-300.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 32 2E 37 2D 33 30 32 2E 32 30 29 00  # "eval (clac.c0: 302.7-302.20)"
3A 00  # ":"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 36 2E 31 34 2D 33 30 36 2E 33 36 29 00  # "eval (clac.c0: 306.14-306.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 30 37 2E 31 31 2D 33 30 37 2E 32 35 29 00  # "eval (clac.c0: 307.11-307.25)"
64 69 64 6E 27 74 20 66 69 6E 64 20 3B 00  # "didn\'t find ;"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 30 2E 32 31 2D 33 31 30 2E 32 37 29 00  # "eval (clac.c0: 310.21-310.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 31 2E 31 31 2D 33 31 31 2E 32 35 29 00  # "eval (clac.c0: 311.11-311.25)"
64 69 64 6E 27 74 20 66 69 6E 64 20 3B 00  # "didn\'t find ;"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 34 2E 32 31 2D 33 31 34 2E 33 32 29 00  # "eval (clac.c0: 314.21-314.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 35 2E 32 34 2D 33 31 35 2E 33 30 29 00  # "eval (clac.c0: 315.24-315.30)"
3B 00  # ";"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 36 2E 31 34 2D 33 31 36 2E 34 32 29 00  # "eval (clac.c0: 316.14-316.42)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 37 2E 39 2D 33 31 37 2E 32 36 29 00  # "eval (clac.c0: 317.9-317.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 31 38 2E 31 33 2D 33 31 38 2E 32 37 29 00  # "eval (clac.c0: 318.13-318.27)"
64 69 64 6E 27 74 20 66 69 6E 64 20 3B 00  # "didn\'t find ;"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 31 2E 31 39 2D 33 32 31 2E 32 35 29 00  # "eval (clac.c0: 321.19-321.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 33 2E 37 2D 33 32 33 2E 33 39 29 00  # "eval (clac.c0: 323.7-323.39)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 37 2E 31 34 2D 33 32 37 2E 33 32 29 00  # "eval (clac.c0: 327.14-327.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 38 2E 31 36 2D 33 32 38 2E 33 34 29 00  # "eval (clac.c0: 328.16-328.34)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 32 39 2E 37 2D 33 32 39 2E 31 38 29 00  # "eval (clac.c0: 329.7-329.18)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 34 2E 31 34 2D 33 34 34 2E 34 30 29 00  # "eval (clac.c0: 344.14-344.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 35 2E 32 30 2D 33 34 35 2E 34 36 29 00  # "eval (clac.c0: 345.20-345.46)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 36 2E 32 32 2D 33 34 36 2E 34 36 29 00  # "eval (clac.c0: 346.22-346.46)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 38 2E 32 30 2D 33 34 38 2E 33 31 29 00  # "eval (clac.c0: 348.20-348.31)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 34 39 2E 31 35 2D 33 34 39 2E 32 39 29 00  # "eval (clac.c0: 349.15-349.29)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 30 2E 32 33 2D 33 35 30 2E 32 39 29 00  # "eval (clac.c0: 350.23-350.29)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 31 2E 39 2D 33 35 31 2E 32 32 29 00  # "eval (clac.c0: 351.9-351.22)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 33 2E 37 2D 33 35 33 2E 32 38 29 00  # "eval (clac.c0: 353.7-353.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 35 2E 31 35 2D 33 35 35 2E 33 32 29 00  # "eval (clac.c0: 355.15-355.32)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 36 2E 31 36 2D 33 35 36 2E 32 35 29 00  # "eval (clac.c0: 356.16-356.25)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 36 2E 39 2D 33 35 36 2E 32 36 29 00  # "eval (clac.c0: 356.9-356.26)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 35 39 2E 31 32 2D 33 35 39 2E 33 36 29 00  # "eval (clac.c0: 359.12-359.36)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 30 2E 32 34 2D 33 36 30 2E 34 30 29 00  # "eval (clac.c0: 360.24-360.40)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 31 2E 31 36 2D 33 36 31 2E 33 33 29 00  # "eval (clac.c0: 361.16-361.33)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 32 2E 31 38 2D 33 36 32 2E 32 37 29 00  # "eval (clac.c0: 362.18-362.27)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 32 2E 31 31 2D 33 36 32 2E 32 38 29 00  # "eval (clac.c0: 362.11-362.28)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 36 38 2E 31 34 2D 33 36 38 2E 34 30 29 00  # "eval (clac.c0: 368.14-368.40)"
6F 70 65 72 61 74 69 6F 6E 20 75 6E 64 65 66 69 6E 65 64 00  # "operation undefined"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 37 32 2E 31 34 2D 33 37 32 2E 33 32 29 00  # "eval (clac.c0: 372.14-372.32)"
75 6E 64 65 66 69 6E 65 64 20 74 6F 6B 65 6E 20 00  # "undefined token "
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 33 37 33 2E 31 33 2D 33 37 33 2E 34 39 29 00  # "eval (clac.c0: 373.13-373.49)"
65 76 61 6C 20 28 63 6C 61 63 2E 63 30 3A 20 35 39 2E 33 32 2D 35 39 2E 34 36 29 00  # "eval (clac.c0: 59.32-59.46)"
63 6C 61 63 2E 63 30 3A 20 35 39 2E 34 2D 35 39 2E 34 37 3A 20 40 65 6E 73 75 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac.c0: 59.4-59.47: @ensures annotation failed"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 31 37 2E 34 2D 31 37 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-main.c0: 17.4-17.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 31 39 2E 37 2D 31 39 2E 32 31 29 00  # "print_top (clac-main.c0: 19.7-19.21)"
53 74 61 63 6B 20 69 73 20 6E 6F 77 20 65 6D 70 74 79 0A 00  # "Stack is now empty\n"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 30 2E 35 2D 32 30 2E 33 35 29 00  # "print_top (clac-main.c0: 20.5-20.35)"
53 74 61 63 6B 20 69 73 20 6E 6F 77 20 5B 00  # "Stack is now ["
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 34 2E 33 2D 32 34 2E 32 37 29 00  # "print_top (clac-main.c0: 24.3-24.27)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 35 2E 31 33 2D 32 35 2E 31 39 29 00  # "print_top (clac-main.c0: 25.13-25.19)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 36 2E 37 2D 32 36 2E 32 31 29 00  # "print_top (clac-main.c0: 26.7-26.21)"
00  # ""
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 35 2D 32 37 2E 32 33 29 00  # "print_top (clac-main.c0: 27.5-27.23)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 35 2D 32 37 2E 32 33 29 00  # "print_top (clac-main.c0: 27.5-27.23)"
5D 00  # "]"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 37 2E 35 2D 32 37 2E 32 33 29 00  # "print_top (clac-main.c0: 27.5-27.23)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 32 38 2E 35 2D 32 38 2E 31 37 29 00  # "print_top (clac-main.c0: 28.5-28.17)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 32 2E 31 34 2D 33 32 2E 32 30 29 00  # "print_top (clac-main.c0: 32.14-32.20)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 33 2E 38 2D 33 33 2E 32 32 29 00  # "print_top (clac-main.c0: 33.8-33.22)"
2E 2E 2C 00  # "..,"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 33 2E 32 34 2D 33 33 2E 33 37 29 00  # "print_top (clac-main.c0: 33.24-33.37)"
00  # ""
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 33 32 29 00  # "print_top (clac-main.c0: 34.3-34.32)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 33 32 29 00  # "print_top (clac-main.c0: 34.3-34.32)"
2C 00  # ","
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 33 32 29 00  # "print_top (clac-main.c0: 34.3-34.32)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 33 32 29 00  # "print_top (clac-main.c0: 34.3-34.32)"
5D 0A 00  # "]\n"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 34 2E 33 2D 33 34 2E 33 32 29 00  # "print_top (clac-main.c0: 34.3-34.32)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 35 2E 33 2D 33 35 2E 31 36 29 00  # "print_top (clac-main.c0: 35.3-35.16)"
70 72 69 6E 74 5F 74 6F 70 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 33 36 2E 33 2D 33 36 2E 31 35 29 00  # "print_top (clac-main.c0: 36.3-36.15)"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 34 31 2E 34 2D 34 31 2E 32 33 3A 20 40 72 65 71 75 69 72 65 73 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 0A 00  # "clac-main.c0: 41.4-41.23: @requires annotation failed\n"
3A 20 63 61 6C 6C 65 72 20 6C 6F 63 61 74 69 6F 6E 00  # ": caller location"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 34 34 2E 31 35 2D 34 34 2E 32 36 29 00  # "top_level (clac-main.c0: 44.15-44.26)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 34 35 2E 31 36 2D 34 35 2E 32 38 29 00  # "top_level (clac-main.c0: 45.16-45.28)"
43 6C 61 63 20 74 6F 70 20 6C 65 76 65 6C 0A 00  # "Clac top level\n"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 34 38 2E 33 2D 34 38 2E 32 39 29 00  # "top_level (clac-main.c0: 48.3-48.29)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 35 31 2E 39 2D 35 31 2E 32 33 29 00  # "top_level (clac-main.c0: 51.9-51.23)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 35 32 2E 31 32 2D 35 32 2E 31 37 29 00  # "top_level (clac-main.c0: 52.12-52.17)"
63 6C 61 63 3E 3E 20 00  # "clac>> "
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 35 33 2E 39 2D 35 33 2E 32 36 29 00  # "top_level (clac-main.c0: 53.9-53.26)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 35 34 2E 39 2D 35 34 2E 31 36 29 00  # "top_level (clac-main.c0: 54.9-54.16)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 35 35 2E 39 2D 35 35 2E 32 32 29 00  # "top_level (clac-main.c0: 55.9-55.22)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 36 31 2E 31 32 2D 36 31 2E 32 36 29 00  # "top_level (clac-main.c0: 61.12-61.26)"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 36 32 2E 32 34 2D 36 32 2E 33 38 29 00  # "top_level (clac-main.c0: 62.24-62.38)"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 36 32 2E 38 2D 36 32 2E 33 39 3A 20 40 61 73 73 65 72 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-main.c0: 62.8-62.39: @assert annotation failed"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 36 33 2E 35 2D 36 33 2E 31 37 29 00  # "top_level (clac-main.c0: 63.5-63.17)"
42 79 65 21 0A 00  # "Bye!\n"
74 6F 70 5F 6C 65 76 65 6C 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 36 36 2E 33 2D 36 36 2E 31 39 29 00  # "top_level (clac-main.c0: 66.3-66.19)"
28 70 72 6F 67 72 61 6D 20 73 74 61 72 74 29 00  # "(program start)"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 37 33 2E 31 37 2D 37 33 2E 32 39 29 00  # "main (clac-main.c0: 73.17-73.29)"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 37 35 2E 31 35 2D 37 35 2E 32 36 29 00  # "main (clac-main.c0: 75.15-75.26)"
63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 37 38 2E 36 2D 37 38 2E 32 38 3A 20 40 6C 6F 6F 70 5F 69 6E 76 61 72 69 61 6E 74 20 61 6E 6E 6F 74 61 74 69 6F 6E 20 66 61 69 6C 65 64 00  # "clac-main.c0: 78.6-78.28: @loop_invariant annotation failed"
4C 6F 61 64 69 6E 67 20 66 69 6C 65 20 00  # "Loading file "
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 34 32 29 00  # "main (clac-main.c0: 81.5-81.42)"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 34 32 29 00  # "main (clac-main.c0: 81.5-81.42)"
0A 00  # "\n"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 38 31 2E 35 2D 38 31 2E 34 32 29 00  # "main (clac-main.c0: 81.5-81.42)"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 38 32 2E 35 2D 38 32 2E 33 33 29 00  # "main (clac-main.c0: 82.5-82.33)"
6D 61 69 6E 20 28 63 6C 61 63 2D 6D 61 69 6E 2E 63 30 3A 20 38 35 2E 33 2D 38 35 2E 31 35 29 00  # "main (clac-main.c0: 85.3-85.15)"

00 72             # function count
# function_pool

#<main>
00                # number of arguments = 0
07                # number of local variables = 7
00 9C             # code length = 156 bytes
14 6B 26 # aldc 27430         # s[27430] = "(program start)"
36 00    # vstore 0           # _caller = "(program start)";
14 6B 36 # aldc 27446         # s[27446] = "main (clac-main.c0: 73.17-73.29)"
B8 00 5E # invokestatic 94    # args_parse__1("main (clac-main.c0: 73.17-73.29)")
36 02    # vstore 2           # args = args_parse__1("main (clac-main.c0: 73.17-73.29)");
15 02    # vload 2            # args
62 00    # aaddf 0            # &args->argc
2E       # imload             # args->argc
36 03    # vstore 3           # argc = args->argc;
14 6B 57 # aldc 27479         # s[27479] = "main (clac-main.c0: 75.15-75.26)"
B8 00 23 # invokestatic 35    # queue_new__1("main (clac-main.c0: 75.15-75.26)")
36 04    # vstore 4           # Q = queue_new__1("main (clac-main.c0: 75.15-75.26)");
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <799:loop>
A7 00 03 # goto +3            # goto <800:body>
# <800:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <802:cond_true>
A7 00 08 # goto +8            # goto <803:cond_false>
# <802:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <804:cond_end>
# <803:cond_false>
10 00    # bipush 0           # false
# <804:cond_end>
14 6B 78 # aldc 27512         # s[27512] = "clac-main.c0: 78.6-78.28: @loop_invariant annotation failed"
CF       # assert             # assert (0 <= i) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # argc
A1 00 06 # if_icmplt +6       # if (i < argc) goto <805:then>
A7 00 47 # goto +71           # goto <806:else>
# <805:then>
15 02    # vload 2            # args
62 08    # aaddf 8            # &args->argv
2F       # amload             # args->argv
15 05    # vload 5            # i
63       # aadds              # &args->argv[i]
2F       # amload             # args->argv[i]
36 06    # vstore 6           # filename = args->argv[i];
14 6B B4 # aldc 27572         # s[27572] = "Loading file "
14 6B C2 # aldc 27586         # s[27586] = "main (clac-main.c0: 81.5-81.42)"
B8 00 10 # invokestatic 16    # print__1("Loading file ", "main (clac-main.c0: 81.5-81.42)")
57       # pop                # (ignore result)
15 06    # vload 6            # filename
14 6B E2 # aldc 27618         # s[27618] = "main (clac-main.c0: 81.5-81.42)"
B8 00 10 # invokestatic 16    # print__1(filename, "main (clac-main.c0: 81.5-81.42)")
57       # pop                # (ignore result)
14 6C 02 # aldc 27650         # s[27650] = "\n"
14 6C 04 # aldc 27652         # s[27652] = "main (clac-main.c0: 81.5-81.42)"
B8 00 10 # invokestatic 16    # print__1("\n", "main (clac-main.c0: 81.5-81.42)")
57       # pop                # (ignore result)
15 02    # vload 2            # args
62 08    # aaddf 8            # &args->argv
2F       # amload             # args->argv
15 05    # vload 5            # i
63       # aadds              # &args->argv[i]
2F       # amload             # args->argv[i]
15 04    # vload 4            # Q
14 6C 24 # aldc 27684         # s[27684] = "main (clac-main.c0: 82.5-82.33)"
B8 00 51 # invokestatic 81    # input_file__1(args->argv[i], Q, "main (clac-main.c0: 82.5-82.33)")
57       # pop                # (ignore result)
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <807:endif>
# <806:else>
A7 00 06 # goto +6            # break
# <807:endif>
A7 FF 97 # goto -105          # goto <799:loop>
# <801:exit>
15 04    # vload 4            # Q
14 6C 44 # aldc 27716         # s[27716] = "main (clac-main.c0: 85.3-85.15)"
B8 00 71 # invokestatic 113   # top_level(Q, "main (clac-main.c0: 85.3-85.15)")
57       # pop                # (ignore result)
10 00    # bipush 0           # 0
36 01    # vstore 1           # _result = 0;
15 01    # vload 1            # _result
B0       # return             # 


#<string_length__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 00 # invokenative 0     # string_length(s)
36 02    # vstore 2           # _result = string_length(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_charat__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # idx
A4 00 06 # if_icmple +6       # if (0 <= idx) goto <00:cond_true>
A7 00 1D # goto +29           # goto <01:cond_false>
# <00:cond_true>
15 01    # vload 1            # idx
15 00    # vload 0            # s
14 00 00 # aldc 0             # s[0] = "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")
A1 00 06 # if_icmplt +6       # if (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)")) goto <03:cond_true>
A7 00 08 # goto +8            # goto <04:cond_false>
# <03:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <05:cond_end>
# <04:cond_false>
10 00    # bipush 0           # false
# <05:cond_end>
A7 00 05 # goto +5            # goto <02:cond_end>
# <01:cond_false>
10 00    # bipush 0           # false
# <02:cond_end>
14 00 48 # aldc 72            # s[72] = "/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 00 9A # aldc 154           # s[154] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 19.6-19.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= idx) && (idx < string_length__1(s, "string_charat__1 (/afs/andrew/course/15/122/lib/string.h0: 19.33-19.49)"))) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # idx
B7 00 02 # invokenative 2     # string_charat(s, idx)
36 03    # vstore 3           # _result = string_charat(s, idx);
15 03    # vload 3            # _result
B0       # return             # 


#<string_join__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 36             # code length = 54 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 01 # invokenative 1     # string_join(a, b)
36 03    # vstore 3           # _result = string_join(a, b);
15 03    # vload 3            # _result
14 00 AC # aldc 172           # s[172] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)")
15 00    # vload 0            # a
14 00 F2 # aldc 242           # s[242] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)"
B8 00 01 # invokestatic 1     # string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)")
15 01    # vload 1            # b
14 01 38 # aldc 312           # s[312] = "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"
B8 00 01 # invokestatic 1     # string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)")
60       # iadd               # (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) goto <06:cond_true>
A7 00 08 # goto +8            # goto <07:cond_false>
# <06:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <08:cond_end>
# <07:cond_false>
10 00    # bipush 0           # false
# <08:cond_end>
14 01 7E # aldc 382           # s[382] = "/afs/andrew/course/15/122/lib/string.h0: 23.6-24.55: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 23.14-23.36)") == (string_length__1(a, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.19-24.35)") + string_length__1(b, "string_join__1 (/afs/andrew/course/15/122/lib/string.h0: 24.38-24.54)"))) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_sub__1>
04                # number of arguments = 4
05                # number of local variables = 5
00 6B             # code length = 107 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # start
A4 00 06 # if_icmple +6       # if (0 <= start) goto <12:and>
A7 00 27 # goto +39           # goto <10:cond_false>
# <12:and>
15 01    # vload 1            # start
15 02    # vload 2            # end
A4 00 06 # if_icmple +6       # if (start <= end) goto <09:cond_true>
A7 00 1D # goto +29           # goto <10:cond_false>
# <09:cond_true>
15 02    # vload 2            # end
15 00    # vload 0            # a
14 01 CE # aldc 462           # s[462] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"
B8 00 01 # invokestatic 1     # string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")
A4 00 06 # if_icmple +6       # if (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)")) goto <13:cond_true>
A7 00 08 # goto +8            # goto <14:cond_false>
# <13:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <15:cond_end>
# <14:cond_false>
10 00    # bipush 0           # false
# <15:cond_end>
A7 00 05 # goto +5            # goto <11:cond_end>
# <10:cond_false>
10 00    # bipush 0           # false
# <11:cond_end>
14 02 13 # aldc 531           # s[531] = "/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 02 65 # aldc 613           # s[613] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 31.6-31.69: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((0 <= start) && (start <= end)) && (end <= string_length__1(a, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 31.52-31.68)"))) [failure message on stack]
15 00    # vload 0            # a
15 01    # vload 1            # start
15 02    # vload 2            # end
B7 00 03 # invokenative 3     # string_sub(a, start, end)
36 04    # vstore 4           # _result = string_sub(a, start, end);
15 04    # vload 4            # _result
14 02 77 # aldc 631           # s[631] = "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)")
15 02    # vload 2            # end
15 01    # vload 1            # start
64       # isub               # (end - start)
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) goto <16:cond_true>
A7 00 08 # goto +8            # goto <17:cond_false>
# <16:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <18:cond_end>
# <17:cond_false>
10 00    # bipush 0           # false
# <18:cond_end>
14 02 BC # aldc 700           # s[700] = "/afs/andrew/course/15/122/lib/string.h0: 32.6-32.52: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_sub__1 (/afs/andrew/course/15/122/lib/string.h0: 32.14-32.36)") == (end - start)) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<string_equal__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 0C             # code length = 12 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 04 # invokenative 4     # string_equal(a, b)
36 03    # vstore 3           # _result = string_equal(a, b);
15 03    # vload 3            # _result
B0       # return             # 


#<string_compare__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 30             # code length = 48 bytes
15 00    # vload 0            # a
15 01    # vload 1            # b
B7 00 05 # invokenative 5     # string_compare(a, b)
36 03    # vstore 3           # _result = string_compare(a, b);
10 FF    # bipush -1          # -1
15 03    # vload 3            # _result
A4 00 06 # if_icmple +6       # if (-(1) <= _result) goto <19:cond_true>
A7 00 17 # goto +23           # goto <20:cond_false>
# <19:cond_true>
15 03    # vload 3            # _result
10 01    # bipush 1           # 1
A4 00 06 # if_icmple +6       # if (_result <= 1) goto <22:cond_true>
A7 00 08 # goto +8            # goto <23:cond_false>
# <22:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <24:cond_end>
# <23:cond_false>
10 00    # bipush 0           # false
# <24:cond_end>
A7 00 05 # goto +5            # goto <21:cond_end>
# <20:cond_false>
10 00    # bipush 0           # false
# <21:cond_end>
14 03 0C # aldc 780           # s[780] = "/afs/andrew/course/15/122/lib/string.h0: 37.6-37.44: @ensures annotation failed"
CF       # assert             # assert ((-(1) <= _result) && (_result <= 1)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<string_fromint__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # i
B7 00 06 # invokenative 6     # string_fromint(i)
36 02    # vstore 2           # _result = string_fromint(i);
15 02    # vload 2            # _result
B0       # return             # 


#<string_frombool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # b
B7 00 07 # invokenative 7     # string_frombool(b)
36 02    # vstore 2           # _result = string_frombool(b);
15 02    # vload 2            # _result
B0       # return             # 


#<string_fromchar__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 62             # code length = 98 bytes
15 00    # vload 0            # c
10 00    # bipush 0           # '\000'
A0 00 06 # if_cmpne +6        # if (c != '\0') goto <25:cond_true>
A7 00 08 # goto +8            # goto <26:cond_false>
# <25:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <27:cond_end>
# <26:cond_false>
10 00    # bipush 0           # false
# <27:cond_end>
14 03 5C # aldc 860           # s[860] = "/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 03 AE # aldc 942           # s[942] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 43.6-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (c != '\0') [failure message on stack]
15 00    # vload 0            # c
B7 00 08 # invokenative 8     # string_fromchar(c)
36 02    # vstore 2           # _result = string_fromchar(c);
15 02    # vload 2            # _result
14 03 C0 # aldc 960           # s[960] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)")
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) goto <28:cond_true>
A7 00 08 # goto +8            # goto <29:cond_false>
# <28:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <30:cond_end>
# <29:cond_false>
10 00    # bipush 0           # false
# <30:cond_end>
14 04 0A # aldc 1034          # s[1034] = "/afs/andrew/course/15/122/lib/string.h0: 44.6-44.42: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 44.14-44.36)") == 1) [failure message on stack]
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
14 04 5A # aldc 1114          # s[1114] = "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)"
B8 00 02 # invokestatic 2     # string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)")
15 00    # vload 0            # c
9F 00 06 # if_cmpeq +6        # if (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) goto <31:cond_true>
A7 00 08 # goto +8            # goto <32:cond_false>
# <31:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <33:cond_end>
# <32:cond_false>
10 00    # bipush 0           # false
# <33:cond_end>
14 04 A4 # aldc 1188          # s[1188] = "/afs/andrew/course/15/122/lib/string.h0: 45.6-45.45: @ensures annotation failed"
CF       # assert             # assert (string_charat__1(_result, 0, "string_fromchar__1 (/afs/andrew/course/15/122/lib/string.h0: 45.14-45.39)") == c) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_tolower__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 09 # invokenative 9     # string_tolower(s)
36 02    # vstore 2           # _result = string_tolower(s);
15 02    # vload 2            # _result
B0       # return             # 


#<string_terminated__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3C             # code length = 60 bytes
10 00    # bipush 0           # 0
15 01    # vload 1            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <34:cond_true>
A7 00 18 # goto +24           # goto <35:cond_false>
# <34:cond_true>
15 01    # vload 1            # n
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if (n <= \length(A)) goto <37:cond_true>
A7 00 08 # goto +8            # goto <38:cond_false>
# <37:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <39:cond_end>
# <38:cond_false>
10 00    # bipush 0           # false
# <39:cond_end>
A7 00 05 # goto +5            # goto <36:cond_end>
# <35:cond_false>
10 00    # bipush 0           # false
# <36:cond_end>
14 04 F4 # aldc 1268          # s[1268] = "/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 05 46 # aldc 1350          # s[1350] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 52.6-52.41: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= \length(A))) [failure message on stack]
15 00    # vload 0            # A
15 01    # vload 1            # n
B7 00 0A # invokenative 10    # string_terminated(A, n)
36 03    # vstore 3           # _result = string_terminated(A, n);
15 03    # vload 3            # _result
B0       # return             # 


#<string_to_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 40             # code length = 64 bytes
15 00    # vload 0            # s
B7 00 0B # invokenative 11    # string_to_chararray(s)
36 02    # vstore 2           # _result = string_to_chararray(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 05 58 # aldc 1368          # s[1368] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)
A2 00 06 # if_icmpge +6       # if (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) goto <40:cond_true>
A7 00 08 # goto +8            # goto <41:cond_false>
# <40:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <42:cond_end>
# <41:cond_false>
10 00    # bipush 0           # false
# <42:cond_end>
14 05 A6 # aldc 1446          # s[1446] = "/afs/andrew/course/15/122/lib/string.h0: 56.6-56.55: @ensures annotation failed"
CF       # assert             # assert (\length(_result) >= (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 56.34-56.50)") + 1)) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # s
14 05 F6 # aldc 1526          # s[1526] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)"
B8 00 01 # invokestatic 1     # string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1)
14 06 44 # aldc 1604          # s[1604] = "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)"
B8 00 0B # invokestatic 11    # string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)")
14 06 92 # aldc 1682          # s[1682] = "/afs/andrew/course/15/122/lib/string.h0: 57.6-57.63: @ensures annotation failed"
CF       # assert             # assert string_terminated__1(_result, (string_length__1(s, "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.41-57.57)") + 1), "string_to_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 57.14-57.62)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<string_from_chararray__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # A
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
14 06 E2 # aldc 1762          # s[1762] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)"
B8 00 0B # invokestatic 11    # string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)")
14 07 32 # aldc 1842          # s[1842] = "/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 07 84 # aldc 1924          # s[1924] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 62.6-62.48: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert string_terminated__1(A, \length(A), "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 62.15-62.47)") [failure message on stack]
15 00    # vload 0            # A
B7 00 0C # invokenative 12    # string_from_chararray(A)
36 02    # vstore 2           # _result = string_from_chararray(A);
15 02    # vload 2            # _result
14 07 96 # aldc 1942          # s[1942] = "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)")
10 01    # bipush 1           # 1
60       # iadd               # (string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1)
15 00    # vload 0            # A
BE       # arraylength        # \length(A)
A4 00 06 # if_icmple +6       # if ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) goto <43:cond_true>
A7 00 08 # goto +8            # goto <44:cond_false>
# <43:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <45:cond_end>
# <44:cond_false>
10 00    # bipush 0           # false
# <45:cond_end>
14 07 E6 # aldc 2022          # s[2022] = "/afs/andrew/course/15/122/lib/string.h0: 63.6-63.55: @ensures annotation failed"
CF       # assert             # assert ((string_length__1(_result, "string_from_chararray__1 (/afs/andrew/course/15/122/lib/string.h0: 63.14-63.36)") + 1) <= \length(A)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_ord__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2E             # code length = 46 bytes
15 00    # vload 0            # c
B7 00 0D # invokenative 13    # char_ord(c)
36 02    # vstore 2           # _result = char_ord(c);
10 00    # bipush 0           # 0
15 02    # vload 2            # _result
A4 00 06 # if_icmple +6       # if (0 <= _result) goto <46:cond_true>
A7 00 17 # goto +23           # goto <47:cond_false>
# <46:cond_true>
15 02    # vload 2            # _result
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (_result <= 127) goto <49:cond_true>
A7 00 08 # goto +8            # goto <50:cond_false>
# <49:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <51:cond_end>
# <50:cond_false>
10 00    # bipush 0           # false
# <51:cond_end>
A7 00 05 # goto +5            # goto <48:cond_end>
# <47:cond_false>
10 00    # bipush 0           # false
# <48:cond_end>
14 08 36 # aldc 2102          # s[2102] = "/afs/andrew/course/15/122/lib/string.h0: 67.6-67.45: @ensures annotation failed"
CF       # assert             # assert ((0 <= _result) && (_result <= 127)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<char_chr__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # n
A4 00 06 # if_icmple +6       # if (0 <= n) goto <52:cond_true>
A7 00 17 # goto +23           # goto <53:cond_false>
# <52:cond_true>
15 00    # vload 0            # n
10 7F    # bipush 127         # 127
A4 00 06 # if_icmple +6       # if (n <= 127) goto <55:cond_true>
A7 00 08 # goto +8            # goto <56:cond_false>
# <55:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <57:cond_end>
# <56:cond_false>
10 00    # bipush 0           # false
# <57:cond_end>
A7 00 05 # goto +5            # goto <54:cond_end>
# <53:cond_false>
10 00    # bipush 0           # false
# <54:cond_end>
14 08 86 # aldc 2182          # s[2182] = "/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 08 D8 # aldc 2264          # s[2264] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/string.h0: 69.6-69.34: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= n) && (n <= 127)) [failure message on stack]
15 00    # vload 0            # n
B7 00 0E # invokenative 14    # char_chr(n)
36 02    # vstore 2           # _result = char_chr(n);
15 02    # vload 2            # _result
B0       # return             # 


#<print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 0F # invokenative 15    # print(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<println__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # s
B7 00 10 # invokenative 16    # println(s)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printint__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # i
B7 00 11 # invokenative 17    # printint(i)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printbool__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # b
B7 00 12 # invokenative 18    # printbool(b)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<printchar__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 0C             # code length = 12 bytes
15 00    # vload 0            # c
B7 00 13 # invokenative 19    # printchar(c)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<flush__1>
01                # number of arguments = 1
01                # number of local variables = 1
00 0A             # code length = 10 bytes
B7 00 14 # invokenative 20    # flush()
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<eof__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
B7 00 15 # invokenative 21    # eof()
36 01    # vstore 1           # _result = eof();
15 01    # vload 1            # _result
B0       # return             # 


#<readline__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 08 EA # aldc 2282          # s[2282] = "readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"
B8 00 16 # invokestatic 22    # eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)"))
14 09 2C # aldc 2348          # s[2348] = "/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n"
15 00    # vload 0            # _caller
14 09 7D # aldc 2429          # s[2429] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/conio.h0: 14.6-14.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("readline__1 (/afs/andrew/course/15/122/lib/conio.h0: 14.16-14.21)")) [failure message on stack]
B7 00 16 # invokenative 22    # readline()
36 01    # vstore 1           # _result = readline();
15 01    # vload 1            # _result
B0       # return             # 


#<is_segment_slist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <58:then>
A7 00 0D # goto +13           # goto <59:else>
# <58:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <60:endif>
# <59:else>
# <60:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <61:then>
A7 00 0D # goto +13           # goto <62:else>
# <61:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <63:endif>
# <62:else>
# <63:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 09 8F # aldc 2447          # s[2447] = "is_segment_slist (lib/queue_of_string.c0: 26.10-26.44)"
B8 00 18 # invokestatic 24    # is_segment_slist(start->next, end, "is_segment_slist (lib/queue_of_string.c0: 26.10-26.44)")
36 03    # vstore 3           # _result = is_segment_slist(start->next, end, "is_segment_slist (lib/queue_of_string.c0: 26.10-26.44)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_queue>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <64:cond_true>
A7 00 16 # goto +22           # goto <65:cond_false>
# <64:cond_true>
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
14 09 C6 # aldc 2502          # s[2502] = "is_queue (lib/queue_of_string.c0: 40.8-40.43)"
B8 00 18 # invokestatic 24    # is_segment_slist(Q->front, Q->back, "is_queue (lib/queue_of_string.c0: 40.8-40.43)")
A7 00 05 # goto +5            # goto <66:cond_end>
# <65:cond_false>
10 00    # bipush 0           # false
# <66:cond_end>
36 02    # vstore 2           # _result = ((Q != NULL) && is_segment_slist(Q->front, Q->back, "is_queue (lib/queue_of_string.c0: 40.8-40.43)"));
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # Q
14 09 F4 # aldc 2548          # s[2548] = "queue_empty (lib/queue_of_string.c0: 44.13-44.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "queue_empty (lib/queue_of_string.c0: 44.13-44.24)")
14 0A 26 # aldc 2598          # s[2598] = "lib/queue_of_string.c0: 44.4-44.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0A 67 # aldc 2663          # s[2663] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 44.4-44.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_empty (lib/queue_of_string.c0: 44.13-44.24)") [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
9F 00 06 # if_cmpeq +6        # if (Q->front == Q->back) goto <67:cond_true>
A7 00 08 # goto +8            # goto <68:cond_false>
# <67:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <69:cond_end>
# <68:cond_false>
10 00    # bipush 0           # false
# <69:cond_end>
36 02    # vstore 2           # _result = (Q->front == Q->back);
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only>
02                # number of arguments = 2
03                # number of local variables = 3
00 21             # code length = 33 bytes
15 00    # vload 0            # Q
14 0A 79 # aldc 2681          # s[2681] = "queue_is_read_only (lib/queue_of_string.c0: 50.13-50.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "queue_is_read_only (lib/queue_of_string.c0: 50.13-50.24)")
14 0A B2 # aldc 2738          # s[2738] = "lib/queue_of_string.c0: 50.4-50.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0A F3 # aldc 2803          # s[2803] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 50.4-50.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_is_read_only (lib/queue_of_string.c0: 50.13-50.24)") [failure message on stack]
15 00    # vload 0            # Q
62 00    # aaddf 0            # &Q->is_read_only
34       # cmload             # Q->is_read_only
36 02    # vstore 2           # _result = Q->is_read_only;
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 3C             # code length = 60 bytes
BB 18    # new 24             # alloc(queue)
36 02    # vstore 2           # Q = alloc(queue);
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 02    # vload 2            # Q
62 00    # aaddf 0            # &Q->is_read_only
10 00    # bipush 0           # false
55       # cmstore            # Q->is_read_only = false;
15 02    # vload 2            # Q
62 08    # aaddf 8            # &Q->front
15 03    # vload 3            # l
4F       # amstore            # Q->front = l;
15 02    # vload 2            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 02    # vload 2            # Q
36 01    # vstore 1           # _result = Q;
15 01    # vload 1            # _result
14 0B 05 # aldc 2821          # s[2821] = "queue_new (lib/queue_of_string.c0: 56.12-56.29)"
B8 00 19 # invokestatic 25    # is_queue(_result, "queue_new (lib/queue_of_string.c0: 56.12-56.29)")
14 0B 35 # aldc 2869          # s[2869] = "lib/queue_of_string.c0: 56.4-56.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_new (lib/queue_of_string.c0: 56.12-56.29)") [failure message on stack]
15 01    # vload 1            # _result
14 0B 74 # aldc 2932          # s[2932] = "queue_new (lib/queue_of_string.c0: 57.12-57.32)"
B8 00 1A # invokestatic 26    # queue_empty(_result, "queue_new (lib/queue_of_string.c0: 57.12-57.32)")
14 0B A4 # aldc 2980          # s[2980] = "lib/queue_of_string.c0: 57.4-57.33: @ensures annotation failed"
CF       # assert             # assert queue_empty(_result, "queue_new (lib/queue_of_string.c0: 57.12-57.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq>
03                # number of arguments = 3
04                # number of local variables = 4
00 72             # code length = 114 bytes
15 00    # vload 0            # Q
14 0B E3 # aldc 3043          # s[3043] = "enq (lib/queue_of_string.c0: 68.13-68.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "enq (lib/queue_of_string.c0: 68.13-68.24)")
14 0C 0D # aldc 3085          # s[3085] = "lib/queue_of_string.c0: 68.4-68.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 0C 4E # aldc 3150          # s[3150] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 68.4-68.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "enq (lib/queue_of_string.c0: 68.13-68.24)") [failure message on stack]
BB 10    # new 16             # alloc(slist)
36 03    # vstore 3           # l = alloc(slist);
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 00    # aaddf 0            # &Q->back->data
15 01    # vload 1            # s
4F       # amstore            # Q->back->data = s;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
62 08    # aaddf 8            # &Q->back->next
15 03    # vload 3            # l
4F       # amstore            # Q->back->next = l;
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
15 03    # vload 3            # l
4F       # amstore            # Q->back = l;
15 00    # vload 0            # Q
14 0C 60 # aldc 3168          # s[3168] = "enq (lib/queue_of_string.c0: 69.12-69.23)"
B8 00 19 # invokestatic 25    # is_queue(Q, "enq (lib/queue_of_string.c0: 69.12-69.23)")
14 0C 8A # aldc 3210          # s[3210] = "lib/queue_of_string.c0: 69.4-69.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (lib/queue_of_string.c0: 69.12-69.23)") [failure message on stack]
15 00    # vload 0            # Q
14 0C C9 # aldc 3273          # s[3273] = "enq (lib/queue_of_string.c0: 70.13-70.27)"
B8 00 1A # invokestatic 26    # queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)"))
14 0C F3 # aldc 3315          # s[3315] = "lib/queue_of_string.c0: 70.4-70.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 0D 32 # aldc 3378          # s[3378] = "enq (lib/queue_of_string.c0: 69.12-69.23)"
B8 00 19 # invokestatic 25    # is_queue(Q, "enq (lib/queue_of_string.c0: 69.12-69.23)")
14 0D 5C # aldc 3420          # s[3420] = "lib/queue_of_string.c0: 69.4-69.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "enq (lib/queue_of_string.c0: 69.12-69.23)") [failure message on stack]
15 00    # vload 0            # Q
14 0D 9B # aldc 3483          # s[3483] = "enq (lib/queue_of_string.c0: 70.13-70.27)"
B8 00 1A # invokestatic 26    # queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)"))
14 0D C5 # aldc 3525          # s[3525] = "lib/queue_of_string.c0: 70.4-70.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty(Q, "enq (lib/queue_of_string.c0: 70.13-70.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # Q
14 0E 04 # aldc 3588          # s[3588] = "deq (lib/queue_of_string.c0: 80.13-80.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "deq (lib/queue_of_string.c0: 80.13-80.24)")
14 0E 2E # aldc 3630          # s[3630] = "lib/queue_of_string.c0: 80.4-80.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0E 6F # aldc 3695          # s[3695] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 80.4-80.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "deq (lib/queue_of_string.c0: 80.13-80.24)") [failure message on stack]
15 00    # vload 0            # Q
14 0E 81 # aldc 3713          # s[3713] = "deq (lib/queue_of_string.c0: 81.14-81.28)"
B8 00 1A # invokestatic 26    # queue_empty(Q, "deq (lib/queue_of_string.c0: 81.14-81.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty(Q, "deq (lib/queue_of_string.c0: 81.14-81.28)"))
14 0E AB # aldc 3755          # s[3755] = "lib/queue_of_string.c0: 81.4-81.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0E EC # aldc 3820          # s[3820] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 81.4-81.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty(Q, "deq (lib/queue_of_string.c0: 81.14-81.28)")) [failure message on stack]
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 00    # aaddf 0            # &Q->front->data
2F       # amload             # Q->front->data
36 03    # vstore 3           # s = Q->front->data;
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
62 08    # aaddf 8            # &Q->front->next
2F       # amload             # Q->front->next
4F       # amstore            # Q->front = Q->front->next;
15 03    # vload 3            # s
36 02    # vstore 2           # _result = s;
15 00    # vload 0            # Q
14 0E FE # aldc 3838          # s[3838] = "deq (lib/queue_of_string.c0: 82.12-82.23)"
B8 00 19 # invokestatic 25    # is_queue(Q, "deq (lib/queue_of_string.c0: 82.12-82.23)")
14 0F 28 # aldc 3880          # s[3880] = "lib/queue_of_string.c0: 82.4-82.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "deq (lib/queue_of_string.c0: 82.12-82.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 92             # code length = 146 bytes
15 00    # vload 0            # Q
14 0F 67 # aldc 3943          # s[3943] = "queue_print (lib/queue_of_string.c0: 90.13-90.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "queue_print (lib/queue_of_string.c0: 90.13-90.24)")
14 0F 99 # aldc 3993          # s[3993] = "lib/queue_of_string.c0: 90.4-90.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 0F DA # aldc 4058          # s[4058] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 90.4-90.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_print (lib/queue_of_string.c0: 90.13-90.24)") [failure message on stack]
14 0F EC # aldc 4076          # s[4076] = "[front] "
14 0F F5 # aldc 4085          # s[4085] = "queue_print (lib/queue_of_string.c0: 92.3-92.21)"
B8 00 10 # invokestatic 16    # print__1("[front] ", "queue_print (lib/queue_of_string.c0: 92.3-92.21)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
36 02    # vstore 2           # l = Q->front;
# <70:loop>
A7 00 03 # goto +3            # goto <71:body>
# <71:body>
15 02    # vload 2            # l
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l != Q->back) goto <73:then>
A7 00 4A # goto +74           # goto <74:else>
# <73:then>
14 10 26 # aldc 4134          # s[4134] = ""
14 10 27 # aldc 4135          # s[4135] = "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
B8 00 10 # invokestatic 16    # print__1("", "queue_print (lib/queue_of_string.c0: 94.5-94.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 10 58 # aldc 4184          # s[4184] = "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
B8 00 10 # invokestatic 16    # print__1(l->data, "queue_print (lib/queue_of_string.c0: 94.5-94.26)")
57       # pop                # (ignore result)
14 10 89 # aldc 4233          # s[4233] = ""
14 10 8A # aldc 4234          # s[4234] = "queue_print (lib/queue_of_string.c0: 94.5-94.26)"
B8 00 10 # invokestatic 16    # print__1("", "queue_print (lib/queue_of_string.c0: 94.5-94.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
A0 00 06 # if_cmpne +6        # if (l->next != Q->back) goto <76:then>
A7 00 10 # goto +16           # goto <77:else>
# <76:then>
14 10 BB # aldc 4283          # s[4283] = " << "
14 10 C0 # aldc 4288          # s[4288] = "queue_print (lib/queue_of_string.c0: 95.29-95.43)"
B8 00 10 # invokestatic 16    # print__1(" << ", "queue_print (lib/queue_of_string.c0: 95.29-95.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <78:endif>
# <77:else>
# <78:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <75:endif>
# <74:else>
A7 00 06 # goto +6            # break
# <75:endif>
A7 FF A6 # goto -90           # goto <70:loop>
# <72:exit>
14 10 F2 # aldc 4338          # s[4338] = " [back]"
14 10 FA # aldc 4346          # s[4346] = "queue_print (lib/queue_of_string.c0: 97.3-97.20)"
B8 00 10 # invokestatic 16    # print__1(" [back]", "queue_print (lib/queue_of_string.c0: 97.3-97.20)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy>
02                # number of arguments = 2
04                # number of local variables = 4
00 61             # code length = 97 bytes
15 00    # vload 0            # Q
14 11 2B # aldc 4395          # s[4395] = "queue_read_only_copy (lib/queue_of_string.c0: 101.13-101.24)"
B8 00 19 # invokestatic 25    # is_queue(Q, "queue_read_only_copy (lib/queue_of_string.c0: 101.13-101.24)")
14 11 68 # aldc 4456          # s[4456] = "lib/queue_of_string.c0: 101.4-101.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 11 AB # aldc 4523          # s[4523] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 101.4-101.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (lib/queue_of_string.c0: 101.13-101.24)") [failure message on stack]
BB 18    # new 24             # alloc(queue)
36 03    # vstore 3           # QC = alloc(queue);
15 03    # vload 3            # QC
62 00    # aaddf 0            # &QC->is_read_only
10 01    # bipush 1           # true
55       # cmstore            # QC->is_read_only = true;
15 03    # vload 3            # QC
62 08    # aaddf 8            # &QC->front
15 00    # vload 0            # Q
62 08    # aaddf 8            # &Q->front
2F       # amload             # Q->front
4F       # amstore            # QC->front = Q->front;
15 03    # vload 3            # QC
62 10    # aaddf 16           # &QC->back
15 00    # vload 0            # Q
62 10    # aaddf 16           # &Q->back
2F       # amload             # Q->back
4F       # amstore            # QC->back = Q->back;
15 03    # vload 3            # QC
36 02    # vstore 2           # _result = QC;
15 00    # vload 0            # Q
14 11 BD # aldc 4541          # s[4541] = "queue_read_only_copy (lib/queue_of_string.c0: 102.12-102.23)"
B8 00 19 # invokestatic 25    # is_queue(Q, "queue_read_only_copy (lib/queue_of_string.c0: 102.12-102.23)")
14 11 FA # aldc 4602          # s[4602] = "lib/queue_of_string.c0: 102.4-102.24: @ensures annotation failed"
CF       # assert             # assert is_queue(Q, "queue_read_only_copy (lib/queue_of_string.c0: 102.12-102.23)") [failure message on stack]
15 02    # vload 2            # _result
14 12 3B # aldc 4667          # s[4667] = "queue_read_only_copy (lib/queue_of_string.c0: 103.12-103.29)"
B8 00 19 # invokestatic 25    # is_queue(_result, "queue_read_only_copy (lib/queue_of_string.c0: 103.12-103.29)")
14 12 78 # aldc 4728          # s[4728] = "lib/queue_of_string.c0: 103.4-103.30: @ensures annotation failed"
CF       # assert             # assert is_queue(_result, "queue_read_only_copy (lib/queue_of_string.c0: 103.12-103.29)") [failure message on stack]
15 02    # vload 2            # _result
14 12 B9 # aldc 4793          # s[4793] = "queue_read_only_copy (lib/queue_of_string.c0: 104.12-104.39)"
B8 00 1B # invokestatic 27    # queue_is_read_only(_result, "queue_read_only_copy (lib/queue_of_string.c0: 104.12-104.39)")
14 12 F6 # aldc 4854          # s[4854] = "lib/queue_of_string.c0: 104.4-104.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only(_result, "queue_read_only_copy (lib/queue_of_string.c0: 104.12-104.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<queue_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <79:cond_true>
A7 00 08 # goto +8            # goto <80:cond_false>
# <79:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <81:cond_end>
# <80:cond_false>
10 00    # bipush 0           # false
# <81:cond_end>
14 13 37 # aldc 4919          # s[4919] = "lib/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 13 7A # aldc 4986          # s[4986] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 122.4-122.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 13 8C # aldc 5004          # s[5004] = "queue_empty__1 (lib/queue_of_string.c0: 121.1-122.39)"
B8 00 1A # invokestatic 26    # queue_empty(Q, "queue_empty__1 (lib/queue_of_string.c0: 121.1-122.39)")
36 02    # vstore 2           # _result = queue_empty(Q, "queue_empty__1 (lib/queue_of_string.c0: 121.1-122.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_is_read_only__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <82:cond_true>
A7 00 08 # goto +8            # goto <83:cond_false>
# <82:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <84:cond_end>
# <83:cond_false>
10 00    # bipush 0           # false
# <84:cond_end>
14 13 C2 # aldc 5058          # s[5058] = "lib/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 14 05 # aldc 5125          # s[5125] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 125.4-125.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 14 17 # aldc 5143          # s[5143] = "queue_is_read_only__1 (lib/queue_of_string.c0: 124.1-125.39)"
B8 00 1B # invokestatic 27    # queue_is_read_only(Q, "queue_is_read_only__1 (lib/queue_of_string.c0: 124.1-125.39)")
36 02    # vstore 2           # _result = queue_is_read_only(Q, "queue_is_read_only__1 (lib/queue_of_string.c0: 124.1-125.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 14 54 # aldc 5204          # s[5204] = "queue_new__1 (lib/queue_of_string.c0: 127.1-129.39)"
B8 00 1C # invokestatic 28    # queue_new("queue_new__1 (lib/queue_of_string.c0: 127.1-129.39)")
36 01    # vstore 1           # _result = queue_new("queue_new__1 (lib/queue_of_string.c0: 127.1-129.39)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <85:cond_true>
A7 00 08 # goto +8            # goto <86:cond_false>
# <85:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <87:cond_end>
# <86:cond_false>
10 00    # bipush 0           # false
# <87:cond_end>
14 14 88 # aldc 5256          # s[5256] = "lib/queue_of_string.c0: 128.4-128.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 14 C9 # aldc 5321          # s[5321] = "queue_new__1 (lib/queue_of_string.c0: 129.12-129.32)"
B8 00 21 # invokestatic 33    # queue_empty__1(_result, "queue_new__1 (lib/queue_of_string.c0: 129.12-129.32)")
14 14 FE # aldc 5374          # s[5374] = "lib/queue_of_string.c0: 129.4-129.33: @ensures annotation failed"
CF       # assert             # assert queue_empty__1(_result, "queue_new__1 (lib/queue_of_string.c0: 129.12-129.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<enq__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <88:cond_true>
A7 00 08 # goto +8            # goto <89:cond_false>
# <88:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <90:cond_end>
# <89:cond_false>
10 00    # bipush 0           # false
# <90:cond_end>
14 15 3F # aldc 5439          # s[5439] = "lib/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 15 82 # aldc 5506          # s[5506] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 132.4-132.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
15 01    # vload 1            # e
14 15 94 # aldc 5524          # s[5524] = "enq__1 (lib/queue_of_string.c0: 131.1-133.39)"
B8 00 1D # invokestatic 29    # enq(Q, e, "enq__1 (lib/queue_of_string.c0: 131.1-133.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
14 15 C2 # aldc 5570          # s[5570] = "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"))
14 15 F1 # aldc 5617          # s[5617] = "lib/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # Q
14 16 32 # aldc 5682          # s[5682] = "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)"))
14 16 61 # aldc 5729          # s[5729] = "lib/queue_of_string.c0: 133.4-133.28: @ensures annotation failed"
CF       # assert             # assert !(queue_empty__1(Q, "enq__1 (lib/queue_of_string.c0: 133.13-133.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<deq__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <91:cond_true>
A7 00 08 # goto +8            # goto <92:cond_false>
# <91:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <93:cond_end>
# <92:cond_false>
10 00    # bipush 0           # false
# <93:cond_end>
14 16 A2 # aldc 5794          # s[5794] = "lib/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 16 E5 # aldc 5861          # s[5861] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 136.4-136.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 16 F7 # aldc 5879          # s[5879] = "deq__1 (lib/queue_of_string.c0: 137.14-137.28)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "deq__1 (lib/queue_of_string.c0: 137.14-137.28)")
10 01    # bipush 1           # 
82       # ixor               # !(queue_empty__1(Q, "deq__1 (lib/queue_of_string.c0: 137.14-137.28)"))
14 17 26 # aldc 5926          # s[5926] = "lib/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 17 69 # aldc 5993          # s[5993] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 137.4-137.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(queue_empty__1(Q, "deq__1 (lib/queue_of_string.c0: 137.14-137.28)")) [failure message on stack]
15 00    # vload 0            # Q
14 17 7B # aldc 6011          # s[6011] = "deq__1 (lib/queue_of_string.c0: 135.1-137.39)"
B8 00 1E # invokestatic 30    # deq(Q, "deq__1 (lib/queue_of_string.c0: 135.1-137.39)")
36 02    # vstore 2           # _result = deq(Q, "deq__1 (lib/queue_of_string.c0: 135.1-137.39)");
15 02    # vload 2            # _result
B0       # return             # 


#<queue_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <94:cond_true>
A7 00 08 # goto +8            # goto <95:cond_false>
# <94:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <96:cond_end>
# <95:cond_false>
10 00    # bipush 0           # false
# <96:cond_end>
14 17 A9 # aldc 6057          # s[6057] = "lib/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 17 EC # aldc 6124          # s[6124] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/queue_of_string.c0: 140.4-140.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # Q
14 17 FE # aldc 6142          # s[6142] = "queue_print__1 (lib/queue_of_string.c0: 139.1-140.39)"
B8 00 1F # invokestatic 31    # queue_print(Q, "queue_print__1 (lib/queue_of_string.c0: 139.1-140.39)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<queue_read_only_copy__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 00    # vload 0            # Q
14 18 34 # aldc 6196          # s[6196] = "queue_read_only_copy__1 (lib/queue_of_string.c0: 145.1-147.46)"
B8 00 20 # invokestatic 32    # queue_read_only_copy(Q, "queue_read_only_copy__1 (lib/queue_of_string.c0: 145.1-147.46)")
36 02    # vstore 2           # _result = queue_read_only_copy(Q, "queue_read_only_copy__1 (lib/queue_of_string.c0: 145.1-147.46)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <97:cond_true>
A7 00 08 # goto +8            # goto <98:cond_false>
# <97:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <99:cond_end>
# <98:cond_false>
10 00    # bipush 0           # false
# <99:cond_end>
14 18 73 # aldc 6259          # s[6259] = "lib/queue_of_string.c0: 146.4-146.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
14 18 B4 # aldc 6324          # s[6324] = "queue_read_only_copy__1 (lib/queue_of_string.c0: 147.12-147.39)"
B8 00 22 # invokestatic 34    # queue_is_read_only__1(_result, "queue_read_only_copy__1 (lib/queue_of_string.c0: 147.12-147.39)")
14 18 F4 # aldc 6388          # s[6388] = "lib/queue_of_string.c0: 147.4-147.40: @ensures annotation failed"
CF       # assert             # assert queue_is_read_only__1(_result, "queue_read_only_copy__1 (lib/queue_of_string.c0: 147.12-147.39)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<is_assoclist_segment>
03                # number of arguments = 3
04                # number of local variables = 4
00 4A             # code length = 74 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <100:then>
A7 00 0D # goto +13           # goto <101:else>
# <100:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <102:endif>
# <101:else>
# <102:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <103:then>
A7 00 0D # goto +13           # goto <104:else>
# <103:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <105:endif>
# <104:else>
# <105:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->def
2F       # amload             # start->def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (start->def != NULL) goto <106:cond_true>
A7 00 13 # goto +19           # goto <107:cond_false>
# <106:cond_true>
15 00    # vload 0            # start
62 10    # aaddf 16           # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 19 35 # aldc 6453          # s[6453] = "is_assoclist_segment (lib/dict.c0: 28.32-28.70)"
B8 00 28 # invokestatic 40    # is_assoclist_segment(start->next, end, "is_assoclist_segment (lib/dict.c0: 28.32-28.70)")
A7 00 05 # goto +5            # goto <108:cond_end>
# <107:cond_false>
10 00    # bipush 0           # false
# <108:cond_end>
36 03    # vstore 3           # _result = ((start->def != NULL) && is_assoclist_segment(start->next, end, "is_assoclist_segment (lib/dict.c0: 28.32-28.70)"));
15 03    # vload 3            # _result
B0       # return             # 


#<is_acyclic_assoclist>
02                # number of arguments = 2
05                # number of local variables = 5
00 C6             # code length = 198 bytes
15 00    # vload 0            # p
01       # aconst_null        # NULL
9F 00 12 # if_cmpeq +18       # if (p == NULL) goto <109:then>
A7 00 03 # goto +3            # goto <112:or>
# <112:or>
15 00    # vload 0            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p->next == NULL) goto <109:then>
A7 00 0D # goto +13           # goto <110:else>
# <109:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <111:endif>
# <110:else>
# <111:endif>
15 00    # vload 0            # p
36 03    # vstore 3           # tortise = p;
15 00    # vload 0            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # hare = p->next;
15 00    # vload 0            # p
62 08    # aaddf 8            # &p->def
2F       # amload             # p->def
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (p->def == NULL) goto <113:then>
A7 00 0D # goto +13           # goto <114:else>
# <113:then>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <115:endif>
# <114:else>
# <115:endif>
# <116:loop>
A7 00 03 # goto +3            # goto <117:body>
# <117:body>
15 03    # vload 3            # tortise
15 04    # vload 4            # hare
14 19 65 # aldc 6501          # s[6501] = "is_acyclic_assoclist (lib/dict.c0: 38.21-38.56)"
B8 00 28 # invokestatic 40    # is_assoclist_segment(tortise, hare, "is_acyclic_assoclist (lib/dict.c0: 38.21-38.56)")
14 19 95 # aldc 6549          # s[6549] = "lib/dict.c0: 38.6-38.57: @loop_invariant annotation failed"
CF       # assert             # assert is_assoclist_segment(tortise, hare, "is_acyclic_assoclist (lib/dict.c0: 38.21-38.56)") [failure message on stack]
15 03    # vload 3            # tortise
15 04    # vload 4            # hare
A0 00 06 # if_cmpne +6        # if (tortise != hare) goto <119:then>
A7 00 61 # goto +97           # goto <120:else>
# <119:then>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
01       # aconst_null        # NULL
9F 00 15 # if_cmpeq +21       # if (hare->next == NULL) goto <122:then>
A7 00 03 # goto +3            # goto <125:or>
# <125:or>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 10    # aaddf 16           # &hare->next->next
2F       # amload             # hare->next->next
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (hare->next->next == NULL) goto <122:then>
A7 00 0D # goto +13           # goto <123:else>
# <122:then>
10 01    # bipush 1           # true
36 02    # vstore 2           # _result = true;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <124:endif>
# <123:else>
# <124:endif>
15 04    # vload 4            # hare
62 08    # aaddf 8            # &hare->def
2F       # amload             # hare->def
01       # aconst_null        # NULL
9F 00 15 # if_cmpeq +21       # if (hare->def == NULL) goto <126:then>
A7 00 03 # goto +3            # goto <129:or>
# <129:or>
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 08    # aaddf 8            # &hare->next->def
2F       # amload             # hare->next->def
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (hare->next->def == NULL) goto <126:then>
A7 00 0D # goto +13           # goto <127:else>
# <126:then>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <128:endif>
# <127:else>
# <128:endif>
15 03    # vload 3            # tortise
62 10    # aaddf 16           # &tortise->next
2F       # amload             # tortise->next
36 03    # vstore 3           # tortise = tortise->next;
15 04    # vload 4            # hare
62 10    # aaddf 16           # &hare->next
2F       # amload             # hare->next
62 10    # aaddf 16           # &hare->next->next
2F       # amload             # hare->next->next
36 04    # vstore 4           # hare = hare->next->next;
A7 00 06 # goto +6            # goto <121:endif>
# <120:else>
A7 00 06 # goto +6            # break
# <121:endif>
A7 FF 84 # goto -124          # goto <116:loop>
# <118:exit>
10 00    # bipush 0           # false
36 02    # vstore 2           # _result = false;
15 02    # vload 2            # _result
B0       # return             # 


#<is_dict>
02                # number of arguments = 2
03                # number of local variables = 3
00 1E             # code length = 30 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <130:cond_true>
A7 00 11 # goto +17           # goto <131:cond_false>
# <130:cond_true>
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
14 19 D0 # aldc 6608          # s[6608] = "is_dict (lib/dict.c0: 59.23-59.57)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(D->assoclist, "is_dict (lib/dict.c0: 59.23-59.57)")
A7 00 05 # goto +5            # goto <132:cond_end>
# <131:cond_false>
10 00    # bipush 0           # false
# <132:cond_end>
36 02    # vstore 2           # _result = ((D != NULL) && is_acyclic_assoclist(D->assoclist, "is_dict (lib/dict.c0: 59.23-59.57)"));
15 02    # vload 2            # _result
B0       # return             # 


#<dict_new>
01                # number of arguments = 1
03                # number of local variables = 3
00 1D             # code length = 29 bytes
BB 08    # new 8              # alloc(dict)
36 02    # vstore 2           # D = alloc(dict);
15 02    # vload 2            # D
62 00    # aaddf 0            # &D->assoclist
01       # aconst_null        # NULL
4F       # amstore            # D->assoclist = NULL;
15 02    # vload 2            # D
36 01    # vstore 1           # _result = D;
15 01    # vload 1            # _result
14 19 F3 # aldc 6643          # s[6643] = "dict_new (lib/dict.c0: 64.12-64.28)"
B8 00 2A # invokestatic 42    # is_dict(_result, "dict_new (lib/dict.c0: 64.12-64.28)")
14 1A 17 # aldc 6679          # s[6679] = "lib/dict.c0: 64.4-64.29: @ensures annotation failed"
CF       # assert             # assert is_dict(_result, "dict_new (lib/dict.c0: 64.12-64.28)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<dict_lookup>
03                # number of arguments = 3
05                # number of local variables = 5
00 6E             # code length = 110 bytes
15 00    # vload 0            # D
14 1A 4B # aldc 6731          # s[6731] = "dict_lookup (lib/dict.c0: 72.13-72.23)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_lookup (lib/dict.c0: 72.13-72.23)")
14 1A 72 # aldc 6770          # s[6770] = "lib/dict.c0: 72.4-72.24: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1A A8 # aldc 6824          # s[6824] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 72.4-72.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_dict(D, "dict_lookup (lib/dict.c0: 72.13-72.23)") [failure message on stack]
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
36 04    # vstore 4           # p = D->assoclist;
# <133:loop>
A7 00 03 # goto +3            # goto <134:body>
# <134:body>
15 04    # vload 4            # p
14 1A BA # aldc 6842          # s[6842] = "dict_lookup (lib/dict.c0: 75.21-75.44)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(p, "dict_lookup (lib/dict.c0: 75.21-75.44)")
14 1A E1 # aldc 6881          # s[6881] = "lib/dict.c0: 75.6-75.45: @loop_invariant annotation failed"
CF       # assert             # assert is_acyclic_assoclist(p, "dict_lookup (lib/dict.c0: 75.21-75.44)") [failure message on stack]
15 04    # vload 4            # p
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (p != NULL) goto <136:then>
A7 00 2F # goto +47           # goto <137:else>
# <136:then>
15 01    # vload 1            # name
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
2F       # amload             # p->name
14 1B 1C # aldc 6940          # s[6940] = "dict_lookup (lib/dict.c0: 77.9-77.36)"
B8 00 05 # invokestatic 5     # string_equal__1(name, p->name, "dict_lookup (lib/dict.c0: 77.9-77.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(name, p->name, "dict_lookup (lib/dict.c0: 77.9-77.36)") == true) goto <139:then>
A7 00 10 # goto +16           # goto <140:else>
# <139:then>
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
2F       # amload             # p->def
36 03    # vstore 3           # _result = p->def;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <141:endif>
# <140:else>
# <141:endif>
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # p = p->next;
A7 00 06 # goto +6            # goto <138:endif>
# <137:else>
A7 00 06 # goto +6            # break
# <138:endif>
A7 FF B9 # goto -71           # goto <133:loop>
# <135:exit>
01       # aconst_null        # NULL
36 03    # vstore 3           # _result = NULL;
15 03    # vload 3            # _result
B0       # return             # 


#<dict_insert>
04                # number of arguments = 4
05                # number of local variables = 5
01 28             # code length = 296 bytes
15 00    # vload 0            # D
14 1B 42 # aldc 6978          # s[6978] = "dict_insert (lib/dict.c0: 86.13-86.23)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (lib/dict.c0: 86.13-86.23)")
14 1B 69 # aldc 7017          # s[7017] = "lib/dict.c0: 86.4-86.24: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B 9F # aldc 7071          # s[7071] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 86.4-86.24: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_dict(D, "dict_insert (lib/dict.c0: 86.13-86.23)") [failure message on stack]
15 02    # vload 2            # def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (def != NULL) goto <142:cond_true>
A7 00 08 # goto +8            # goto <143:cond_false>
# <142:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <144:cond_end>
# <143:cond_false>
10 00    # bipush 0           # false
# <144:cond_end>
14 1B B1 # aldc 7089          # s[7089] = "lib/dict.c0: 87.4-87.25: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1B E7 # aldc 7143          # s[7143] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 87.4-87.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (def != NULL) [failure message on stack]
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
36 04    # vstore 4           # p = D->assoclist;
# <145:loop>
A7 00 03 # goto +3            # goto <146:body>
# <146:body>
15 04    # vload 4            # p
14 1B F9 # aldc 7161          # s[7161] = "dict_insert (lib/dict.c0: 92.21-92.44)"
B8 00 29 # invokestatic 41    # is_acyclic_assoclist(p, "dict_insert (lib/dict.c0: 92.21-92.44)")
14 1C 20 # aldc 7200          # s[7200] = "lib/dict.c0: 92.6-92.45: @loop_invariant annotation failed"
CF       # assert             # assert is_acyclic_assoclist(p, "dict_insert (lib/dict.c0: 92.21-92.44)") [failure message on stack]
15 04    # vload 4            # p
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (p != NULL) goto <148:then>
A7 00 57 # goto +87           # goto <149:else>
# <148:then>
15 01    # vload 1            # name
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
2F       # amload             # p->name
14 1C 5B # aldc 7259          # s[7259] = "dict_insert (lib/dict.c0: 94.9-94.36)"
B8 00 05 # invokestatic 5     # string_equal__1(name, p->name, "dict_insert (lib/dict.c0: 94.9-94.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(name, p->name, "dict_insert (lib/dict.c0: 94.9-94.36)") == true) goto <151:then>
A7 00 38 # goto +56           # goto <152:else>
# <151:then>
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
15 02    # vload 2            # def
4F       # amstore            # p->def = def;
15 00    # vload 0            # D
14 1C 81 # aldc 7297          # s[7297] = "dict_insert (lib/dict.c0: 88.12-88.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)")
14 1C A8 # aldc 7336          # s[7336] = "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 1C DC # aldc 7388          # s[7388] = "dict_insert (lib/dict.c0: 89.12-89.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) goto <154:cond_true>
A7 00 08 # goto +8            # goto <155:cond_false>
# <154:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <156:cond_end>
# <155:cond_false>
10 00    # bipush 0           # false
# <156:cond_end>
14 1D 03 # aldc 7427          # s[7427] = "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <153:endif>
# <152:else>
# <153:endif>
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
2F       # amload             # p->next
36 04    # vstore 4           # p = p->next;
A7 00 06 # goto +6            # goto <150:endif>
# <149:else>
A7 00 06 # goto +6            # break
# <150:endif>
A7 FF 91 # goto -111          # goto <145:loop>
# <147:exit>
BB 18    # new 24             # alloc(struct alist_node)
36 04    # vstore 4           # p = alloc(struct alist_node);
15 04    # vload 4            # p
62 00    # aaddf 0            # &p->name
15 01    # vload 1            # name
4F       # amstore            # p->name = name;
15 04    # vload 4            # p
62 08    # aaddf 8            # &p->def
15 02    # vload 2            # def
4F       # amstore            # p->def = def;
15 04    # vload 4            # p
62 10    # aaddf 16           # &p->next
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
2F       # amload             # D->assoclist
4F       # amstore            # p->next = D->assoclist;
15 00    # vload 0            # D
62 00    # aaddf 0            # &D->assoclist
15 04    # vload 4            # p
4F       # amstore            # D->assoclist = p;
15 00    # vload 0            # D
14 1D 37 # aldc 7479          # s[7479] = "dict_insert (lib/dict.c0: 88.12-88.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)")
14 1D 5E # aldc 7518          # s[7518] = "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 1D 92 # aldc 7570          # s[7570] = "dict_insert (lib/dict.c0: 89.12-89.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) goto <157:cond_true>
A7 00 08 # goto +8            # goto <158:cond_false>
# <157:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <159:cond_end>
# <158:cond_false>
10 00    # bipush 0           # false
# <159:cond_end>
14 1D B9 # aldc 7609          # s[7609] = "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # D
14 1D ED # aldc 7661          # s[7661] = "dict_insert (lib/dict.c0: 88.12-88.22)"
B8 00 2A # invokestatic 42    # is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)")
14 1E 14 # aldc 7700          # s[7700] = "lib/dict.c0: 88.4-88.23: @ensures annotation failed"
CF       # assert             # assert is_dict(D, "dict_insert (lib/dict.c0: 88.12-88.22)") [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 1E 48 # aldc 7752          # s[7752] = "dict_insert (lib/dict.c0: 89.12-89.32)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) goto <160:cond_true>
A7 00 08 # goto +8            # goto <161:cond_false>
# <160:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <162:cond_end>
# <161:cond_false>
10 00    # bipush 0           # false
# <162:cond_end>
14 1E 6F # aldc 7791          # s[7791] = "lib/dict.c0: 89.4-89.41: @ensures annotation failed"
CF       # assert             # assert (dict_lookup(D, name, "dict_insert (lib/dict.c0: 89.12-89.32)") != NULL) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<dict_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 1F             # code length = 31 bytes
14 1E A3 # aldc 7843          # s[7843] = "dict_new__1 (lib/dict.c0: 116.1-117.35)"
B8 00 2B # invokestatic 43    # dict_new("dict_new__1 (lib/dict.c0: 116.1-117.35)")
36 01    # vstore 1           # _result = dict_new("dict_new__1 (lib/dict.c0: 116.1-117.35)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <163:cond_true>
A7 00 08 # goto +8            # goto <164:cond_false>
# <163:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <165:cond_end>
# <164:cond_false>
10 00    # bipush 0           # false
# <165:cond_end>
14 1E CB # aldc 7883          # s[7883] = "lib/dict.c0: 117.6-117.30: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<dict_lookup__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 2E             # code length = 46 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <166:cond_true>
A7 00 08 # goto +8            # goto <167:cond_false>
# <166:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <168:cond_end>
# <167:cond_false>
10 00    # bipush 0           # false
# <168:cond_end>
14 1F 01 # aldc 7937          # s[7937] = "lib/dict.c0: 121.6-121.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 1F 39 # aldc 7993          # s[7993] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 121.6-121.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (D != NULL) [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
14 1F 4B # aldc 8011          # s[8011] = "dict_lookup__1 (lib/dict.c0: 120.1-121.30)"
B8 00 2C # invokestatic 44    # dict_lookup(D, name, "dict_lookup__1 (lib/dict.c0: 120.1-121.30)")
36 03    # vstore 3           # _result = dict_lookup(D, name, "dict_lookup__1 (lib/dict.c0: 120.1-121.30)");
15 03    # vload 3            # _result
B0       # return             # 


#<dict_insert__1>
04                # number of arguments = 4
04                # number of local variables = 4
00 51             # code length = 81 bytes
15 00    # vload 0            # D
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (D != NULL) goto <169:cond_true>
A7 00 08 # goto +8            # goto <170:cond_false>
# <169:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <171:cond_end>
# <170:cond_false>
10 00    # bipush 0           # false
# <171:cond_end>
14 1F 76 # aldc 8054          # s[8054] = "lib/dict.c0: 124.6-124.25: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1F AE # aldc 8110          # s[8110] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 124.6-124.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (D != NULL) [failure message on stack]
15 02    # vload 2            # def
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (def != NULL) goto <172:cond_true>
A7 00 08 # goto +8            # goto <173:cond_false>
# <172:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <174:cond_end>
# <173:cond_false>
10 00    # bipush 0           # false
# <174:cond_end>
14 1F C0 # aldc 8128          # s[8128] = "lib/dict.c0: 125.6-125.27: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 1F F8 # aldc 8184          # s[8184] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/dict.c0: 125.6-125.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (def != NULL) [failure message on stack]
15 00    # vload 0            # D
15 01    # vload 1            # name
15 02    # vload 2            # def
14 20 0A # aldc 8202          # s[8202] = "dict_insert__1 (lib/dict.c0: 123.1-125.32)"
B8 00 2D # invokestatic 45    # dict_insert(D, name, def, "dict_insert__1 (lib/dict.c0: 123.1-125.32)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_intlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 39             # code length = 57 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <175:then>
A7 00 0D # goto +13           # goto <176:else>
# <175:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <177:endif>
# <176:else>
# <177:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <178:then>
A7 00 0D # goto +13           # goto <179:else>
# <178:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <180:endif>
# <179:else>
# <180:endif>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 20 35 # aldc 8245          # s[8245] = "is_segment_intlist (lib/stack_of_int.c0: 26.10-26.46)"
B8 00 31 # invokestatic 49    # is_segment_intlist(start->next, end, "is_segment_intlist (lib/stack_of_int.c0: 26.10-26.46)")
36 03    # vstore 3           # _result = is_segment_intlist(start->next, end, "is_segment_intlist (lib/stack_of_int.c0: 26.10-26.46)");
15 03    # vload 3            # _result
B0       # return             # 


#<is_stack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <181:cond_true>
A7 00 16 # goto +22           # goto <182:cond_false>
# <181:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 20 6B # aldc 8299          # s[8299] = "is_stack (lib/stack_of_int.c0: 39.8-39.44)"
B8 00 31 # invokestatic 49    # is_segment_intlist(S->top, S->floor, "is_stack (lib/stack_of_int.c0: 39.8-39.44)")
A7 00 05 # goto +5            # goto <183:cond_end>
# <182:cond_false>
10 00    # bipush 0           # false
# <183:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_intlist(S->top, S->floor, "is_stack (lib/stack_of_int.c0: 39.8-39.44)"));
15 02    # vload 2            # _result
B0       # return             # 


#<stack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 20 96 # aldc 8342          # s[8342] = "stack_empty (lib/stack_of_int.c0: 43.13-43.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "stack_empty (lib/stack_of_int.c0: 43.13-43.24)")
14 20 C5 # aldc 8389          # s[8389] = "lib/stack_of_int.c0: 43.4-43.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 21 03 # aldc 8451          # s[8451] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 43.4-43.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_empty (lib/stack_of_int.c0: 43.13-43.24)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <184:cond_true>
A7 00 08 # goto +8            # goto <185:cond_false>
# <184:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <186:cond_end>
# <185:cond_false>
10 00    # bipush 0           # false
# <186:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(stack)
36 02    # vstore 2           # S = alloc(stack);
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 21 15 # aldc 8469          # s[8469] = "stack_new (lib/stack_of_int.c0: 49.12-49.29)"
B8 00 32 # invokestatic 50    # is_stack(_result, "stack_new (lib/stack_of_int.c0: 49.12-49.29)")
14 21 42 # aldc 8514          # s[8514] = "lib/stack_of_int.c0: 49.4-49.30: @ensures annotation failed"
CF       # assert             # assert is_stack(_result, "stack_new (lib/stack_of_int.c0: 49.12-49.29)") [failure message on stack]
15 01    # vload 1            # _result
14 21 7E # aldc 8574          # s[8574] = "stack_new (lib/stack_of_int.c0: 50.12-50.32)"
B8 00 33 # invokestatic 51    # stack_empty(_result, "stack_new (lib/stack_of_int.c0: 50.12-50.32)")
14 21 AB # aldc 8619          # s[8619] = "lib/stack_of_int.c0: 50.4-50.33: @ensures annotation failed"
CF       # assert             # assert stack_empty(_result, "stack_new (lib/stack_of_int.c0: 50.12-50.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push>
03                # number of arguments = 3
04                # number of local variables = 4
00 42             # code length = 66 bytes
15 00    # vload 0            # S
14 21 E7 # aldc 8679          # s[8679] = "push (lib/stack_of_int.c0: 60.13-60.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "push (lib/stack_of_int.c0: 60.13-60.24)")
14 22 0F # aldc 8719          # s[8719] = "lib/stack_of_int.c0: 60.4-60.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 22 4D # aldc 8781          # s[8781] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 60.4-60.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "push (lib/stack_of_int.c0: 60.13-60.24)") [failure message on stack]
BB 10    # new 16             # alloc(intlist)
36 03    # vstore 3           # l = alloc(intlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4E       # imstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 22 5F # aldc 8799          # s[8799] = "push (lib/stack_of_int.c0: 61.12-61.23)"
B8 00 32 # invokestatic 50    # is_stack(S, "push (lib/stack_of_int.c0: 61.12-61.23)")
14 22 87 # aldc 8839          # s[8839] = "lib/stack_of_int.c0: 61.4-61.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "push (lib/stack_of_int.c0: 61.12-61.23)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop>
02                # number of arguments = 2
04                # number of local variables = 4
00 5B             # code length = 91 bytes
15 00    # vload 0            # S
14 22 C3 # aldc 8899          # s[8899] = "pop (lib/stack_of_int.c0: 70.13-70.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "pop (lib/stack_of_int.c0: 70.13-70.24)")
14 22 EA # aldc 8938          # s[8938] = "lib/stack_of_int.c0: 70.4-70.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 23 28 # aldc 9000          # s[9000] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 70.4-70.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "pop (lib/stack_of_int.c0: 70.13-70.24)") [failure message on stack]
15 00    # vload 0            # S
14 23 3A # aldc 9018          # s[9018] = "pop (lib/stack_of_int.c0: 71.14-71.28)"
B8 00 33 # invokestatic 51    # stack_empty(S, "pop (lib/stack_of_int.c0: 71.14-71.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty(S, "pop (lib/stack_of_int.c0: 71.14-71.28)"))
14 23 61 # aldc 9057          # s[9057] = "lib/stack_of_int.c0: 71.4-71.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 23 9F # aldc 9119          # s[9119] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 71.4-71.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty(S, "pop (lib/stack_of_int.c0: 71.14-71.28)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2E       # imload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 23 B1 # aldc 9137          # s[9137] = "pop (lib/stack_of_int.c0: 72.12-72.23)"
B8 00 32 # invokestatic 50    # is_stack(S, "pop (lib/stack_of_int.c0: 72.12-72.23)")
14 23 D8 # aldc 9176          # s[9176] = "lib/stack_of_int.c0: 72.4-72.24: @ensures annotation failed"
CF       # assert             # assert is_stack(S, "pop (lib/stack_of_int.c0: 72.12-72.23)") [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 88             # code length = 136 bytes
15 00    # vload 0            # S
14 24 14 # aldc 9236          # s[9236] = "stack_print (lib/stack_of_int.c0: 80.13-80.24)"
B8 00 32 # invokestatic 50    # is_stack(S, "stack_print (lib/stack_of_int.c0: 80.13-80.24)")
14 24 43 # aldc 9283          # s[9283] = "lib/stack_of_int.c0: 80.4-80.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 24 81 # aldc 9345          # s[9345] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 80.4-80.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_stack(S, "stack_print (lib/stack_of_int.c0: 80.13-80.24)") [failure message on stack]
14 24 93 # aldc 9363          # s[9363] = "TOP: "
14 24 99 # aldc 9369          # s[9369] = "stack_print (lib/stack_of_int.c0: 82.3-82.18)"
B8 00 10 # invokestatic 16    # print__1("TOP: ", "stack_print (lib/stack_of_int.c0: 82.3-82.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <187:loop>
A7 00 03 # goto +3            # goto <188:body>
# <188:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <190:then>
A7 00 4A # goto +74           # goto <191:else>
# <190:then>
14 24 C7 # aldc 9415          # s[9415] = ""
14 24 C8 # aldc 9416          # s[9416] = "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
B8 00 10 # invokestatic 16    # print__1("", "stack_print (lib/stack_of_int.c0: 84.5-84.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2E       # imload             # l->data
14 24 F6 # aldc 9462          # s[9462] = "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
B8 00 12 # invokestatic 18    # printint__1(l->data, "stack_print (lib/stack_of_int.c0: 84.5-84.26)")
57       # pop                # (ignore result)
14 25 24 # aldc 9508          # s[9508] = ""
14 25 25 # aldc 9509          # s[9509] = "stack_print (lib/stack_of_int.c0: 84.5-84.26)"
B8 00 10 # invokestatic 16    # print__1("", "stack_print (lib/stack_of_int.c0: 84.5-84.26)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <193:then>
A7 00 10 # goto +16           # goto <194:else>
# <193:then>
14 25 53 # aldc 9555          # s[9555] = " | "
14 25 57 # aldc 9559          # s[9559] = "stack_print (lib/stack_of_int.c0: 85.30-85.43)"
B8 00 10 # invokestatic 16    # print__1(" | ", "stack_print (lib/stack_of_int.c0: 85.30-85.43)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <195:endif>
# <194:else>
# <195:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <192:endif>
# <191:else>
A7 00 06 # goto +6            # break
# <192:endif>
A7 FF A6 # goto -90           # goto <187:loop>
# <189:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<stack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <196:cond_true>
A7 00 08 # goto +8            # goto <197:cond_false>
# <196:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <198:cond_end>
# <197:cond_false>
10 00    # bipush 0           # false
# <198:cond_end>
14 25 86 # aldc 9606          # s[9606] = "lib/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 25 C6 # aldc 9670          # s[9670] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 100.4-100.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 25 D8 # aldc 9688          # s[9688] = "stack_empty__1 (lib/stack_of_int.c0: 99.1-100.40)"
B8 00 33 # invokestatic 51    # stack_empty(S, "stack_empty__1 (lib/stack_of_int.c0: 99.1-100.40)")
36 02    # vstore 2           # _result = stack_empty(S, "stack_empty__1 (lib/stack_of_int.c0: 99.1-100.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 26 0A # aldc 9738          # s[9738] = "stack_new__1 (lib/stack_of_int.c0: 102.1-104.40)"
B8 00 34 # invokestatic 52    # stack_new("stack_new__1 (lib/stack_of_int.c0: 102.1-104.40)")
36 01    # vstore 1           # _result = stack_new("stack_new__1 (lib/stack_of_int.c0: 102.1-104.40)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <199:cond_true>
A7 00 08 # goto +8            # goto <200:cond_false>
# <199:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <201:cond_end>
# <200:cond_false>
10 00    # bipush 0           # false
# <201:cond_end>
14 26 3B # aldc 9787          # s[9787] = "lib/stack_of_int.c0: 103.4-103.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 26 79 # aldc 9849          # s[9849] = "stack_new__1 (lib/stack_of_int.c0: 104.12-104.32)"
B8 00 38 # invokestatic 56    # stack_empty__1(_result, "stack_new__1 (lib/stack_of_int.c0: 104.12-104.32)")
14 26 AB # aldc 9899          # s[9899] = "lib/stack_of_int.c0: 104.4-104.33: @ensures annotation failed"
CF       # assert             # assert stack_empty__1(_result, "stack_new__1 (lib/stack_of_int.c0: 104.12-104.32)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<push__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 4E             # code length = 78 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <202:cond_true>
A7 00 08 # goto +8            # goto <203:cond_false>
# <202:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <204:cond_end>
# <203:cond_false>
10 00    # bipush 0           # false
# <204:cond_end>
14 26 E9 # aldc 9961          # s[9961] = "lib/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 27 29 # aldc 10025         # s[10025] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 107.4-107.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 27 3B # aldc 10043         # s[10043] = "push__1 (lib/stack_of_int.c0: 106.1-108.39)"
B8 00 35 # invokestatic 53    # push(S, x, "push__1 (lib/stack_of_int.c0: 106.1-108.39)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 27 67 # aldc 10087         # s[10087] = "push__1 (lib/stack_of_int.c0: 108.13-108.27)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)"))
14 27 94 # aldc 10132         # s[10132] = "lib/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 27 D2 # aldc 10194         # s[10194] = "push__1 (lib/stack_of_int.c0: 108.13-108.27)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)"))
14 27 FF # aldc 10239         # s[10239] = "lib/stack_of_int.c0: 108.4-108.28: @ensures annotation failed"
CF       # assert             # assert !(stack_empty__1(S, "push__1 (lib/stack_of_int.c0: 108.13-108.27)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<pop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 46             # code length = 70 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <205:cond_true>
A7 00 08 # goto +8            # goto <206:cond_false>
# <205:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <207:cond_end>
# <206:cond_false>
10 00    # bipush 0           # false
# <207:cond_end>
14 28 3D # aldc 10301         # s[10301] = "lib/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 7D # aldc 10365         # s[10365] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 111.4-111.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 28 8F # aldc 10383         # s[10383] = "pop__1 (lib/stack_of_int.c0: 112.14-112.28)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "pop__1 (lib/stack_of_int.c0: 112.14-112.28)")
10 01    # bipush 1           # 
82       # ixor               # !(stack_empty__1(S, "pop__1 (lib/stack_of_int.c0: 112.14-112.28)"))
14 28 BB # aldc 10427         # s[10427] = "lib/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 28 FB # aldc 10491         # s[10491] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 112.4-112.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(stack_empty__1(S, "pop__1 (lib/stack_of_int.c0: 112.14-112.28)")) [failure message on stack]
15 00    # vload 0            # S
14 29 0D # aldc 10509         # s[10509] = "pop__1 (lib/stack_of_int.c0: 110.1-112.40)"
B8 00 36 # invokestatic 54    # pop(S, "pop__1 (lib/stack_of_int.c0: 110.1-112.40)")
36 02    # vstore 2           # _result = pop(S, "pop__1 (lib/stack_of_int.c0: 110.1-112.40)");
15 02    # vload 2            # _result
B0       # return             # 


#<stack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <208:cond_true>
A7 00 08 # goto +8            # goto <209:cond_false>
# <208:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <210:cond_end>
# <209:cond_false>
10 00    # bipush 0           # false
# <210:cond_end>
14 29 38 # aldc 10552         # s[10552] = "lib/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 29 78 # aldc 10616         # s[10616] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_int.c0: 115.4-115.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 29 8A # aldc 10634         # s[10634] = "stack_print__1 (lib/stack_of_int.c0: 114.1-115.40)"
B8 00 37 # invokestatic 55    # stack_print(S, "stack_print__1 (lib/stack_of_int.c0: 114.1-115.40)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_segment_qlist>
03                # number of arguments = 3
04                # number of local variables = 4
00 4A             # code length = 74 bytes
15 00    # vload 0            # start
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (start == NULL) goto <211:then>
A7 00 0D # goto +13           # goto <212:else>
# <211:then>
10 00    # bipush 0           # false
36 03    # vstore 3           # _result = false;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <213:endif>
# <212:else>
# <213:endif>
15 00    # vload 0            # start
15 01    # vload 1            # end
9F 00 06 # if_cmpeq +6        # if (start == end) goto <214:then>
A7 00 0D # goto +13           # goto <215:else>
# <214:then>
10 01    # bipush 1           # true
36 03    # vstore 3           # _result = true;
15 03    # vload 3            # _result
B0       # return             # 
A7 00 03 # goto +3            # goto <216:endif>
# <215:else>
# <216:endif>
15 00    # vload 0            # start
62 00    # aaddf 0            # &start->data
2F       # amload             # start->data
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (start->data != NULL) goto <217:cond_true>
A7 00 13 # goto +19           # goto <218:cond_false>
# <217:cond_true>
15 00    # vload 0            # start
62 08    # aaddf 8            # &start->next
2F       # amload             # start->next
15 01    # vload 1            # end
14 29 BD # aldc 10685         # s[10685] = "is_segment_qlist (lib/stack_of_queue_of_string.c0: 32.33-32.67)"
B8 00 3D # invokestatic 61    # is_segment_qlist(start->next, end, "is_segment_qlist (lib/stack_of_queue_of_string.c0: 32.33-32.67)")
A7 00 05 # goto +5            # goto <219:cond_end>
# <218:cond_false>
10 00    # bipush 0           # false
# <219:cond_end>
36 03    # vstore 3           # _result = ((start->data != NULL) && is_segment_qlist(start->next, end, "is_segment_qlist (lib/stack_of_queue_of_string.c0: 32.33-32.67)"));
15 03    # vload 3            # _result
B0       # return             # 


#<is_qstack>
02                # number of arguments = 2
03                # number of local variables = 3
00 23             # code length = 35 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <220:cond_true>
A7 00 16 # goto +22           # goto <221:cond_false>
# <220:cond_true>
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
14 29 FD # aldc 10749         # s[10749] = "is_qstack (lib/stack_of_queue_of_string.c0: 45.8-45.42)"
B8 00 3D # invokestatic 61    # is_segment_qlist(S->top, S->floor, "is_qstack (lib/stack_of_queue_of_string.c0: 45.8-45.42)")
A7 00 05 # goto +5            # goto <222:cond_end>
# <221:cond_false>
10 00    # bipush 0           # false
# <222:cond_end>
36 02    # vstore 2           # _result = ((S != NULL) && is_segment_qlist(S->top, S->floor, "is_qstack (lib/stack_of_queue_of_string.c0: 45.8-45.42)"));
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_empty>
02                # number of arguments = 2
03                # number of local variables = 3
00 33             # code length = 51 bytes
15 00    # vload 0            # S
14 2A 35 # aldc 10805         # s[10805] = "qstack_empty (lib/stack_of_queue_of_string.c0: 49.13-49.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qstack_empty (lib/stack_of_queue_of_string.c0: 49.13-49.25)")
14 2A 71 # aldc 10865         # s[10865] = "lib/stack_of_queue_of_string.c0: 49.4-49.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2A BB # aldc 10939         # s[10939] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 49.4-49.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qstack_empty (lib/stack_of_queue_of_string.c0: 49.13-49.25)") [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
9F 00 06 # if_cmpeq +6        # if (S->top == S->floor) goto <223:cond_true>
A7 00 08 # goto +8            # goto <224:cond_false>
# <223:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <225:cond_end>
# <224:cond_false>
10 00    # bipush 0           # false
# <225:cond_end>
36 02    # vstore 2           # _result = (S->top == S->floor);
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_new>
01                # number of arguments = 1
04                # number of local variables = 4
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(qstack)
36 02    # vstore 2           # S = alloc(qstack);
BB 10    # new 16             # alloc(qlist)
36 03    # vstore 3           # l = alloc(qlist);
15 02    # vload 2            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 02    # vload 2            # S
62 08    # aaddf 8            # &S->floor
15 03    # vload 3            # l
4F       # amstore            # S->floor = l;
15 02    # vload 2            # S
36 01    # vstore 1           # _result = S;
15 01    # vload 1            # _result
14 2A CD # aldc 10957         # s[10957] = "qstack_new (lib/stack_of_queue_of_string.c0: 55.12-55.30)"
B8 00 3E # invokestatic 62    # is_qstack(_result, "qstack_new (lib/stack_of_queue_of_string.c0: 55.12-55.30)")
14 2B 07 # aldc 11015         # s[11015] = "lib/stack_of_queue_of_string.c0: 55.4-55.31: @ensures annotation failed"
CF       # assert             # assert is_qstack(_result, "qstack_new (lib/stack_of_queue_of_string.c0: 55.12-55.30)") [failure message on stack]
15 01    # vload 1            # _result
14 2B 4F # aldc 11087         # s[11087] = "qstack_new (lib/stack_of_queue_of_string.c0: 56.12-56.33)"
B8 00 3F # invokestatic 63    # qstack_empty(_result, "qstack_new (lib/stack_of_queue_of_string.c0: 56.12-56.33)")
14 2B 89 # aldc 11145         # s[11145] = "lib/stack_of_queue_of_string.c0: 56.4-56.34: @ensures annotation failed"
CF       # assert             # assert qstack_empty(_result, "qstack_new (lib/stack_of_queue_of_string.c0: 56.12-56.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<qpush>
03                # number of arguments = 3
04                # number of local variables = 4
00 61             # code length = 97 bytes
15 00    # vload 0            # S
14 2B D1 # aldc 11217         # s[11217] = "qpush (lib/stack_of_queue_of_string.c0: 66.13-66.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpush (lib/stack_of_queue_of_string.c0: 66.13-66.25)")
14 2C 06 # aldc 11270         # s[11270] = "lib/stack_of_queue_of_string.c0: 66.4-66.26: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 2C 50 # aldc 11344         # s[11344] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 66.4-66.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qpush (lib/stack_of_queue_of_string.c0: 66.13-66.25)") [failure message on stack]
15 01    # vload 1            # x
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (x != NULL) goto <226:cond_true>
A7 00 08 # goto +8            # goto <227:cond_false>
# <226:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <228:cond_end>
# <227:cond_false>
10 00    # bipush 0           # false
# <228:cond_end>
14 2C 62 # aldc 11362         # s[11362] = "lib/stack_of_queue_of_string.c0: 68.4-68.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 2C AC # aldc 11436         # s[11436] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 68.4-68.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x != NULL) [failure message on stack]
BB 10    # new 16             # alloc(qlist)
36 03    # vstore 3           # l = alloc(qlist);
15 03    # vload 3            # l
62 00    # aaddf 0            # &l->data
15 01    # vload 1            # x
4F       # amstore            # l->data = x;
15 03    # vload 3            # l
62 08    # aaddf 8            # &l->next
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
4F       # amstore            # l->next = S->top;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 03    # vload 3            # l
4F       # amstore            # S->top = l;
15 00    # vload 0            # S
14 2C BE # aldc 11454         # s[11454] = "qpush (lib/stack_of_queue_of_string.c0: 67.12-67.24)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpush (lib/stack_of_queue_of_string.c0: 67.12-67.24)")
14 2C F3 # aldc 11507         # s[11507] = "lib/stack_of_queue_of_string.c0: 67.4-67.25: @ensures annotation failed"
CF       # assert             # assert is_qstack(S, "qpush (lib/stack_of_queue_of_string.c0: 67.12-67.24)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qpop>
02                # number of arguments = 2
04                # number of local variables = 4
00 6F             # code length = 111 bytes
15 00    # vload 0            # S
14 2D 3B # aldc 11579         # s[11579] = "qpop (lib/stack_of_queue_of_string.c0: 77.13-77.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpop (lib/stack_of_queue_of_string.c0: 77.13-77.25)")
14 2D 6F # aldc 11631         # s[11631] = "lib/stack_of_queue_of_string.c0: 77.4-77.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2D B9 # aldc 11705         # s[11705] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 77.4-77.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qpop (lib/stack_of_queue_of_string.c0: 77.13-77.25)") [failure message on stack]
15 00    # vload 0            # S
14 2D CB # aldc 11723         # s[11723] = "qpop (lib/stack_of_queue_of_string.c0: 78.14-78.29)"
B8 00 3F # invokestatic 63    # qstack_empty(S, "qpop (lib/stack_of_queue_of_string.c0: 78.14-78.29)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty(S, "qpop (lib/stack_of_queue_of_string.c0: 78.14-78.29)"))
14 2D FF # aldc 11775         # s[11775] = "lib/stack_of_queue_of_string.c0: 78.4-78.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2E 49 # aldc 11849         # s[11849] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 78.4-78.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(qstack_empty(S, "qpop (lib/stack_of_queue_of_string.c0: 78.14-78.29)")) [failure message on stack]
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 00    # aaddf 0            # &S->top->data
2F       # amload             # S->top->data
36 03    # vstore 3           # x = S->top->data;
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
62 08    # aaddf 8            # &S->top->next
2F       # amload             # S->top->next
4F       # amstore            # S->top = S->top->next;
15 03    # vload 3            # x
36 02    # vstore 2           # _result = x;
15 00    # vload 0            # S
14 2E 5B # aldc 11867         # s[11867] = "qpop (lib/stack_of_queue_of_string.c0: 79.12-79.24)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qpop (lib/stack_of_queue_of_string.c0: 79.12-79.24)")
14 2E 8F # aldc 11919         # s[11919] = "lib/stack_of_queue_of_string.c0: 79.4-79.25: @ensures annotation failed"
CF       # assert             # assert is_qstack(S, "qpop (lib/stack_of_queue_of_string.c0: 79.12-79.24)") [failure message on stack]
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <229:cond_true>
A7 00 08 # goto +8            # goto <230:cond_false>
# <229:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <231:cond_end>
# <230:cond_false>
10 00    # bipush 0           # false
# <231:cond_end>
14 2E D7 # aldc 11991         # s[11991] = "lib/stack_of_queue_of_string.c0: 80.4-80.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_print>
02                # number of arguments = 2
03                # number of local variables = 3
00 8E             # code length = 142 bytes
15 00    # vload 0            # S
14 2F 1F # aldc 12063         # s[12063] = "qstack_print (lib/stack_of_queue_of_string.c0: 88.13-88.25)"
B8 00 3E # invokestatic 62    # is_qstack(S, "qstack_print (lib/stack_of_queue_of_string.c0: 88.13-88.25)")
14 2F 5B # aldc 12123         # s[12123] = "lib/stack_of_queue_of_string.c0: 88.4-88.26: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 2F A5 # aldc 12197         # s[12197] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 88.4-88.26: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert is_qstack(S, "qstack_print (lib/stack_of_queue_of_string.c0: 88.13-88.25)") [failure message on stack]
14 2F B7 # aldc 12215         # s[12215] = "TOP: "
14 2F BD # aldc 12221         # s[12221] = "qstack_print (lib/stack_of_queue_of_string.c0: 90.3-90.18)"
B8 00 10 # invokestatic 16    # print__1("TOP: ", "qstack_print (lib/stack_of_queue_of_string.c0: 90.3-90.18)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
36 02    # vstore 2           # l = S->top;
# <232:loop>
A7 00 03 # goto +3            # goto <233:body>
# <233:body>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l != S->floor) goto <235:then>
A7 00 50 # goto +80           # goto <236:else>
# <235:then>
15 02    # vload 2            # l
15 00    # vload 0            # S
62 00    # aaddf 0            # &S->top
2F       # amload             # S->top
A0 00 06 # if_cmpne +6        # if (l != S->top) goto <238:then>
A7 00 10 # goto +16           # goto <239:else>
# <238:then>
14 2F F8 # aldc 12280         # s[12280] = "     "
14 2F FE # aldc 12286         # s[12286] = "qstack_print (lib/stack_of_queue_of_string.c0: 92.22-92.37)"
B8 00 10 # invokestatic 16    # print__1("     ", "qstack_print (lib/stack_of_queue_of_string.c0: 92.22-92.37)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <240:endif>
# <239:else>
# <240:endif>
15 02    # vload 2            # l
62 00    # aaddf 0            # &l->data
2F       # amload             # l->data
14 30 3A # aldc 12346         # s[12346] = "qstack_print (lib/stack_of_queue_of_string.c0: 93.5-93.25)"
B8 00 26 # invokestatic 38    # queue_print__1(l->data, "qstack_print (lib/stack_of_queue_of_string.c0: 93.5-93.25)")
57       # pop                # (ignore result)
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
15 00    # vload 0            # S
62 08    # aaddf 8            # &S->floor
2F       # amload             # S->floor
A0 00 06 # if_cmpne +6        # if (l->next != S->floor) goto <241:then>
A7 00 10 # goto +16           # goto <242:else>
# <241:then>
14 30 75 # aldc 12405         # s[12405] = "\n"
14 30 77 # aldc 12407         # s[12407] = "qstack_print (lib/stack_of_queue_of_string.c0: 94.30-94.42)"
B8 00 10 # invokestatic 16    # print__1("\n", "qstack_print (lib/stack_of_queue_of_string.c0: 94.30-94.42)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <243:endif>
# <242:else>
# <243:endif>
15 02    # vload 2            # l
62 08    # aaddf 8            # &l->next
2F       # amload             # l->next
36 02    # vstore 2           # l = l->next;
A7 00 06 # goto +6            # goto <237:endif>
# <236:else>
A7 00 06 # goto +6            # break
# <237:endif>
A7 FF A0 # goto -96           # goto <232:loop>
# <234:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qstack_empty__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 2C             # code length = 44 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <244:cond_true>
A7 00 08 # goto +8            # goto <245:cond_false>
# <244:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <246:cond_end>
# <245:cond_false>
10 00    # bipush 0           # false
# <246:cond_end>
14 30 B3 # aldc 12467         # s[12467] = "lib/stack_of_queue_of_string.c0: 108.4-108.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 30 FF # aldc 12543         # s[12543] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 108.4-108.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 31 11 # aldc 12561         # s[12561] = "qstack_empty__1 (lib/stack_of_queue_of_string.c0: 107.1-108.43)"
B8 00 3F # invokestatic 63    # qstack_empty(S, "qstack_empty__1 (lib/stack_of_queue_of_string.c0: 107.1-108.43)")
36 02    # vstore 2           # _result = qstack_empty(S, "qstack_empty__1 (lib/stack_of_queue_of_string.c0: 107.1-108.43)");
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_new__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 2B             # code length = 43 bytes
14 31 51 # aldc 12625         # s[12625] = "qstack_new__1 (lib/stack_of_queue_of_string.c0: 110.1-112.43)"
B8 00 40 # invokestatic 64    # qstack_new("qstack_new__1 (lib/stack_of_queue_of_string.c0: 110.1-112.43)")
36 01    # vstore 1           # _result = qstack_new("qstack_new__1 (lib/stack_of_queue_of_string.c0: 110.1-112.43)");
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <247:cond_true>
A7 00 08 # goto +8            # goto <248:cond_false>
# <247:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <249:cond_end>
# <248:cond_false>
10 00    # bipush 0           # false
# <249:cond_end>
14 31 8F # aldc 12687         # s[12687] = "lib/stack_of_queue_of_string.c0: 111.4-111.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
14 31 D9 # aldc 12761         # s[12761] = "qstack_new__1 (lib/stack_of_queue_of_string.c0: 112.12-112.33)"
B8 00 44 # invokestatic 68    # qstack_empty__1(_result, "qstack_new__1 (lib/stack_of_queue_of_string.c0: 112.12-112.33)")
14 32 18 # aldc 12824         # s[12824] = "lib/stack_of_queue_of_string.c0: 112.4-112.34: @ensures annotation failed"
CF       # assert             # assert qstack_empty__1(_result, "qstack_new__1 (lib/stack_of_queue_of_string.c0: 112.12-112.33)") [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<qpush__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 5C             # code length = 92 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <250:cond_true>
A7 00 16 # goto +22           # goto <251:cond_false>
# <250:cond_true>
15 01    # vload 1            # x
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (x != NULL) goto <253:cond_true>
A7 00 08 # goto +8            # goto <254:cond_false>
# <253:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <255:cond_end>
# <254:cond_false>
10 00    # bipush 0           # false
# <255:cond_end>
A7 00 05 # goto +5            # goto <252:cond_end>
# <251:cond_false>
10 00    # bipush 0           # false
# <252:cond_end>
14 32 62 # aldc 12898         # s[12898] = "lib/stack_of_queue_of_string.c0: 115.4-115.36: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 32 AE # aldc 12974         # s[12974] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 115.4-115.36: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((S != NULL) && (x != NULL)) [failure message on stack]
15 00    # vload 0            # S
15 01    # vload 1            # x
14 32 C0 # aldc 12992         # s[12992] = "qpush__1 (lib/stack_of_queue_of_string.c0: 114.1-116.43)"
B8 00 41 # invokestatic 65    # qpush(S, x, "qpush__1 (lib/stack_of_queue_of_string.c0: 114.1-116.43)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 32 F9 # aldc 13049         # s[13049] = "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"))
14 33 33 # aldc 13107         # s[13107] = "lib/stack_of_queue_of_string.c0: 116.4-116.29: @ensures annotation failed"
CF       # assert             # assert !(qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # S
14 33 7D # aldc 13181         # s[13181] = "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)"))
14 33 B7 # aldc 13239         # s[13239] = "lib/stack_of_queue_of_string.c0: 116.4-116.29: @ensures annotation failed"
CF       # assert             # assert !(qstack_empty__1(S, "qpush__1 (lib/stack_of_queue_of_string.c0: 116.13-116.28)")) [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<qpop__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5A             # code length = 90 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <256:cond_true>
A7 00 08 # goto +8            # goto <257:cond_false>
# <256:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <258:cond_end>
# <257:cond_false>
10 00    # bipush 0           # false
# <258:cond_end>
14 34 01 # aldc 13313         # s[13313] = "lib/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 34 4D # aldc 13389         # s[13389] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 119.4-119.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 34 5F # aldc 13407         # s[13407] = "qpop__1 (lib/stack_of_queue_of_string.c0: 120.14-120.29)"
B8 00 44 # invokestatic 68    # qstack_empty__1(S, "qpop__1 (lib/stack_of_queue_of_string.c0: 120.14-120.29)")
10 01    # bipush 1           # 
82       # ixor               # !(qstack_empty__1(S, "qpop__1 (lib/stack_of_queue_of_string.c0: 120.14-120.29)"))
14 34 98 # aldc 13464         # s[13464] = "lib/stack_of_queue_of_string.c0: 120.4-120.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 34 E4 # aldc 13540         # s[13540] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 120.4-120.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(qstack_empty__1(S, "qpop__1 (lib/stack_of_queue_of_string.c0: 120.14-120.29)")) [failure message on stack]
15 00    # vload 0            # S
14 34 F6 # aldc 13558         # s[13558] = "qpop__1 (lib/stack_of_queue_of_string.c0: 118.1-121.43)"
B8 00 42 # invokestatic 66    # qpop(S, "qpop__1 (lib/stack_of_queue_of_string.c0: 118.1-121.43)")
36 02    # vstore 2           # _result = qpop(S, "qpop__1 (lib/stack_of_queue_of_string.c0: 118.1-121.43)");
15 02    # vload 2            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <259:cond_true>
A7 00 08 # goto +8            # goto <260:cond_false>
# <259:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <261:cond_end>
# <260:cond_false>
10 00    # bipush 0           # false
# <261:cond_end>
14 35 2E # aldc 13614         # s[13614] = "lib/stack_of_queue_of_string.c0: 121.4-121.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<qstack_print__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 2E             # code length = 46 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <262:cond_true>
A7 00 08 # goto +8            # goto <263:cond_false>
# <262:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <264:cond_end>
# <263:cond_false>
10 00    # bipush 0           # false
# <264:cond_end>
14 35 78 # aldc 13688         # s[13688] = "lib/stack_of_queue_of_string.c0: 124.4-124.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 35 C4 # aldc 13764         # s[13764] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/stack_of_queue_of_string.c0: 124.4-124.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 35 D6 # aldc 13782         # s[13782] = "qstack_print__1 (lib/stack_of_queue_of_string.c0: 123.1-124.43)"
B8 00 43 # invokestatic 67    # qstack_print(S, "qstack_print__1 (lib/stack_of_queue_of_string.c0: 123.1-124.43)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_closed__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 29             # code length = 41 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <265:cond_true>
A7 00 08 # goto +8            # goto <266:cond_false>
# <265:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <267:cond_end>
# <266:cond_false>
10 00    # bipush 0           # false
# <267:cond_end>
14 36 16 # aldc 13846         # s[13846] = "/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 36 66 # aldc 13926         # s[13926] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 10.6-10.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
B7 00 17 # invokenative 23    # file_closed(f)
36 02    # vstore 2           # _result = file_closed(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_read__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 27             # code length = 39 bytes
15 00    # vload 0            # path
B7 00 18 # invokenative 24    # file_read(path)
36 02    # vstore 2           # _result = file_read(path);
15 02    # vload 2            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <268:cond_true>
A7 00 08 # goto +8            # goto <269:cond_false>
# <268:cond_true>
10 01    # bipush 1           # true
A7 00 0E # goto +14           # goto <270:cond_end>
# <269:cond_false>
15 02    # vload 2            # _result
14 36 78 # aldc 13944         # s[13944] = "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"
B8 00 49 # invokestatic 73    # file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))
# <270:cond_end>
14 36 BA # aldc 14010         # s[14010] = "/afs/andrew/course/15/122/lib/file.h0: 15.6-15.55: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || !(file_closed__1(_result, "file_read__1 (/afs/andrew/course/15/122/lib/file.h0: 15.34-15.54)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<file_close__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <271:cond_true>
A7 00 08 # goto +8            # goto <272:cond_false>
# <271:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <273:cond_end>
# <272:cond_false>
10 00    # bipush 0           # false
# <273:cond_end>
14 37 08 # aldc 14088         # s[14088] = "/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 37 58 # aldc 14168         # s[14168] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 20.6-20.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 37 6A # aldc 14186         # s[14186] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)"))
14 37 AD # aldc 14253         # s[14253] = "/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 37 FD # aldc 14333         # s[14333] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 21.6-21.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 21.16-21.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 19 # invokenative 25    # file_close(f)
57       # pop                # (ignore result)
15 00    # vload 0            # f
14 38 0F # aldc 14351         # s[14351] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 38 52 # aldc 14418         # s[14418] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 
15 00    # vload 0            # f
14 38 A0 # aldc 14496         # s[14496] = "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)")
14 38 E3 # aldc 14563         # s[14563] = "/afs/andrew/course/15/122/lib/file.h0: 22.6-22.29: @ensures annotation failed"
CF       # assert             # assert file_closed__1(f, "file_close__1 (/afs/andrew/course/15/122/lib/file.h0: 22.14-22.28)") [failure message on stack]
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<file_eof__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 43             # code length = 67 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <274:cond_true>
A7 00 08 # goto +8            # goto <275:cond_false>
# <274:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <276:cond_end>
# <275:cond_false>
10 00    # bipush 0           # false
# <276:cond_end>
14 39 31 # aldc 14641         # s[14641] = "/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 39 81 # aldc 14721         # s[14721] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 26.6-26.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 39 93 # aldc 14739         # s[14739] = "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)"))
14 39 D4 # aldc 14804         # s[14804] = "/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3A 24 # aldc 14884         # s[14884] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 27.6-27.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_eof__1 (/afs/andrew/course/15/122/lib/file.h0: 27.16-27.30)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1A # invokenative 26    # file_eof(f)
36 02    # vstore 2           # _result = file_eof(f);
15 02    # vload 2            # _result
B0       # return             # 


#<file_readline__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 5D             # code length = 93 bytes
15 00    # vload 0            # f
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (f != NULL) goto <277:cond_true>
A7 00 08 # goto +8            # goto <278:cond_false>
# <277:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <279:cond_end>
# <278:cond_false>
10 00    # bipush 0           # false
# <279:cond_end>
14 3A 36 # aldc 14902         # s[14902] = "/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3A 86 # aldc 14982         # s[14982] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (f != NULL) [failure message on stack]
15 00    # vload 0            # f
14 3A 98 # aldc 15000         # s[15000] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"
B8 00 49 # invokestatic 73    # file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")
10 01    # bipush 1           # 
82       # ixor               # !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)"))
14 3A DE # aldc 15070         # s[15070] = "/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3B 2E # aldc 15150         # s[15150] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 35.6-35.31: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_closed__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 35.16-35.30)")) [failure message on stack]
15 00    # vload 0            # f
14 3B 40 # aldc 15168         # s[15168] = "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"
B8 00 4C # invokestatic 76    # file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")
10 01    # bipush 1           # 
82       # ixor               # !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)"))
14 3B 86 # aldc 15238         # s[15238] = "/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3B D6 # aldc 15318         # s[15318] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/file.h0: 36.6-36.28: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(file_eof__1(f, "file_readline__1 (/afs/andrew/course/15/122/lib/file.h0: 36.16-36.27)")) [failure message on stack]
15 00    # vload 0            # f
B7 00 1B # invokenative 27    # file_readline(f)
36 02    # vstore 2           # _result = file_readline(f);
15 02    # vload 2            # _result
B0       # return             # 


#<input_line>
02                # number of arguments = 2
03                # number of local variables = 3
00 50             # code length = 80 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <341:cond_true>
A7 00 08 # goto +8            # goto <342:cond_false>
# <341:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <343:cond_end>
# <342:cond_false>
10 00    # bipush 0           # false
# <343:cond_end>
14 40 0A # aldc 16394         # s[16394] = "lib/tokenize.c0: 72.4-72.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 40 44 # aldc 16452         # s[16452] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 72.4-72.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 40 56 # aldc 16470         # s[16470] = "input_line (lib/tokenize.c0: 73.14-73.19)"
B8 00 16 # invokestatic 22    # eof__1("input_line (lib/tokenize.c0: 73.14-73.19)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("input_line (lib/tokenize.c0: 73.14-73.19)"))
14 40 80 # aldc 16512         # s[16512] = "lib/tokenize.c0: 73.4-73.20: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 40 BA # aldc 16570         # s[16570] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 73.4-73.20: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("input_line (lib/tokenize.c0: 73.14-73.19)")) [failure message on stack]
14 40 CC # aldc 16588         # s[16588] = "input_line (lib/tokenize.c0: 75.17-75.27)"
B8 00 17 # invokestatic 23    # readline__1("input_line (lib/tokenize.c0: 75.17-75.27)")
36 02    # vstore 2           # line = readline__1("input_line (lib/tokenize.c0: 75.17-75.27)");
15 02    # vload 2            # line
15 00    # vload 0            # Q
14 40 F6 # aldc 16630         # s[16630] = "input_line (lib/tokenize.c0: 76.3-76.24)"
B8 00 53 # invokestatic 83    # input_string__1(line, Q, "input_line (lib/tokenize.c0: 76.3-76.24)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_line__1>
02                # number of arguments = 2
02                # number of local variables = 2
00 46             # code length = 70 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <280:cond_true>
A7 00 08 # goto +8            # goto <281:cond_false>
# <280:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <282:cond_end>
# <281:cond_false>
10 00    # bipush 0           # false
# <282:cond_end>
14 3B E8 # aldc 15336         # s[15336] = "lib/tokenize.c0: 25.6-25.25: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3C 22 # aldc 15394         # s[15394] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 25.6-25.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 3C 34 # aldc 15412         # s[15412] = "input_line__1 (lib/tokenize.c0: 26.16-26.21)"
B8 00 16 # invokestatic 22    # eof__1("input_line__1 (lib/tokenize.c0: 26.16-26.21)")
10 01    # bipush 1           # 
82       # ixor               # !(eof__1("input_line__1 (lib/tokenize.c0: 26.16-26.21)"))
14 3C 61 # aldc 15457         # s[15457] = "lib/tokenize.c0: 26.6-26.22: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 3C 9B # aldc 15515         # s[15515] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 26.6-26.22: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert !(eof__1("input_line__1 (lib/tokenize.c0: 26.16-26.21)")) [failure message on stack]
15 00    # vload 0            # Q
14 3C AD # aldc 15533         # s[15533] = "input_line__1 (lib/tokenize.c0: 24.1-26.28)"
B8 00 4E # invokestatic 78    # input_line(Q, "input_line__1 (lib/tokenize.c0: 24.1-26.28)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_file>
03                # number of arguments = 3
05                # number of local variables = 5
00 79             # code length = 121 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <344:cond_true>
A7 00 08 # goto +8            # goto <345:cond_false>
# <344:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <346:cond_end>
# <345:cond_false>
10 00    # bipush 0           # false
# <346:cond_end>
14 41 1F # aldc 16671         # s[16671] = "lib/tokenize.c0: 82.4-82.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 41 59 # aldc 16729         # s[16729] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 82.4-82.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # path
14 41 6B # aldc 16747         # s[16747] = "input_file (lib/tokenize.c0: 84.17-84.32)"
B8 00 4A # invokestatic 74    # file_read__1(path, "input_file (lib/tokenize.c0: 84.17-84.32)")
36 03    # vstore 3           # file = file_read__1(path, "input_file (lib/tokenize.c0: 84.17-84.32)");
15 03    # vload 3            # file
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (file == NULL) goto <347:then>
A7 00 0A # goto +10           # goto <348:else>
# <347:then>
14 41 95 # aldc 16789         # s[16789] = "Error: file does not exist"
BF       # athrow             # error "Error: file does not exist"
A7 00 03 # goto +3            # goto <349:endif>
# <348:else>
# <349:endif>
# <350:loop>
A7 00 03 # goto +3            # goto <351:body>
# <351:body>
15 03    # vload 3            # file
14 41 B0 # aldc 16816         # s[16816] = "input_file (lib/tokenize.c0: 86.11-86.25)"
B8 00 4C # invokestatic 76    # file_eof__1(file, "input_file (lib/tokenize.c0: 86.11-86.25)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (file_eof__1(file, "input_file (lib/tokenize.c0: 86.11-86.25)") == true) goto <354:else>
A7 00 03 # goto +3            # goto <353:then>
# <353:then>
15 03    # vload 3            # file
14 41 DA # aldc 16858         # s[16858] = "input_file (lib/tokenize.c0: 87.19-87.38)"
B8 00 4D # invokestatic 77    # file_readline__1(file, "input_file (lib/tokenize.c0: 87.19-87.38)")
36 04    # vstore 4           # line = file_readline__1(file, "input_file (lib/tokenize.c0: 87.19-87.38)");
15 04    # vload 4            # line
15 01    # vload 1            # Q
14 42 04 # aldc 16900         # s[16900] = "input_file (lib/tokenize.c0: 88.5-88.26)"
B8 00 53 # invokestatic 83    # input_string__1(line, Q, "input_file (lib/tokenize.c0: 88.5-88.26)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <355:endif>
# <354:else>
A7 00 06 # goto +6            # break
# <355:endif>
A7 FF D2 # goto -46           # goto <350:loop>
# <352:exit>
15 03    # vload 3            # file
14 42 2D # aldc 16941         # s[16941] = "input_file (lib/tokenize.c0: 90.3-90.19)"
B8 00 4B # invokestatic 75    # file_close__1(file, "input_file (lib/tokenize.c0: 90.3-90.19)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_file__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 30             # code length = 48 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <283:cond_true>
A7 00 08 # goto +8            # goto <284:cond_false>
# <283:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <285:cond_end>
# <284:cond_false>
10 00    # bipush 0           # false
# <285:cond_end>
14 3C D9 # aldc 15577         # s[15577] = "lib/tokenize.c0: 30.6-30.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 3D 13 # aldc 15635         # s[15635] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 30.6-30.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # path
15 01    # vload 1            # Q
14 3D 25 # aldc 15653         # s[15653] = "input_file__1 (lib/tokenize.c0: 29.1-30.30)"
B8 00 50 # invokestatic 80    # input_file(path, Q, "input_file__1 (lib/tokenize.c0: 29.1-30.30)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_string>
03                # number of arguments = 3
06                # number of local variables = 6
01 4D             # code length = 333 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <297:cond_true>
A7 00 08 # goto +8            # goto <298:cond_false>
# <297:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <299:cond_end>
# <298:cond_false>
10 00    # bipush 0           # false
# <299:cond_end>
14 3D CB # aldc 15819         # s[15819] = "lib/tokenize.c0: 47.4-47.23: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 3E 05 # aldc 15877         # s[15877] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 47.4-47.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # s
14 3E 17 # aldc 15895         # s[15895] = "input_string (lib/tokenize.c0: 49.13-49.29)"
B8 00 01 # invokestatic 1     # string_length__1(s, "input_string (lib/tokenize.c0: 49.13-49.29)")
36 03    # vstore 3           # len = string_length__1(s, "input_string (lib/tokenize.c0: 49.13-49.29)");
10 00    # bipush 0           # 0
36 04    # vstore 4           # cur = 0;
# <300:loop>
A7 00 03 # goto +3            # goto <301:body>
# <301:body>
10 00    # bipush 0           # 0
15 04    # vload 4            # cur
A4 00 06 # if_icmple +6       # if (0 <= cur) goto <303:cond_true>
A7 00 17 # goto +23           # goto <304:cond_false>
# <303:cond_true>
15 04    # vload 4            # cur
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (cur <= len) goto <306:cond_true>
A7 00 08 # goto +8            # goto <307:cond_false>
# <306:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <308:cond_end>
# <307:cond_false>
10 00    # bipush 0           # false
# <308:cond_end>
A7 00 05 # goto +5            # goto <305:cond_end>
# <304:cond_false>
10 00    # bipush 0           # false
# <305:cond_end>
14 3E 43 # aldc 15939         # s[15939] = "lib/tokenize.c0: 52.8-52.46: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= cur) && (cur <= len)) [failure message on stack]
15 04    # vload 4            # cur
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (cur < len) goto <309:then>
A7 00 E6 # goto +230          # goto <310:else>
# <309:then>
15 04    # vload 4            # cur
36 05    # vstore 5           # i = cur;
# <312:loop>
A7 00 03 # goto +3            # goto <313:body>
# <313:body>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (cur <= i) goto <315:cond_true>
A7 00 17 # goto +23           # goto <316:cond_false>
# <315:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (i <= len) goto <318:cond_true>
A7 00 08 # goto +8            # goto <319:cond_false>
# <318:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <320:cond_end>
# <319:cond_false>
10 00    # bipush 0           # false
# <320:cond_end>
A7 00 05 # goto +5            # goto <317:cond_end>
# <316:cond_false>
10 00    # bipush 0           # false
# <317:cond_end>
14 3E 82 # aldc 16002         # s[16002] = "lib/tokenize.c0: 56.12-56.48: @loop_invariant annotation failed"
CF       # assert             # assert ((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (i < len) goto <324:and>
A7 00 25 # goto +37           # goto <322:else>
# <324:and>
15 00    # vload 0            # s
15 05    # vload 5            # i
14 3E C2 # aldc 16066         # s[16066] = "input_string (lib/tokenize.c0: 55.39-55.58)"
B8 00 02 # invokestatic 2     # string_charat__1(s, i, "input_string (lib/tokenize.c0: 55.39-55.58)")
14 3E EE # aldc 16110         # s[16110] = "input_string (lib/tokenize.c0: 55.25-55.59)"
B8 00 54 # invokestatic 84    # is_whitespace(string_charat__1(s, i, "input_string (lib/tokenize.c0: 55.39-55.58)"), "input_string (lib/tokenize.c0: 55.25-55.59)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (is_whitespace(string_charat__1(s, i, "input_string (lib/tokenize.c0: 55.39-55.58)"), "input_string (lib/tokenize.c0: 55.25-55.59)") == true) goto <321:then>
A7 00 0D # goto +13           # goto <322:else>
# <321:then>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <323:endif>
# <322:else>
A7 00 06 # goto +6            # break
# <323:endif>
A7 FF AA # goto -86           # goto <312:loop>
# <314:exit>
15 05    # vload 5            # i
36 04    # vstore 4           # cur = i;
# <325:loop>
A7 00 03 # goto +3            # goto <326:body>
# <326:body>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (cur <= i) goto <328:cond_true>
A7 00 17 # goto +23           # goto <329:cond_false>
# <328:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # len
A4 00 06 # if_icmple +6       # if (i <= len) goto <331:cond_true>
A7 00 08 # goto +8            # goto <332:cond_false>
# <331:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <333:cond_end>
# <332:cond_false>
10 00    # bipush 0           # false
# <333:cond_end>
A7 00 05 # goto +5            # goto <330:cond_end>
# <329:cond_false>
10 00    # bipush 0           # false
# <330:cond_end>
14 3F 1A # aldc 16154         # s[16154] = "lib/tokenize.c0: 61.12-61.48: @loop_invariant annotation failed"
CF       # assert             # assert ((cur <= i) && (i <= len)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # len
A1 00 06 # if_icmplt +6       # if (i < len) goto <337:and>
A7 00 25 # goto +37           # goto <335:else>
# <337:and>
15 00    # vload 0            # s
15 05    # vload 5            # i
14 3F 5A # aldc 16218         # s[16218] = "input_string (lib/tokenize.c0: 60.40-60.59)"
B8 00 02 # invokestatic 2     # string_charat__1(s, i, "input_string (lib/tokenize.c0: 60.40-60.59)")
14 3F 86 # aldc 16262         # s[16262] = "input_string (lib/tokenize.c0: 60.26-60.60)"
B8 00 54 # invokestatic 84    # is_whitespace(string_charat__1(s, i, "input_string (lib/tokenize.c0: 60.40-60.59)"), "input_string (lib/tokenize.c0: 60.26-60.60)")
10 01    # bipush 1           # true
9F 00 10 # if_cmpeq +16       # if (is_whitespace(string_charat__1(s, i, "input_string (lib/tokenize.c0: 60.40-60.59)"), "input_string (lib/tokenize.c0: 60.26-60.60)") == true) goto <335:else>
A7 00 03 # goto +3            # goto <334:then>
# <334:then>
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <336:endif>
# <335:else>
A7 00 06 # goto +6            # break
# <336:endif>
A7 FF AA # goto -86           # goto <325:loop>
# <327:exit>
15 04    # vload 4            # cur
15 05    # vload 5            # i
A1 00 06 # if_icmplt +6       # if (cur < i) goto <338:then>
A7 00 1B # goto +27           # goto <339:else>
# <338:then>
15 01    # vload 1            # Q
15 00    # vload 0            # s
15 04    # vload 4            # cur
15 05    # vload 5            # i
14 3F B2 # aldc 16306         # s[16306] = "input_string (lib/tokenize.c0: 63.27-63.48)"
B8 00 04 # invokestatic 4     # string_sub__1(s, cur, i, "input_string (lib/tokenize.c0: 63.27-63.48)")
14 3F DE # aldc 16350         # s[16350] = "input_string (lib/tokenize.c0: 63.20-63.49)"
B8 00 24 # invokestatic 36    # enq__1(Q, string_sub__1(s, cur, i, "input_string (lib/tokenize.c0: 63.27-63.48)"), "input_string (lib/tokenize.c0: 63.20-63.49)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <340:endif>
# <339:else>
# <340:endif>
15 05    # vload 5            # i
36 04    # vstore 4           # cur = i;
A7 00 06 # goto +6            # goto <311:endif>
# <310:else>
A7 00 06 # goto +6            # break
# <311:endif>
A7 FE E9 # goto -279          # goto <300:loop>
# <302:exit>
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<input_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 30             # code length = 48 bytes
15 01    # vload 1            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <286:cond_true>
A7 00 08 # goto +8            # goto <287:cond_false>
# <286:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <288:cond_end>
# <287:cond_false>
10 00    # bipush 0           # false
# <288:cond_end>
14 3D 51 # aldc 15697         # s[15697] = "lib/tokenize.c0: 34.6-34.25: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 3D 8B # aldc 15755         # s[15755] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("lib/tokenize.c0: 34.6-34.25: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # Q
14 3D 9D # aldc 15773         # s[15773] = "input_string__1 (lib/tokenize.c0: 33.1-34.30)"
B8 00 52 # invokestatic 82    # input_string(s, Q, "input_string__1 (lib/tokenize.c0: 33.1-34.30)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<is_whitespace>
02                # number of arguments = 2
03                # number of local variables = 3
00 39             # code length = 57 bytes
15 00    # vload 0            # c
10 20    # bipush 32          # ' '
9F 00 1A # if_cmpeq +26       # if (c == ' ') goto <289:cond_true>
A7 00 03 # goto +3            # goto <293:or>
# <293:or>
15 00    # vload 0            # c
10 09    # bipush 9           # '\t'
9F 00 10 # if_cmpeq +16       # if (c == '\t') goto <289:cond_true>
A7 00 03 # goto +3            # goto <292:or>
# <292:or>
15 00    # vload 0            # c
10 0A    # bipush 10          # '\n'
9F 00 06 # if_cmpeq +6        # if (c == '\n') goto <289:cond_true>
A7 00 08 # goto +8            # goto <290:cond_false>
# <289:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <291:cond_end>
# <290:cond_false>
15 00    # vload 0            # c
10 0D    # bipush 13          # '\r'
9F 00 06 # if_cmpeq +6        # if (c == '\r') goto <294:cond_true>
A7 00 08 # goto +8            # goto <295:cond_false>
# <294:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <296:cond_end>
# <295:cond_false>
10 00    # bipush 0           # false
# <296:cond_end>
# <291:cond_end>
36 02    # vstore 2           # _result = ((((c == ' ') || (c == '\t')) || (c == '\n')) || (c == '\r'));
15 02    # vload 2            # _result
B0       # return             # 


#<parse_bool__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1C # invokenative 28    # parse_bool(s)
36 02    # vstore 2           # _result = parse_bool(s);
15 02    # vload 2            # _result
B0       # return             # 


#<parse_int__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <356:cond_true>
A7 00 17 # goto +23           # goto <357:cond_false>
# <356:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <359:cond_true>
A7 00 08 # goto +8            # goto <360:cond_false>
# <359:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <361:cond_end>
# <360:cond_false>
10 00    # bipush 0           # false
# <361:cond_end>
A7 00 05 # goto +5            # goto <358:cond_end>
# <357:cond_false>
10 00    # bipush 0           # false
# <358:cond_end>
14 42 56 # aldc 16982         # s[16982] = "/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 42 A7 # aldc 17063         # s[17063] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 13.6-13.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1D # invokenative 29    # parse_int(s, base)
36 03    # vstore 3           # _result = parse_int(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<num_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 0A             # code length = 10 bytes
15 00    # vload 0            # s
B7 00 1E # invokenative 30    # num_tokens(s)
36 02    # vstore 2           # _result = num_tokens(s);
15 02    # vload 2            # _result
B0       # return             # 


#<int_tokens__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 3B             # code length = 59 bytes
10 02    # bipush 2           # 2
15 01    # vload 1            # base
A4 00 06 # if_icmple +6       # if (2 <= base) goto <362:cond_true>
A7 00 17 # goto +23           # goto <363:cond_false>
# <362:cond_true>
15 01    # vload 1            # base
10 24    # bipush 36          # 36
A4 00 06 # if_icmple +6       # if (base <= 36) goto <365:cond_true>
A7 00 08 # goto +8            # goto <366:cond_false>
# <365:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <367:cond_end>
# <366:cond_false>
10 00    # bipush 0           # false
# <367:cond_end>
A7 00 05 # goto +5            # goto <364:cond_end>
# <363:cond_false>
10 00    # bipush 0           # false
# <364:cond_end>
14 42 B9 # aldc 17081         # s[17081] = "/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 43 0A # aldc 17162         # s[17162] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 20.6-20.39: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((2 <= base) && (base <= 36)) [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 1F # invokenative 31    # int_tokens(s, base)
36 03    # vstore 3           # _result = int_tokens(s, base);
15 03    # vload 3            # _result
B0       # return             # 


#<parse_tokens__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 26             # code length = 38 bytes
15 00    # vload 0            # s
B7 00 20 # invokenative 32    # parse_tokens(s)
36 02    # vstore 2           # _result = parse_tokens(s);
15 02    # vload 2            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 43 1C # aldc 17180         # s[17180] = "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)"
B8 00 57 # invokestatic 87    # num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) goto <368:cond_true>
A7 00 08 # goto +8            # goto <369:cond_false>
# <368:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <370:cond_end>
# <369:cond_false>
10 00    # bipush 0           # false
# <370:cond_end>
14 43 62 # aldc 17250         # s[17250] = "/afs/andrew/course/15/122/lib/parse.h0: 23.6-23.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_tokens__1 (/afs/andrew/course/15/122/lib/parse.h0: 23.34-23.47)")) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<parse_ints__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 41             # code length = 65 bytes
15 00    # vload 0            # s
15 01    # vload 1            # base
14 43 B1 # aldc 17329         # s[17329] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)"
B8 00 58 # invokestatic 88    # int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)")
14 43 F5 # aldc 17397         # s[17397] = "/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 44 46 # aldc 17478         # s[17478] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/parse.h0: 27.6-27.35: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert int_tokens__1(s, base, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 27.15-27.34)") [failure message on stack]
15 00    # vload 0            # s
15 01    # vload 1            # base
B7 00 21 # invokenative 33    # parse_ints(s, base)
36 03    # vstore 3           # _result = parse_ints(s, base);
15 03    # vload 3            # _result
BE       # arraylength        # \length(_result)
15 00    # vload 0            # s
14 44 58 # aldc 17496         # s[17496] = "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)"
B8 00 57 # invokestatic 87    # num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")
9F 00 06 # if_cmpeq +6        # if (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) goto <371:cond_true>
A7 00 08 # goto +8            # goto <372:cond_false>
# <371:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <373:cond_end>
# <372:cond_false>
10 00    # bipush 0           # false
# <373:cond_end>
14 44 9C # aldc 17564         # s[17564] = "/afs/andrew/course/15/122/lib/parse.h0: 28.6-28.48: @ensures annotation failed"
CF       # assert             # assert (\length(_result) == num_tokens__1(s, "parse_ints__1 (/afs/andrew/course/15/122/lib/parse.h0: 28.34-28.47)")) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<args_flag__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <374:cond_true>
A7 00 08 # goto +8            # goto <375:cond_false>
# <374:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <376:cond_end>
# <375:cond_false>
10 00    # bipush 0           # false
# <376:cond_end>
14 44 EB # aldc 17643         # s[17643] = "/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 45 39 # aldc 17721         # s[17721] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 8.6-8.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 22 # invokenative 34    # args_flag(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_int__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <377:cond_true>
A7 00 08 # goto +8            # goto <378:cond_false>
# <377:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <379:cond_end>
# <378:cond_false>
10 00    # bipush 0           # false
# <379:cond_end>
14 45 4B # aldc 17739         # s[17739] = "/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 45 9B # aldc 17819         # s[17819] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 14.6-14.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 23 # invokenative 35    # args_int(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_string__1>
03                # number of arguments = 3
03                # number of local variables = 3
00 2D             # code length = 45 bytes
15 01    # vload 1            # ptr
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ptr != NULL) goto <380:cond_true>
A7 00 08 # goto +8            # goto <381:cond_false>
# <380:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <382:cond_end>
# <381:cond_false>
10 00    # bipush 0           # false
# <382:cond_end>
14 45 AD # aldc 17837         # s[17837] = "/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 45 FD # aldc 17917         # s[17917] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/args.h0: 20.6-20.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (ptr != NULL) [failure message on stack]
15 00    # vload 0            # name
15 01    # vload 1            # ptr
B7 00 24 # invokenative 36    # args_string(name, ptr)
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<args_parse__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 32             # code length = 50 bytes
B7 00 25 # invokenative 37    # args_parse()
36 01    # vstore 1           # _result = args_parse();
15 01    # vload 1            # _result
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (_result == NULL) goto <383:cond_true>
A7 00 08 # goto +8            # goto <384:cond_false>
# <383:cond_true>
10 01    # bipush 1           # true
A7 00 1B # goto +27           # goto <385:cond_end>
# <384:cond_false>
15 01    # vload 1            # _result
62 00    # aaddf 0            # &_result->argc
2E       # imload             # _result->argc
15 01    # vload 1            # _result
62 08    # aaddf 8            # &_result->argv
2F       # amload             # _result->argv
BE       # arraylength        # \length(_result->argv)
9F 00 06 # if_cmpeq +6        # if (_result->argc == \length(_result->argv)) goto <386:cond_true>
A7 00 08 # goto +8            # goto <387:cond_false>
# <386:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <388:cond_end>
# <387:cond_false>
10 00    # bipush 0           # false
# <388:cond_end>
# <385:cond_end>
14 46 0F # aldc 17935         # s[17935] = "/afs/andrew/course/15/122/lib/args.h0: 34.6-34.73: @ensures annotation failed"
CF       # assert             # assert ((_result == NULL) || (_result->argc == \length(_result->argv))) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_size>
01                # number of arguments = 1
02                # number of local variables = 2
00 07             # code length = 7 bytes
10 04    # bipush 4           # 4
36 01    # vstore 1           # _result = 4;
15 01    # vload 1            # _result
B0       # return             # 


#<int_size__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 20             # code length = 32 bytes
14 46 5D # aldc 18013         # s[18013] = "int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)"
B8 00 5F # invokestatic 95    # int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)")
36 01    # vstore 1           # _result = int_size("int_size__1 (/afs/andrew/course/15/122/lib/util.h0: 8.1-9.33)");
15 01    # vload 1            # _result
10 04    # bipush 4           # 4
9F 00 06 # if_cmpeq +6        # if (_result == 4) goto <389:cond_true>
A7 00 08 # goto +8            # goto <390:cond_false>
# <389:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <391:cond_end>
# <390:cond_false>
10 00    # bipush 0           # false
# <391:cond_end>
14 46 9B # aldc 18075         # s[18075] = "/afs/andrew/course/15/122/lib/util.h0: 9.6-9.27: @ensures annotation failed"
CF       # assert             # assert (_result == 4) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_max>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 02 # ildc 2             # c[2] = 2147483647
36 01    # vstore 1           # _result = 2147483647;
15 01    # vload 1            # _result
B0       # return             # 


#<int_max__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 46 E7 # aldc 18151         # s[18151] = "int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)"
B8 00 61 # invokestatic 97    # int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)")
36 01    # vstore 1           # _result = int_max("int_max__1 (/afs/andrew/course/15/122/lib/util.h0: 10.1-11.42)");
15 01    # vload 1            # _result
13 00 00 # ildc 0             # c[0] = 2147483647
9F 00 06 # if_cmpeq +6        # if (_result == 2147483647) goto <392:cond_true>
A7 00 08 # goto +8            # goto <393:cond_false>
# <392:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <394:cond_end>
# <393:cond_false>
10 00    # bipush 0           # false
# <394:cond_end>
14 47 26 # aldc 18214         # s[18214] = "/afs/andrew/course/15/122/lib/util.h0: 11.6-11.36: @ensures annotation failed"
CF       # assert             # assert (_result == 2147483647) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<int_min>
01                # number of arguments = 1
02                # number of local variables = 2
00 08             # code length = 8 bytes
13 00 03 # ildc 3             # c[3] = -2147483648
36 01    # vstore 1           # _result = -2147483648;
15 01    # vload 1            # _result
B0       # return             # 


#<int_min__1>
01                # number of arguments = 1
02                # number of local variables = 2
00 21             # code length = 33 bytes
14 47 74 # aldc 18292         # s[18292] = "int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)"
B8 00 63 # invokestatic 99    # int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)")
36 01    # vstore 1           # _result = int_min("int_min__1 (/afs/andrew/course/15/122/lib/util.h0: 12.1-13.43)");
15 01    # vload 1            # _result
13 00 01 # ildc 1             # c[1] = -2147483648
9F 00 06 # if_cmpeq +6        # if (_result == -(-2147483648)) goto <395:cond_true>
A7 00 08 # goto +8            # goto <396:cond_false>
# <395:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <397:cond_end>
# <396:cond_false>
10 00    # bipush 0           # false
# <397:cond_end>
14 47 B3 # aldc 18355         # s[18355] = "/afs/andrew/course/15/122/lib/util.h0: 13.6-13.37: @ensures annotation failed"
CF       # assert             # assert (_result == -(-2147483648)) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<abs>
02                # number of arguments = 2
03                # number of local variables = 3
00 52             # code length = 82 bytes
15 00    # vload 0            # x
14 4C 5C # aldc 19548         # s[19548] = "abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)"
B8 00 64 # invokestatic 100   # int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) goto <464:cond_true>
A7 00 08 # goto +8            # goto <465:cond_false>
# <464:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <466:cond_end>
# <465:cond_false>
10 00    # bipush 0           # false
# <466:cond_end>
14 4C 95 # aldc 19605         # s[19605] = "/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4C E5 # aldc 19685         # s[19685] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.c0: 29.4-29.27: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs (/afs/andrew/course/15/122/lib/util.c0: 29.17-29.26)")) [failure message on stack]
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <467:cond_true>
A7 00 0B # goto +11           # goto <468:cond_false>
# <467:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <469:cond_end>
# <468:cond_false>
15 00    # vload 0            # x
# <469:cond_end>
36 02    # vstore 2           # _result = ((x < 0) ? -(x) : x);
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <470:cond_true>
A7 00 08 # goto +8            # goto <471:cond_false>
# <470:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <472:cond_end>
# <471:cond_false>
10 00    # bipush 0           # false
# <472:cond_end>
14 4C F7 # aldc 19703         # s[19703] = "/afs/andrew/course/15/122/lib/util.c0: 30.4-30.25: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<abs__1>
02                # number of arguments = 2
03                # number of local variables = 3
00 6D             # code length = 109 bytes
15 00    # vload 0            # x
14 48 01 # aldc 18433         # s[18433] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)"
B8 00 64 # invokestatic 100   # int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")
A3 00 06 # if_icmpgt +6       # if (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) goto <398:cond_true>
A7 00 08 # goto +8            # goto <399:cond_false>
# <398:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <400:cond_end>
# <399:cond_false>
10 00    # bipush 0           # false
# <400:cond_end>
14 48 3D # aldc 18493         # s[18493] = "/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 48 8D # aldc 18573         # s[18573] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.h0: 17.6-17.29: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (x > int_min__1("abs__1 (/afs/andrew/course/15/122/lib/util.h0: 17.19-17.28)")) [failure message on stack]
15 00    # vload 0            # x
14 48 9F # aldc 18591         # s[18591] = "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)"
B8 00 65 # invokestatic 101   # abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)")
36 02    # vstore 2           # _result = abs(x, "abs__1 (/afs/andrew/course/15/122/lib/util.h0: 16.1-19.48)");
15 02    # vload 2            # _result
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (_result >= 0) goto <401:cond_true>
A7 00 08 # goto +8            # goto <402:cond_false>
# <401:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <403:cond_end>
# <402:cond_false>
10 00    # bipush 0           # false
# <403:cond_end>
14 48 DA # aldc 18650         # s[18650] = "/afs/andrew/course/15/122/lib/util.h0: 18.6-18.27: @ensures annotation failed"
CF       # assert             # assert (_result >= 0) [failure message on stack]
15 02    # vload 2            # _result
15 00    # vload 0            # x
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (x < 0) goto <407:cond_true>
A7 00 0B # goto +11           # goto <408:cond_false>
# <407:cond_true>
10 00    # bipush 0           # 
15 00    # vload 0            # x
64       # isub               # -(x)
A7 00 05 # goto +5            # goto <409:cond_end>
# <408:cond_false>
15 00    # vload 0            # x
# <409:cond_end>
9F 00 06 # if_cmpeq +6        # if (_result == ((x < 0) ? -(x) : x)) goto <404:cond_true>
A7 00 08 # goto +8            # goto <405:cond_false>
# <404:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <406:cond_end>
# <405:cond_false>
10 00    # bipush 0           # false
# <406:cond_end>
14 49 28 # aldc 18728         # s[18728] = "/afs/andrew/course/15/122/lib/util.h0: 19.6-19.42: @ensures annotation failed"
CF       # assert             # assert (_result == ((x < 0) ? -(x) : x)) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<max>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <434:cond_true>
A7 00 08 # goto +8            # goto <435:cond_false>
# <434:cond_true>
15 00    # vload 0            # x
A7 00 05 # goto +5            # goto <436:cond_end>
# <435:cond_false>
15 01    # vload 1            # y
# <436:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? x : y);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <437:cond_true>
A7 00 08 # goto +8            # goto <438:cond_false>
# <437:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <439:cond_end>
# <438:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <440:cond_true>
A7 00 08 # goto +8            # goto <441:cond_false>
# <440:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <442:cond_end>
# <441:cond_false>
10 00    # bipush 0           # false
# <442:cond_end>
# <439:cond_end>
14 4B 24 # aldc 19236         # s[19236] = "/afs/andrew/course/15/122/lib/util.c0: 13.4-13.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <443:cond_true>
A7 00 17 # goto +23           # goto <444:cond_false>
# <443:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <446:cond_true>
A7 00 08 # goto +8            # goto <447:cond_false>
# <446:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <448:cond_end>
# <447:cond_false>
10 00    # bipush 0           # false
# <448:cond_end>
A7 00 05 # goto +5            # goto <445:cond_end>
# <444:cond_false>
10 00    # bipush 0           # false
# <445:cond_end>
14 4B 72 # aldc 19314         # s[19314] = "/afs/andrew/course/15/122/lib/util.c0: 14.4-14.41: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<max__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 49 76 # aldc 18806         # s[18806] = "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)"
B8 00 67 # invokestatic 103   # max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)")
36 03    # vstore 3           # _result = max(x, y, "max__1 (/afs/andrew/course/15/122/lib/util.h0: 22.1-24.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <410:cond_true>
A7 00 08 # goto +8            # goto <411:cond_false>
# <410:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <412:cond_end>
# <411:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <413:cond_true>
A7 00 08 # goto +8            # goto <414:cond_false>
# <413:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <415:cond_end>
# <414:cond_false>
10 00    # bipush 0           # false
# <415:cond_end>
# <412:cond_end>
14 49 B1 # aldc 18865         # s[18865] = "/afs/andrew/course/15/122/lib/util.h0: 23.6-23.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A2 00 06 # if_icmpge +6       # if (_result >= x) goto <416:cond_true>
A7 00 17 # goto +23           # goto <417:cond_false>
# <416:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A2 00 06 # if_icmpge +6       # if (_result >= y) goto <419:cond_true>
A7 00 08 # goto +8            # goto <420:cond_false>
# <419:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <421:cond_end>
# <420:cond_false>
10 00    # bipush 0           # false
# <421:cond_end>
A7 00 05 # goto +5            # goto <418:cond_end>
# <417:cond_false>
10 00    # bipush 0           # false
# <418:cond_end>
14 49 FF # aldc 18943         # s[18943] = "/afs/andrew/course/15/122/lib/util.h0: 24.6-24.43: @ensures annotation failed"
CF       # assert             # assert ((_result >= x) && (_result >= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min>
03                # number of arguments = 3
04                # number of local variables = 4
00 5E             # code length = 94 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
A3 00 06 # if_icmpgt +6       # if (x > y) goto <449:cond_true>
A7 00 08 # goto +8            # goto <450:cond_false>
# <449:cond_true>
15 01    # vload 1            # y
A7 00 05 # goto +5            # goto <451:cond_end>
# <450:cond_false>
15 00    # vload 0            # x
# <451:cond_end>
36 03    # vstore 3           # _result = ((x > y) ? y : x);
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <452:cond_true>
A7 00 08 # goto +8            # goto <453:cond_false>
# <452:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <454:cond_end>
# <453:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <455:cond_true>
A7 00 08 # goto +8            # goto <456:cond_false>
# <455:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <457:cond_end>
# <456:cond_false>
10 00    # bipush 0           # false
# <457:cond_end>
# <454:cond_end>
14 4B C0 # aldc 19392         # s[19392] = "/afs/andrew/course/15/122/lib/util.c0: 21.4-21.41: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <458:cond_true>
A7 00 17 # goto +23           # goto <459:cond_false>
# <458:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <461:cond_true>
A7 00 08 # goto +8            # goto <462:cond_false>
# <461:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <463:cond_end>
# <462:cond_false>
10 00    # bipush 0           # false
# <463:cond_end>
A7 00 05 # goto +5            # goto <460:cond_end>
# <459:cond_false>
10 00    # bipush 0           # false
# <460:cond_end>
14 4C 0E # aldc 19470         # s[19470] = "/afs/andrew/course/15/122/lib/util.c0: 22.4-22.41: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<min__1>
03                # number of arguments = 3
04                # number of local variables = 4
00 57             # code length = 87 bytes
15 00    # vload 0            # x
15 01    # vload 1            # y
14 4A 4D # aldc 19021         # s[19021] = "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)"
B8 00 69 # invokestatic 105   # min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)")
36 03    # vstore 3           # _result = min(x, y, "min__1 (/afs/andrew/course/15/122/lib/util.h0: 27.1-29.49)");
15 03    # vload 3            # _result
15 00    # vload 0            # x
9F 00 06 # if_cmpeq +6        # if (_result == x) goto <422:cond_true>
A7 00 08 # goto +8            # goto <423:cond_false>
# <422:cond_true>
10 01    # bipush 1           # true
A7 00 14 # goto +20           # goto <424:cond_end>
# <423:cond_false>
15 03    # vload 3            # _result
15 01    # vload 1            # y
9F 00 06 # if_cmpeq +6        # if (_result == y) goto <425:cond_true>
A7 00 08 # goto +8            # goto <426:cond_false>
# <425:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <427:cond_end>
# <426:cond_false>
10 00    # bipush 0           # false
# <427:cond_end>
# <424:cond_end>
14 4A 88 # aldc 19080         # s[19080] = "/afs/andrew/course/15/122/lib/util.h0: 28.6-28.43: @ensures annotation failed"
CF       # assert             # assert ((_result == x) || (_result == y)) [failure message on stack]
15 03    # vload 3            # _result
15 00    # vload 0            # x
A4 00 06 # if_icmple +6       # if (_result <= x) goto <428:cond_true>
A7 00 17 # goto +23           # goto <429:cond_false>
# <428:cond_true>
15 03    # vload 3            # _result
15 01    # vload 1            # y
A4 00 06 # if_icmple +6       # if (_result <= y) goto <431:cond_true>
A7 00 08 # goto +8            # goto <432:cond_false>
# <431:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <433:cond_end>
# <432:cond_false>
10 00    # bipush 0           # false
# <433:cond_end>
A7 00 05 # goto +5            # goto <430:cond_end>
# <429:cond_false>
10 00    # bipush 0           # false
# <430:cond_end>
14 4A D6 # aldc 19158         # s[19158] = "/afs/andrew/course/15/122/lib/util.h0: 29.6-29.43: @ensures annotation failed"
CF       # assert             # assert ((_result <= x) && (_result <= y)) [failure message on stack]
15 03    # vload 3            # _result
B0       # return             # 


#<int2hex>
02                # number of arguments = 2
06                # number of local variables = 6
00 AE             # code length = 174 bytes
10 02    # bipush 2           # 2
14 4E AB # aldc 20139         # s[20139] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"
B8 00 60 # invokestatic 96    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"))
36 03    # vstore 3           # digits = (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 51.18-51.28)"));
15 03    # vload 3            # digits
10 01    # bipush 1           # 1
60       # iadd               # (digits + 1)
BC 01    # newarray 1         # alloc_array(char, (digits + 1))
36 04    # vstore 4           # s = alloc_array(char, (digits + 1));
15 04    # vload 4            # s
15 03    # vload 3            # digits
63       # aadds              # &s[digits]
10 00    # bipush 0           # '\000'
55       # cmstore            # s[digits] = '\0';
10 00    # bipush 0           # 0
36 05    # vstore 5           # i = 0;
# <487:loop>
A7 00 03 # goto +3            # goto <488:body>
# <488:body>
10 00    # bipush 0           # 0
15 05    # vload 5            # i
A4 00 06 # if_icmple +6       # if (0 <= i) goto <490:cond_true>
A7 00 17 # goto +23           # goto <491:cond_false>
# <490:cond_true>
15 05    # vload 5            # i
15 03    # vload 3            # digits
A4 00 06 # if_icmple +6       # if (i <= digits) goto <493:cond_true>
A7 00 08 # goto +8            # goto <494:cond_false>
# <493:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <495:cond_end>
# <494:cond_false>
10 00    # bipush 0           # false
# <495:cond_end>
A7 00 05 # goto +5            # goto <492:cond_end>
# <491:cond_false>
10 00    # bipush 0           # false
# <492:cond_end>
14 4E E8 # aldc 20200         # s[20200] = "/afs/andrew/course/15/122/lib/util.c0: 55.8-55.45: @loop_invariant annotation failed"
CF       # assert             # assert ((0 <= i) && (i <= digits)) [failure message on stack]
15 05    # vload 5            # i
15 03    # vload 3            # digits
A1 00 06 # if_icmplt +6       # if (i < digits) goto <496:then>
A7 00 2B # goto +43           # goto <497:else>
# <496:then>
15 04    # vload 4            # s
15 03    # vload 3            # digits
15 05    # vload 5            # i
64       # isub               # (digits - i)
10 01    # bipush 1           # 1
64       # isub               # ((digits - i) - 1)
63       # aadds              # &s[((digits - i) - 1)]
15 00    # vload 0            # x
10 0F    # bipush 15          # 15
7E       # iand               # (x & 15)
14 4F 3D # aldc 20285         # s[20285] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)"
B8 00 6C # invokestatic 108   # hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)")
55       # cmstore            # s[((digits - i) - 1)] = hexdig2char((x & 15), "int2hex (/afs/andrew/course/15/122/lib/util.c0: 57.23-57.43)");
15 00    # vload 0            # x
10 04    # bipush 4           # 4
7A       # ishr               # (x >> 4)
36 00    # vstore 0           # x = (x >> 4);
15 05    # vload 5            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 05    # vstore 5           # i += 1;
A7 00 06 # goto +6            # goto <498:endif>
# <497:else>
A7 00 06 # goto +6            # break
# <498:endif>
A7 FF A4 # goto -92           # goto <487:loop>
# <489:exit>
15 04    # vload 4            # s
14 4F 7A # aldc 20346         # s[20346] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)"
B8 00 0D # invokestatic 13    # string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)")
36 02    # vstore 2           # _result = string_from_chararray__1(s, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 60.10-60.34)");
15 02    # vload 2            # _result
14 4F B7 # aldc 20407         # s[20407] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)"
B8 00 01 # invokestatic 1     # string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)")
10 02    # bipush 2           # 2
14 4F F4 # aldc 20468         # s[20468] = "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"
B8 00 60 # invokestatic 96    # int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)")
68       # imul               # (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))
9F 00 06 # if_cmpeq +6        # if (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) goto <499:cond_true>
A7 00 08 # goto +8            # goto <500:cond_false>
# <499:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <501:cond_end>
# <500:cond_false>
10 00    # bipush 0           # false
# <501:cond_end>
14 50 31 # aldc 20529         # s[20529] = "/afs/andrew/course/15/122/lib/util.c0: 49.4-49.51: @ensures annotation failed"
CF       # assert             # assert (string_length__1(_result, "int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.12-49.34)") == (2 * int_size__1("int2hex (/afs/andrew/course/15/122/lib/util.c0: 49.40-49.50)"))) [failure message on stack]
15 02    # vload 2            # _result
B0       # return             # 


#<hexdig2char>
02                # number of arguments = 2
03                # number of local variables = 3
00 93             # code length = 147 bytes
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <473:cond_true>
A7 00 17 # goto +23           # goto <474:cond_false>
# <473:cond_true>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <476:cond_true>
A7 00 08 # goto +8            # goto <477:cond_false>
# <476:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <478:cond_end>
# <477:cond_false>
10 00    # bipush 0           # false
# <478:cond_end>
A7 00 05 # goto +5            # goto <475:cond_end>
# <474:cond_false>
10 00    # bipush 0           # false
# <475:cond_end>
14 4D 45 # aldc 19781         # s[19781] = "/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 4D 95 # aldc 19861         # s[19861] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("/afs/andrew/course/15/122/lib/util.c0: 37.4-37.30: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert ((0 <= d) && (d < 16)) [failure message on stack]
10 00    # bipush 0           # 0
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (0 <= d) goto <482:and>
A7 00 26 # goto +38           # goto <480:else>
# <482:and>
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
A1 00 06 # if_icmplt +6       # if (d < 10) goto <479:then>
A7 00 1C # goto +28           # goto <480:else>
# <479:then>
10 30    # bipush 48          # '0'
14 4D A7 # aldc 19879         # s[19879] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)"
B8 00 0E # invokestatic 14    # char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)")
15 00    # vload 0            # d
60       # iadd               # (char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d)
14 4D E8 # aldc 19944         # s[19944] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)"
B8 00 0F # invokestatic 15    # char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('0', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.21-40.34)") + d), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 40.12-40.39)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 3A # goto +58           # goto <481:endif>
# <480:else>
10 0A    # bipush 10          # 10
15 00    # vload 0            # d
A4 00 06 # if_icmple +6       # if (10 <= d) goto <486:and>
A7 00 29 # goto +41           # goto <484:else>
# <486:and>
15 00    # vload 0            # d
10 10    # bipush 16          # 16
A1 00 06 # if_icmplt +6       # if (d < 16) goto <483:then>
A7 00 1F # goto +31           # goto <484:else>
# <483:then>
10 41    # bipush 65          # 'A'
14 4E 29 # aldc 20009         # s[20009] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)"
B8 00 0E # invokestatic 14    # char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)")
15 00    # vload 0            # d
10 0A    # bipush 10          # 10
64       # isub               # (d - 10)
60       # iadd               # (char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10))
14 4E 6A # aldc 20074         # s[20074] = "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)"
B8 00 0F # invokestatic 15    # char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)")
36 02    # vstore 2           # _result = char_chr__1((char_ord__1('A', "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.21-42.34)") + (d - 10)), "hexdig2char (/afs/andrew/course/15/122/lib/util.c0: 42.12-42.44)");
15 02    # vload 2            # _result
B0       # return             # 
A7 00 0A # goto +10           # goto <485:endif>
# <484:else>
10 3F    # bipush 63          # '\?'
36 02    # vstore 2           # _result = '?';
15 02    # vload 2            # _result
B0       # return             # 
# <485:endif>
# <481:endif>


#<init_state>
01                # number of arguments = 1
03                # number of local variables = 3
00 35             # code length = 53 bytes
BB 10    # new 16             # alloc(struct state_header)
36 02    # vstore 2           # new = alloc(struct state_header);
15 02    # vload 2            # new
62 00    # aaddf 0            # &new->dict
14 50 7F # aldc 20607         # s[20607] = "init_state (clac.c0: 30.15-30.25)"
B8 00 2E # invokestatic 46    # dict_new__1("init_state (clac.c0: 30.15-30.25)")
4F       # amstore            # new->dict = dict_new__1("init_state (clac.c0: 30.15-30.25)");
15 02    # vload 2            # new
62 08    # aaddf 8            # &new->qstack
14 50 A1 # aldc 20641         # s[20641] = "init_state (clac.c0: 31.17-31.29)"
B8 00 45 # invokestatic 69    # qstack_new__1("init_state (clac.c0: 31.17-31.29)")
4F       # amstore            # new->qstack = qstack_new__1("init_state (clac.c0: 31.17-31.29)");
15 02    # vload 2            # new
36 01    # vstore 1           # _result = new;
15 01    # vload 1            # _result
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (_result != NULL) goto <502:cond_true>
A7 00 08 # goto +8            # goto <503:cond_false>
# <502:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <504:cond_end>
# <503:cond_false>
10 00    # bipush 0           # false
# <504:cond_end>
14 50 C3 # aldc 20675         # s[20675] = "clac.c0: 27.4-27.28: @ensures annotation failed"
CF       # assert             # assert (_result != NULL) [failure message on stack]
15 01    # vload 1            # _result
B0       # return             # 


#<POW>
03                # number of arguments = 3
05                # number of local variables = 5
00 69             # code length = 105 bytes
15 01    # vload 1            # y
10 00    # bipush 0           # 0
A2 00 06 # if_icmpge +6       # if (y >= 0) goto <505:cond_true>
A7 00 08 # goto +8            # goto <506:cond_false>
# <505:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <507:cond_end>
# <506:cond_false>
10 00    # bipush 0           # false
# <507:cond_end>
14 50 F3 # aldc 20723         # s[20723] = "clac.c0: 38.4-38.20: @requires annotation failed\n"
15 02    # vload 2            # _caller
14 51 25 # aldc 20773         # s[20773] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("clac.c0: 38.4-38.20: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (y >= 0) [failure message on stack]
10 01    # bipush 1           # 1
36 04    # vstore 4           # r = 1;
# <508:loop>
A7 00 03 # goto +3            # goto <509:body>
# <509:body>
15 01    # vload 1            # y
10 01    # bipush 1           # 1
A3 00 06 # if_icmpgt +6       # if (y > 1) goto <511:then>
A7 00 2B # goto +43           # goto <512:else>
# <511:then>
15 01    # vload 1            # y
10 02    # bipush 2           # 2
70       # irem               # (y % 2)
10 01    # bipush 1           # 1
9F 00 06 # if_cmpeq +6        # if ((y % 2) == 1) goto <514:then>
A7 00 0D # goto +13           # goto <515:else>
# <514:then>
15 00    # vload 0            # x
15 04    # vload 4            # r
68       # imul               # (x * r)
36 04    # vstore 4           # r = (x * r);
A7 00 03 # goto +3            # goto <516:endif>
# <515:else>
# <516:endif>
15 00    # vload 0            # x
15 00    # vload 0            # x
68       # imul               # (x * x)
36 00    # vstore 0           # x = (x * x);
15 01    # vload 1            # y
10 02    # bipush 2           # 2
6C       # idiv               # (y / 2)
36 01    # vstore 1           # y = (y / 2);
A7 00 06 # goto +6            # goto <513:endif>
# <512:else>
A7 00 06 # goto +6            # break
# <513:endif>
A7 FF C8 # goto -56           # goto <508:loop>
# <510:exit>
15 04    # vload 4            # r
15 00    # vload 0            # x
68       # imul               # (r * x)
36 03    # vstore 3           # _result = (r * x);
15 03    # vload 3            # _result
B0       # return             # 


#<eval>
04                # number of arguments = 4
0A                # number of local variables = 10
09 D8             # code length = 2520 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <520:and>
A7 00 1F # goto +31           # goto <518:cond_false>
# <520:and>
15 01    # vload 1            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <517:cond_true>
A7 00 16 # goto +22           # goto <518:cond_false>
# <517:cond_true>
15 02    # vload 2            # ST
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (ST != NULL) goto <521:cond_true>
A7 00 08 # goto +8            # goto <522:cond_false>
# <521:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <523:cond_end>
# <522:cond_false>
10 00    # bipush 0           # false
# <523:cond_end>
A7 00 05 # goto +5            # goto <519:cond_end>
# <518:cond_false>
10 00    # bipush 0           # false
# <519:cond_end>
14 51 37 # aldc 20791         # s[20791] = "clac.c0: 58.4-58.50: @requires annotation failed\n"
15 03    # vload 3            # _caller
14 51 69 # aldc 20841         # s[20841] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("clac.c0: 58.4-58.50: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (((Q != NULL) && (S != NULL)) && (ST != NULL)) [failure message on stack]
# <524:loop>
A7 00 03 # goto +3            # goto <525:body>
# <525:body>
15 00    # vload 0            # Q
14 51 7B # aldc 20859         # s[20859] = "eval (clac.c0: 61.11-61.25)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 61.11-61.25)")
10 01    # bipush 1           # true
9F 09 6D # if_cmpeq +2413     # if (queue_empty__1(Q, "eval (clac.c0: 61.11-61.25)") == true) goto <528:else>
A7 00 03 # goto +3            # goto <527:then>
# <527:then>
14 51 97 # aldc 20887         # s[20887] = ""
36 05    # vstore 5           # tok = "";
15 00    # vload 0            # Q
14 51 98 # aldc 20888         # s[20888] = "eval (clac.c0: 63.10-63.24)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 63.10-63.24)")
10 01    # bipush 1           # true
9F 00 13 # if_cmpeq +19       # if (queue_empty__1(Q, "eval (clac.c0: 63.10-63.24)") == true) goto <531:else>
A7 00 03 # goto +3            # goto <530:then>
# <530:then>
15 00    # vload 0            # Q
14 51 B4 # aldc 20916         # s[20916] = "eval (clac.c0: 64.13-64.19)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 64.13-64.19)")
36 05    # vstore 5           # tok = deq__1(Q, "eval (clac.c0: 64.13-64.19)");
A7 00 03 # goto +3            # goto <532:endif>
# <531:else>
# <532:endif>
15 05    # vload 5            # tok
14 51 D0 # aldc 20944         # s[20944] = "print"
14 51 D6 # aldc 20950         # s[20950] = "eval (clac.c0: 69.9-69.35)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "print", "eval (clac.c0: 69.9-69.35)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "print", "eval (clac.c0: 69.9-69.35)") == true) goto <533:then>
A7 00 44 # goto +68           # goto <534:else>
# <533:then>
15 01    # vload 1            # S
14 51 F1 # aldc 20977         # s[20977] = "eval (clac.c0: 70.12-70.26)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 70.12-70.26)")
10 01    # bipush 1           # true
9F 00 30 # if_cmpeq +48       # if (stack_empty__1(S, "eval (clac.c0: 70.12-70.26)") == true) goto <537:else>
A7 00 03 # goto +3            # goto <536:then>
# <536:then>
15 01    # vload 1            # S
14 52 0D # aldc 21005         # s[21005] = "eval (clac.c0: 71.17-71.23)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 71.17-71.23)")
36 06    # vstore 6           # x = pop__1(S, "eval (clac.c0: 71.17-71.23)");
14 52 29 # aldc 21033         # s[21033] = ""
14 52 2A # aldc 21034         # s[21034] = "eval (clac.c0: 72.9-72.26)"
B8 00 10 # invokestatic 16    # print__1("", "eval (clac.c0: 72.9-72.26)")
57       # pop                # (ignore result)
15 06    # vload 6            # x
14 52 45 # aldc 21061         # s[21061] = "eval (clac.c0: 72.9-72.26)"
B8 00 12 # invokestatic 18    # printint__1(x, "eval (clac.c0: 72.9-72.26)")
57       # pop                # (ignore result)
14 52 60 # aldc 21088         # s[21088] = "\n"
14 52 62 # aldc 21090         # s[21090] = "eval (clac.c0: 72.9-72.26)"
B8 00 10 # invokestatic 16    # print__1("\n", "eval (clac.c0: 72.9-72.26)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <538:endif>
# <537:else>
14 52 7D # aldc 21117         # s[21117] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
# <538:endif>
A7 08 F1 # goto +2289         # goto <535:endif>
# <534:else>
15 05    # vload 5            # tok
14 52 9A # aldc 21146         # s[21146] = "quit"
14 52 9F # aldc 21151         # s[21151] = "eval (clac.c0: 79.14-79.39)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "quit", "eval (clac.c0: 79.14-79.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "quit", "eval (clac.c0: 79.14-79.39)") == true) goto <539:then>
A7 00 28 # goto +40           # goto <540:else>
# <539:then>
10 00    # bipush 0           # false
36 04    # vstore 4           # _result = false;
15 04    # vload 4            # _result
10 00    # bipush 0           # false
9F 00 06 # if_cmpeq +6        # if (_result == false) goto <542:cond_true>
A7 00 08 # goto +8            # goto <543:cond_false>
# <542:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <544:cond_end>
# <543:cond_false>
15 00    # vload 0            # Q
14 52 BB # aldc 21179         # s[21179] = "eval (clac.c0: 59.32-59.46)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 59.32-59.46)")
# <544:cond_end>
14 52 D7 # aldc 21207         # s[21207] = "clac.c0: 59.4-59.47: @ensures annotation failed"
CF       # assert             # assert ((_result == false) || queue_empty__1(Q, "eval (clac.c0: 59.32-59.46)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 
A7 08 B9 # goto +2233         # goto <541:endif>
# <540:else>
15 05    # vload 5            # tok
14 53 07 # aldc 21255         # s[21255] = "+"
14 53 09 # aldc 21257         # s[21257] = "eval (clac.c0: 84.14-84.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "+", "eval (clac.c0: 84.14-84.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "+", "eval (clac.c0: 84.14-84.36)") == true) goto <545:then>
A7 00 5A # goto +90           # goto <546:else>
# <545:then>
15 01    # vload 1            # S
14 53 25 # aldc 21285         # s[21285] = "eval (clac.c0: 85.11-85.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 85.11-85.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 85.11-85.25)") == true) goto <548:then>
A7 00 0A # goto +10           # goto <549:else>
# <548:then>
14 53 41 # aldc 21313         # s[21313] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <550:endif>
# <549:else>
# <550:endif>
15 01    # vload 1            # S
14 53 5E # aldc 21342         # s[21342] = "eval (clac.c0: 88.15-88.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 88.15-88.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 88.15-88.21)");
15 01    # vload 1            # S
14 53 7A # aldc 21370         # s[21370] = "eval (clac.c0: 89.11-89.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 89.11-89.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 89.11-89.25)") == true) goto <551:then>
A7 00 0A # goto +10           # goto <552:else>
# <551:then>
14 53 96 # aldc 21398         # s[21398] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <553:endif>
# <552:else>
# <553:endif>
15 01    # vload 1            # S
14 53 B3 # aldc 21427         # s[21427] = "eval (clac.c0: 92.15-92.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 92.15-92.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 92.15-92.21)");
15 06    # vload 6            # y
15 07    # vload 7            # x
60       # iadd               # (y + x)
36 08    # vstore 8           # sum = (y + x);
15 01    # vload 1            # S
15 08    # vload 8            # sum
14 53 CF # aldc 21455         # s[21455] = "eval (clac.c0: 94.7-94.19)"
B8 00 3A # invokestatic 58    # push__1(S, sum, "eval (clac.c0: 94.7-94.19)")
57       # pop                # (ignore result)
A7 08 4F # goto +2127         # goto <547:endif>
# <546:else>
15 05    # vload 5            # tok
14 53 EA # aldc 21482         # s[21482] = "-"
14 53 EC # aldc 21484         # s[21484] = "eval (clac.c0: 98.14-98.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "-", "eval (clac.c0: 98.14-98.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "-", "eval (clac.c0: 98.14-98.36)") == true) goto <554:then>
A7 00 5A # goto +90           # goto <555:else>
# <554:then>
15 01    # vload 1            # S
14 54 08 # aldc 21512         # s[21512] = "eval (clac.c0: 99.11-99.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 99.11-99.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 99.11-99.25)") == true) goto <557:then>
A7 00 0A # goto +10           # goto <558:else>
# <557:then>
14 54 24 # aldc 21540         # s[21540] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <559:endif>
# <558:else>
# <559:endif>
15 01    # vload 1            # S
14 54 41 # aldc 21569         # s[21569] = "eval (clac.c0: 102.15-102.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 102.15-102.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 102.15-102.21)");
15 01    # vload 1            # S
14 54 5F # aldc 21599         # s[21599] = "eval (clac.c0: 103.11-103.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 103.11-103.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 103.11-103.25)") == true) goto <560:then>
A7 00 0A # goto +10           # goto <561:else>
# <560:then>
14 54 7D # aldc 21629         # s[21629] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <562:endif>
# <561:else>
# <562:endif>
15 01    # vload 1            # S
14 54 9A # aldc 21658         # s[21658] = "eval (clac.c0: 106.15-106.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 106.15-106.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 106.15-106.21)");
15 07    # vload 7            # x
15 06    # vload 6            # y
64       # isub               # (x - y)
36 08    # vstore 8           # difference = (x - y);
15 01    # vload 1            # S
15 08    # vload 8            # difference
14 54 B8 # aldc 21688         # s[21688] = "eval (clac.c0: 108.7-108.26)"
B8 00 3A # invokestatic 58    # push__1(S, difference, "eval (clac.c0: 108.7-108.26)")
57       # pop                # (ignore result)
A7 07 E5 # goto +2021         # goto <556:endif>
# <555:else>
15 05    # vload 5            # tok
14 54 D5 # aldc 21717         # s[21717] = "*"
14 54 D7 # aldc 21719         # s[21719] = "eval (clac.c0: 113.14-113.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "*", "eval (clac.c0: 113.14-113.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "*", "eval (clac.c0: 113.14-113.36)") == true) goto <563:then>
A7 00 5A # goto +90           # goto <564:else>
# <563:then>
15 01    # vload 1            # S
14 54 F5 # aldc 21749         # s[21749] = "eval (clac.c0: 114.11-114.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 114.11-114.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 114.11-114.25)") == true) goto <566:then>
A7 00 0A # goto +10           # goto <567:else>
# <566:then>
14 55 13 # aldc 21779         # s[21779] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <568:endif>
# <567:else>
# <568:endif>
15 01    # vload 1            # S
14 55 30 # aldc 21808         # s[21808] = "eval (clac.c0: 117.15-117.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 117.15-117.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 117.15-117.21)");
15 01    # vload 1            # S
14 55 4E # aldc 21838         # s[21838] = "eval (clac.c0: 118.11-118.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 118.11-118.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 118.11-118.25)") == true) goto <569:then>
A7 00 0A # goto +10           # goto <570:else>
# <569:then>
14 55 6C # aldc 21868         # s[21868] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <571:endif>
# <570:else>
# <571:endif>
15 01    # vload 1            # S
14 55 89 # aldc 21897         # s[21897] = "eval (clac.c0: 121.15-121.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 121.15-121.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 121.15-121.21)");
15 07    # vload 7            # x
15 06    # vload 6            # y
68       # imul               # (x * y)
36 08    # vstore 8           # product = (x * y);
15 01    # vload 1            # S
15 08    # vload 8            # product
14 55 A7 # aldc 21927         # s[21927] = "eval (clac.c0: 123.7-123.23)"
B8 00 3A # invokestatic 58    # push__1(S, product, "eval (clac.c0: 123.7-123.23)")
57       # pop                # (ignore result)
A7 07 7B # goto +1915         # goto <565:endif>
# <564:else>
15 05    # vload 5            # tok
14 55 C4 # aldc 21956         # s[21956] = "**"
14 55 C7 # aldc 21959         # s[21959] = "eval (clac.c0: 127.14-127.37)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "**", "eval (clac.c0: 127.14-127.37)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "**", "eval (clac.c0: 127.14-127.37)") == true) goto <572:then>
A7 00 70 # goto +112          # goto <573:else>
# <572:then>
15 01    # vload 1            # S
14 55 E5 # aldc 21989         # s[21989] = "eval (clac.c0: 128.11-128.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 128.11-128.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 128.11-128.25)") == true) goto <575:then>
A7 00 0A # goto +10           # goto <576:else>
# <575:then>
14 56 03 # aldc 22019         # s[22019] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <577:endif>
# <576:else>
# <577:endif>
15 01    # vload 1            # S
14 56 20 # aldc 22048         # s[22048] = "eval (clac.c0: 131.15-131.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 131.15-131.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 131.15-131.21)");
15 06    # vload 6            # y
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (y < 0) goto <578:then>
A7 00 0A # goto +10           # goto <579:else>
# <578:then>
14 56 3E # aldc 22078         # s[22078] = "negative exponent"
BF       # athrow             # error "negative exponent"
A7 00 03 # goto +3            # goto <580:endif>
# <579:else>
# <580:endif>
15 01    # vload 1            # S
14 56 50 # aldc 22096         # s[22096] = "eval (clac.c0: 135.11-135.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 135.11-135.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 135.11-135.25)") == true) goto <581:then>
A7 00 0A # goto +10           # goto <582:else>
# <581:then>
14 56 6E # aldc 22126         # s[22126] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <583:endif>
# <582:else>
# <583:endif>
15 01    # vload 1            # S
14 56 8B # aldc 22155         # s[22155] = "eval (clac.c0: 138.15-138.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 138.15-138.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 138.15-138.21)");
15 07    # vload 7            # x
15 06    # vload 6            # y
14 56 A9 # aldc 22185         # s[22185] = "eval (clac.c0: 139.17-139.26)"
B8 00 6E # invokestatic 110   # POW(x, y, "eval (clac.c0: 139.17-139.26)")
36 08    # vstore 8           # pow = POW(x, y, "eval (clac.c0: 139.17-139.26)");
15 01    # vload 1            # S
15 08    # vload 8            # pow
14 56 C7 # aldc 22215         # s[22215] = "eval (clac.c0: 140.7-140.19)"
B8 00 3A # invokestatic 58    # push__1(S, pow, "eval (clac.c0: 140.7-140.19)")
57       # pop                # (ignore result)
A7 06 FB # goto +1787         # goto <574:endif>
# <573:else>
15 05    # vload 5            # tok
14 56 E4 # aldc 22244         # s[22244] = "/"
14 56 E6 # aldc 22246         # s[22246] = "eval (clac.c0: 144.14-144.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "/", "eval (clac.c0: 144.14-144.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "/", "eval (clac.c0: 144.14-144.36)") == true) goto <584:then>
A7 00 8A # goto +138          # goto <585:else>
# <584:then>
15 01    # vload 1            # S
14 57 04 # aldc 22276         # s[22276] = "eval (clac.c0: 145.11-145.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 145.11-145.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 145.11-145.25)") == true) goto <587:then>
A7 00 0A # goto +10           # goto <588:else>
# <587:then>
14 57 22 # aldc 22306         # s[22306] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <589:endif>
# <588:else>
# <589:endif>
15 01    # vload 1            # S
14 57 3F # aldc 22335         # s[22335] = "eval (clac.c0: 148.15-148.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 148.15-148.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 148.15-148.21)");
15 06    # vload 6            # y
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (y == 0) goto <590:then>
A7 00 0A # goto +10           # goto <591:else>
# <590:then>
14 57 5D # aldc 22365         # s[22365] = "Division by zero, not valid!"
BF       # athrow             # error "Division by zero, not valid!"
A7 00 03 # goto +3            # goto <592:endif>
# <591:else>
# <592:endif>
15 01    # vload 1            # S
14 57 7A # aldc 22394         # s[22394] = "eval (clac.c0: 152.11-152.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 152.11-152.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 152.11-152.25)") == true) goto <593:then>
A7 00 0A # goto +10           # goto <594:else>
# <593:then>
14 57 98 # aldc 22424         # s[22424] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <595:endif>
# <594:else>
# <595:endif>
15 01    # vload 1            # S
14 57 B5 # aldc 22453         # s[22453] = "eval (clac.c0: 155.15-155.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 155.15-155.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 155.15-155.21)");
15 07    # vload 7            # x
14 57 D3 # aldc 22483         # s[22483] = "eval (clac.c0: 156.16-156.25)"
B8 00 64 # invokestatic 100   # int_min__1("eval (clac.c0: 156.16-156.25)")
9F 00 06 # if_cmpeq +6        # if (x == int_min__1("eval (clac.c0: 156.16-156.25)")) goto <599:and>
A7 00 14 # goto +20           # goto <597:else>
# <599:and>
15 06    # vload 6            # y
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (y == -(1)) goto <596:then>
A7 00 0A # goto +10           # goto <597:else>
# <596:then>
14 57 F1 # aldc 22513         # s[22513] = "int min divided by -1, not valid!"
BF       # athrow             # error "int min divided by -1, not valid!"
A7 00 03 # goto +3            # goto <598:endif>
# <597:else>
# <598:endif>
15 07    # vload 7            # x
15 06    # vload 6            # y
6C       # idiv               # (x / y)
36 08    # vstore 8           # quotient = (x / y);
15 01    # vload 1            # S
15 08    # vload 8            # quotient
14 58 13 # aldc 22547         # s[22547] = "eval (clac.c0: 160.7-160.24)"
B8 00 3A # invokestatic 58    # push__1(S, quotient, "eval (clac.c0: 160.7-160.24)")
57       # pop                # (ignore result)
A7 06 61 # goto +1633         # goto <586:endif>
# <585:else>
15 05    # vload 5            # tok
14 58 30 # aldc 22576         # s[22576] = "%"
14 58 32 # aldc 22578         # s[22578] = "eval (clac.c0: 164.14-164.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "%", "eval (clac.c0: 164.14-164.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "%", "eval (clac.c0: 164.14-164.36)") == true) goto <600:then>
A7 00 8A # goto +138          # goto <601:else>
# <600:then>
15 01    # vload 1            # S
14 58 50 # aldc 22608         # s[22608] = "eval (clac.c0: 165.11-165.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 165.11-165.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 165.11-165.25)") == true) goto <603:then>
A7 00 0A # goto +10           # goto <604:else>
# <603:then>
14 58 6E # aldc 22638         # s[22638] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <605:endif>
# <604:else>
# <605:endif>
15 01    # vload 1            # S
14 58 8B # aldc 22667         # s[22667] = "eval (clac.c0: 168.15-168.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 168.15-168.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 168.15-168.21)");
15 06    # vload 6            # y
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (y == 0) goto <606:then>
A7 00 0A # goto +10           # goto <607:else>
# <606:then>
14 58 A9 # aldc 22697         # s[22697] = "Modulo by zero, not valid!"
BF       # athrow             # error "Modulo by zero, not valid!"
A7 00 03 # goto +3            # goto <608:endif>
# <607:else>
# <608:endif>
15 01    # vload 1            # S
14 58 C4 # aldc 22724         # s[22724] = "eval (clac.c0: 172.11-172.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 172.11-172.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 172.11-172.25)") == true) goto <609:then>
A7 00 0A # goto +10           # goto <610:else>
# <609:then>
14 58 E2 # aldc 22754         # s[22754] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <611:endif>
# <610:else>
# <611:endif>
15 01    # vload 1            # S
14 58 FF # aldc 22783         # s[22783] = "eval (clac.c0: 175.15-175.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 175.15-175.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 175.15-175.21)");
15 07    # vload 7            # x
14 59 1D # aldc 22813         # s[22813] = "eval (clac.c0: 176.16-176.25)"
B8 00 64 # invokestatic 100   # int_min__1("eval (clac.c0: 176.16-176.25)")
9F 00 06 # if_cmpeq +6        # if (x == int_min__1("eval (clac.c0: 176.16-176.25)")) goto <615:and>
A7 00 14 # goto +20           # goto <613:else>
# <615:and>
15 06    # vload 6            # y
10 FF    # bipush -1          # -1
9F 00 06 # if_cmpeq +6        # if (y == -(1)) goto <612:then>
A7 00 0A # goto +10           # goto <613:else>
# <612:then>
14 59 3B # aldc 22843         # s[22843] = "int min mod by -1, not valid!"
BF       # athrow             # error "int min mod by -1, not valid!"
A7 00 03 # goto +3            # goto <614:endif>
# <613:else>
# <614:endif>
15 07    # vload 7            # x
15 06    # vload 6            # y
70       # irem               # (x % y)
36 08    # vstore 8           # result = (x % y);
15 01    # vload 1            # S
15 08    # vload 8            # result
14 59 59 # aldc 22873         # s[22873] = "eval (clac.c0: 180.7-180.22)"
B8 00 3A # invokestatic 58    # push__1(S, result, "eval (clac.c0: 180.7-180.22)")
57       # pop                # (ignore result)
A7 05 C7 # goto +1479         # goto <602:endif>
# <601:else>
15 05    # vload 5            # tok
14 59 76 # aldc 22902         # s[22902] = "<"
14 59 78 # aldc 22904         # s[22904] = "eval (clac.c0: 184.14-184.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "<", "eval (clac.c0: 184.14-184.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "<", "eval (clac.c0: 184.14-184.36)") == true) goto <616:then>
A7 00 6C # goto +108          # goto <617:else>
# <616:then>
15 01    # vload 1            # S
14 59 96 # aldc 22934         # s[22934] = "eval (clac.c0: 185.11-185.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 185.11-185.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 185.11-185.25)") == true) goto <619:then>
A7 00 0A # goto +10           # goto <620:else>
# <619:then>
14 59 B4 # aldc 22964         # s[22964] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <621:endif>
# <620:else>
# <621:endif>
15 01    # vload 1            # S
14 59 D1 # aldc 22993         # s[22993] = "eval (clac.c0: 188.15-188.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 188.15-188.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 188.15-188.21)");
15 01    # vload 1            # S
14 59 EF # aldc 23023         # s[23023] = "eval (clac.c0: 189.11-189.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 189.11-189.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 189.11-189.25)") == true) goto <622:then>
A7 00 0A # goto +10           # goto <623:else>
# <622:then>
14 5A 0D # aldc 23053         # s[23053] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <624:endif>
# <623:else>
# <624:endif>
15 01    # vload 1            # S
14 5A 2A # aldc 23082         # s[23082] = "eval (clac.c0: 192.15-192.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 192.15-192.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 192.15-192.21)");
10 01    # bipush 1           # 1
36 08    # vstore 8           # out = 1;
15 07    # vload 7            # x
15 06    # vload 6            # y
A1 00 06 # if_icmplt +6       # if (x < y) goto <625:then>
A7 00 0A # goto +10           # goto <626:else>
# <625:then>
10 01    # bipush 1           # 1
36 08    # vstore 8           # out = 1;
A7 00 07 # goto +7            # goto <627:endif>
# <626:else>
10 00    # bipush 0           # 0
36 08    # vstore 8           # out = 0;
# <627:endif>
15 01    # vload 1            # S
15 08    # vload 8            # out
14 5A 48 # aldc 23112         # s[23112] = "eval (clac.c0: 200.7-200.19)"
B8 00 3A # invokestatic 58    # push__1(S, out, "eval (clac.c0: 200.7-200.19)")
57       # pop                # (ignore result)
A7 05 4B # goto +1355         # goto <618:endif>
# <617:else>
15 05    # vload 5            # tok
14 5A 65 # aldc 23141         # s[23141] = "drop"
14 5A 6A # aldc 23146         # s[23146] = "eval (clac.c0: 204.14-204.39)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "drop", "eval (clac.c0: 204.14-204.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "drop", "eval (clac.c0: 204.14-204.39)") == true) goto <628:then>
A7 00 26 # goto +38           # goto <629:else>
# <628:then>
15 01    # vload 1            # S
14 5A 88 # aldc 23176         # s[23176] = "eval (clac.c0: 205.11-205.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 205.11-205.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 205.11-205.25)") == true) goto <631:then>
A7 00 0A # goto +10           # goto <632:else>
# <631:then>
14 5A A6 # aldc 23206         # s[23206] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <633:endif>
# <632:else>
# <633:endif>
15 01    # vload 1            # S
14 5A C3 # aldc 23235         # s[23235] = "eval (clac.c0: 208.7-208.13)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 208.7-208.13)")
57       # pop                # (ignore result)
A7 05 15 # goto +1301         # goto <630:endif>
# <629:else>
15 05    # vload 5            # tok
14 5A E0 # aldc 23264         # s[23264] = "swap"
14 5A E5 # aldc 23269         # s[23269] = "eval (clac.c0: 212.14-212.39)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "swap", "eval (clac.c0: 212.14-212.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "swap", "eval (clac.c0: 212.14-212.39)") == true) goto <634:then>
A7 00 5E # goto +94           # goto <635:else>
# <634:then>
15 01    # vload 1            # S
14 5B 03 # aldc 23299         # s[23299] = "eval (clac.c0: 213.11-213.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 213.11-213.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 213.11-213.25)") == true) goto <637:then>
A7 00 0A # goto +10           # goto <638:else>
# <637:then>
14 5B 21 # aldc 23329         # s[23329] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <639:endif>
# <638:else>
# <639:endif>
15 01    # vload 1            # S
14 5B 3E # aldc 23358         # s[23358] = "eval (clac.c0: 216.15-216.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 216.15-216.21)")
36 06    # vstore 6           # y = pop__1(S, "eval (clac.c0: 216.15-216.21)");
15 01    # vload 1            # S
14 5B 5C # aldc 23388         # s[23388] = "eval (clac.c0: 217.11-217.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 217.11-217.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 217.11-217.25)") == true) goto <640:then>
A7 00 0A # goto +10           # goto <641:else>
# <640:then>
14 5B 7A # aldc 23418         # s[23418] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <642:endif>
# <641:else>
# <642:endif>
15 01    # vload 1            # S
14 5B 97 # aldc 23447         # s[23447] = "eval (clac.c0: 220.15-220.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 220.15-220.21)")
36 07    # vstore 7           # x = pop__1(S, "eval (clac.c0: 220.15-220.21)");
15 01    # vload 1            # S
15 06    # vload 6            # y
14 5B B5 # aldc 23477         # s[23477] = "eval (clac.c0: 221.7-221.17)"
B8 00 3A # invokestatic 58    # push__1(S, y, "eval (clac.c0: 221.7-221.17)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 07    # vload 7            # x
14 5B D2 # aldc 23506         # s[23506] = "eval (clac.c0: 222.7-222.17)"
B8 00 3A # invokestatic 58    # push__1(S, x, "eval (clac.c0: 222.7-222.17)")
57       # pop                # (ignore result)
A7 04 A7 # goto +1191         # goto <636:endif>
# <635:else>
15 05    # vload 5            # tok
14 5B EF # aldc 23535         # s[23535] = "rot"
14 5B F3 # aldc 23539         # s[23539] = "eval (clac.c0: 226.14-226.38)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "rot", "eval (clac.c0: 226.14-226.38)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "rot", "eval (clac.c0: 226.14-226.38)") == true) goto <643:then>
A7 00 8A # goto +138          # goto <644:else>
# <643:then>
15 01    # vload 1            # S
14 5C 11 # aldc 23569         # s[23569] = "eval (clac.c0: 227.11-227.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 227.11-227.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 227.11-227.25)") == true) goto <646:then>
A7 00 0A # goto +10           # goto <647:else>
# <646:then>
14 5C 2F # aldc 23599         # s[23599] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <648:endif>
# <647:else>
# <648:endif>
15 01    # vload 1            # S
14 5C 4C # aldc 23628         # s[23628] = "eval (clac.c0: 230.15-230.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 230.15-230.21)")
36 06    # vstore 6           # z = pop__1(S, "eval (clac.c0: 230.15-230.21)");
15 01    # vload 1            # S
14 5C 6A # aldc 23658         # s[23658] = "eval (clac.c0: 231.11-231.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 231.11-231.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 231.11-231.25)") == true) goto <649:then>
A7 00 0A # goto +10           # goto <650:else>
# <649:then>
14 5C 88 # aldc 23688         # s[23688] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <651:endif>
# <650:else>
# <651:endif>
15 01    # vload 1            # S
14 5C A5 # aldc 23717         # s[23717] = "eval (clac.c0: 234.15-234.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 234.15-234.21)")
36 07    # vstore 7           # y = pop__1(S, "eval (clac.c0: 234.15-234.21)");
15 01    # vload 1            # S
14 5C C3 # aldc 23747         # s[23747] = "eval (clac.c0: 235.11-235.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 235.11-235.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 235.11-235.25)") == true) goto <652:then>
A7 00 0A # goto +10           # goto <653:else>
# <652:then>
14 5C E1 # aldc 23777         # s[23777] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <654:endif>
# <653:else>
# <654:endif>
15 01    # vload 1            # S
14 5C FE # aldc 23806         # s[23806] = "eval (clac.c0: 238.15-238.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 238.15-238.21)")
36 08    # vstore 8           # x = pop__1(S, "eval (clac.c0: 238.15-238.21)");
15 01    # vload 1            # S
15 07    # vload 7            # y
14 5D 1C # aldc 23836         # s[23836] = "eval (clac.c0: 239.7-239.17)"
B8 00 3A # invokestatic 58    # push__1(S, y, "eval (clac.c0: 239.7-239.17)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 06    # vload 6            # z
14 5D 39 # aldc 23865         # s[23865] = "eval (clac.c0: 240.7-240.17)"
B8 00 3A # invokestatic 58    # push__1(S, z, "eval (clac.c0: 240.7-240.17)")
57       # pop                # (ignore result)
15 01    # vload 1            # S
15 08    # vload 8            # x
14 5D 56 # aldc 23894         # s[23894] = "eval (clac.c0: 241.7-241.17)"
B8 00 3A # invokestatic 58    # push__1(S, x, "eval (clac.c0: 241.7-241.17)")
57       # pop                # (ignore result)
A7 04 0D # goto +1037         # goto <645:endif>
# <644:else>
15 05    # vload 5            # tok
14 5D 73 # aldc 23923         # s[23923] = "if"
14 5D 76 # aldc 23926         # s[23926] = "eval (clac.c0: 245.12-245.35)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "if", "eval (clac.c0: 245.12-245.35)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "if", "eval (clac.c0: 245.12-245.35)") == true) goto <655:then>
A7 00 75 # goto +117          # goto <656:else>
# <655:then>
15 01    # vload 1            # S
14 5D 94 # aldc 23956         # s[23956] = "eval (clac.c0: 246.11-246.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 246.11-246.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 246.11-246.25)") == true) goto <658:then>
A7 00 0A # goto +10           # goto <659:else>
# <658:then>
14 5D B2 # aldc 23986         # s[23986] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <660:endif>
# <659:else>
# <660:endif>
15 01    # vload 1            # S
14 5D CF # aldc 24015         # s[24015] = "eval (clac.c0: 249.15-249.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 249.15-249.21)")
36 06    # vstore 6           # x = pop__1(S, "eval (clac.c0: 249.15-249.21)");
15 06    # vload 6            # x
10 00    # bipush 0           # 0
9F 00 06 # if_cmpeq +6        # if (x == 0) goto <661:then>
A7 00 47 # goto +71           # goto <662:else>
# <661:then>
10 00    # bipush 0           # 0
36 07    # vstore 7           # i = 0;
# <664:loop>
A7 00 03 # goto +3            # goto <665:body>
# <665:body>
15 07    # vload 7            # i
10 02    # bipush 2           # 2
A4 00 06 # if_icmple +6       # if (i <= 2) goto <667:then>
A7 00 2D # goto +45           # goto <668:else>
# <667:then>
15 00    # vload 0            # Q
14 5D ED # aldc 24045         # s[24045] = "eval (clac.c0: 252.16-252.30)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 252.16-252.30)")
10 01    # bipush 1           # true
9F 00 12 # if_cmpeq +18       # if (queue_empty__1(Q, "eval (clac.c0: 252.16-252.30)") == true) goto <671:else>
A7 00 03 # goto +3            # goto <670:then>
# <670:then>
15 00    # vload 0            # Q
14 5E 0B # aldc 24075         # s[24075] = "eval (clac.c0: 253.13-253.19)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 253.13-253.19)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <672:endif>
# <671:else>
14 5E 29 # aldc 24105         # s[24105] = "not enough elements on queue"
BF       # athrow             # error "not enough elements on queue"
# <672:endif>
15 07    # vload 7            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # i += 1;
A7 00 06 # goto +6            # goto <669:endif>
# <668:else>
A7 00 06 # goto +6            # break
# <669:endif>
A7 FF C6 # goto -58           # goto <664:loop>
# <666:exit>
A7 00 03 # goto +3            # goto <663:endif>
# <662:else>
# <663:endif>
A7 03 88 # goto +904          # goto <657:endif>
# <656:else>
15 05    # vload 5            # tok
14 5E 46 # aldc 24134         # s[24134] = "skip"
14 5E 4B # aldc 24139         # s[24139] = "eval (clac.c0: 263.14-263.39)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "skip", "eval (clac.c0: 263.14-263.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "skip", "eval (clac.c0: 263.14-263.39)") == true) goto <673:then>
A7 00 79 # goto +121          # goto <674:else>
# <673:then>
15 01    # vload 1            # S
14 5E 69 # aldc 24169         # s[24169] = "eval (clac.c0: 264.11-264.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 264.11-264.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 264.11-264.25)") == true) goto <676:then>
A7 00 0A # goto +10           # goto <677:else>
# <676:then>
14 5E 87 # aldc 24199         # s[24199] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <678:endif>
# <677:else>
# <678:endif>
15 01    # vload 1            # S
14 5E A4 # aldc 24228         # s[24228] = "eval (clac.c0: 267.15-267.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 267.15-267.21)")
36 06    # vstore 6           # n = pop__1(S, "eval (clac.c0: 267.15-267.21)");
15 06    # vload 6            # n
10 00    # bipush 0           # 0
A1 00 06 # if_icmplt +6       # if (n < 0) goto <679:then>
A7 00 0A # goto +10           # goto <680:else>
# <679:then>
14 5E C2 # aldc 24258         # s[24258] = "n should be greater than or equal to zero!"
BF       # athrow             # error "n should be greater than or equal to zero!"
A7 00 03 # goto +3            # goto <681:endif>
# <680:else>
# <681:endif>
10 00    # bipush 0           # 0
36 07    # vstore 7           # i = 0;
# <682:loop>
A7 00 03 # goto +3            # goto <683:body>
# <683:body>
15 07    # vload 7            # i
15 06    # vload 6            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <685:then>
A7 00 2D # goto +45           # goto <686:else>
# <685:then>
15 00    # vload 0            # Q
14 5E ED # aldc 24301         # s[24301] = "eval (clac.c0: 272.13-272.27)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 272.13-272.27)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 272.13-272.27)") == true) goto <688:then>
A7 00 0A # goto +10           # goto <689:else>
# <688:then>
14 5F 0B # aldc 24331         # s[24331] = "unexpected end of input"
BF       # athrow             # error "unexpected end of input"
A7 00 03 # goto +3            # goto <690:endif>
# <689:else>
# <690:endif>
15 00    # vload 0            # Q
14 5F 23 # aldc 24355         # s[24355] = "eval (clac.c0: 275.9-275.15)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 275.9-275.15)")
57       # pop                # (ignore result)
15 07    # vload 7            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 07    # vstore 7           # i += 1;
A7 00 06 # goto +6            # goto <687:endif>
# <686:else>
A7 00 06 # goto +6            # break
# <687:endif>
A7 FF C6 # goto -58           # goto <682:loop>
# <684:exit>
A7 02 FF # goto +767          # goto <675:endif>
# <674:else>
15 05    # vload 5            # tok
14 5F 40 # aldc 24384         # s[24384] = "pick"
14 5F 45 # aldc 24389         # s[24389] = "eval (clac.c0: 280.14-280.39)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, "pick", "eval (clac.c0: 280.14-280.39)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, "pick", "eval (clac.c0: 280.14-280.39)") == true) goto <691:then>
A7 00 D6 # goto +214          # goto <692:else>
# <691:then>
15 01    # vload 1            # S
14 5F 63 # aldc 24419         # s[24419] = "eval (clac.c0: 281.11-281.25)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 281.11-281.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "eval (clac.c0: 281.11-281.25)") == true) goto <694:then>
A7 00 0A # goto +10           # goto <695:else>
# <694:then>
14 5F 81 # aldc 24449         # s[24449] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
A7 00 03 # goto +3            # goto <696:endif>
# <695:else>
# <696:endif>
15 01    # vload 1            # S
14 5F 9E # aldc 24478         # s[24478] = "eval (clac.c0: 284.15-284.21)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 284.15-284.21)")
36 06    # vstore 6           # n = pop__1(S, "eval (clac.c0: 284.15-284.21)");
15 06    # vload 6            # n
10 00    # bipush 0           # 0
A4 00 06 # if_icmple +6       # if (n <= 0) goto <697:then>
A7 00 0A # goto +10           # goto <698:else>
# <697:then>
14 5F BC # aldc 24508         # s[24508] = "pick must be positive"
BF       # athrow             # error "pick must be positive"
A7 00 03 # goto +3            # goto <699:endif>
# <698:else>
# <699:endif>
14 5F D2 # aldc 24530         # s[24530] = "eval (clac.c0: 288.21-288.32)"
B8 00 39 # invokestatic 57    # stack_new__1("eval (clac.c0: 288.21-288.32)")
36 07    # vstore 7           # new = stack_new__1("eval (clac.c0: 288.21-288.32)");
10 00    # bipush 0           # 0
36 08    # vstore 8           # i = 0;
# <700:loop>
A7 00 03 # goto +3            # goto <701:body>
# <701:body>
15 08    # vload 8            # i
15 06    # vload 6            # n
A1 00 06 # if_icmplt +6       # if (i < n) goto <703:then>
A7 00 35 # goto +53           # goto <704:else>
# <703:then>
15 01    # vload 1            # S
14 5F F0 # aldc 24560         # s[24560] = "eval (clac.c0: 290.13-290.27)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "eval (clac.c0: 290.13-290.27)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (stack_empty__1(S, "eval (clac.c0: 290.13-290.27)") == true) goto <707:else>
A7 00 03 # goto +3            # goto <706:then>
# <706:then>
15 07    # vload 7            # new
15 01    # vload 1            # S
14 60 0E # aldc 24590         # s[24590] = "eval (clac.c0: 291.21-291.27)"
B8 00 3B # invokestatic 59    # pop__1(S, "eval (clac.c0: 291.21-291.27)")
14 60 2C # aldc 24620         # s[24620] = "eval (clac.c0: 291.11-291.28)"
B8 00 3A # invokestatic 58    # push__1(new, pop__1(S, "eval (clac.c0: 291.21-291.27)"), "eval (clac.c0: 291.11-291.28)")
57       # pop                # (ignore result)
A7 00 07 # goto +7            # goto <708:endif>
# <707:else>
14 60 4A # aldc 24650         # s[24650] = "not enough elements on stack"
BF       # athrow             # error "not enough elements on stack"
# <708:endif>
15 08    # vload 8            # i
10 01    # bipush 1           # 1
60       # iadd               # 
36 08    # vstore 8           # i += 1;
A7 00 06 # goto +6            # goto <705:endif>
# <704:else>
A7 00 06 # goto +6            # break
# <705:endif>
A7 FF BE # goto -66           # goto <700:loop>
# <702:exit>
15 07    # vload 7            # new
14 60 67 # aldc 24679         # s[24679] = "eval (clac.c0: 297.18-297.26)"
B8 00 3B # invokestatic 59    # pop__1(new, "eval (clac.c0: 297.18-297.26)")
36 08    # vstore 8           # keep = pop__1(new, "eval (clac.c0: 297.18-297.26)");
15 01    # vload 1            # S
15 08    # vload 8            # keep
14 60 85 # aldc 24709         # s[24709] = "eval (clac.c0: 298.7-298.20)"
B8 00 3A # invokestatic 58    # push__1(S, keep, "eval (clac.c0: 298.7-298.20)")
57       # pop                # (ignore result)
# <709:loop>
A7 00 03 # goto +3            # goto <710:body>
# <710:body>
15 07    # vload 7            # new
14 60 A2 # aldc 24738         # s[24738] = "eval (clac.c0: 299.14-299.30)"
B8 00 38 # invokestatic 56    # stack_empty__1(new, "eval (clac.c0: 299.14-299.30)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (stack_empty__1(new, "eval (clac.c0: 299.14-299.30)") == true) goto <713:else>
A7 00 03 # goto +3            # goto <712:then>
# <712:then>
15 01    # vload 1            # S
15 07    # vload 7            # new
14 60 C0 # aldc 24768         # s[24768] = "eval (clac.c0: 300.17-300.25)"
B8 00 3B # invokestatic 59    # pop__1(new, "eval (clac.c0: 300.17-300.25)")
14 60 DE # aldc 24798         # s[24798] = "eval (clac.c0: 300.9-300.26)"
B8 00 3A # invokestatic 58    # push__1(S, pop__1(new, "eval (clac.c0: 300.17-300.25)"), "eval (clac.c0: 300.9-300.26)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <714:endif>
# <713:else>
A7 00 06 # goto +6            # break
# <714:endif>
A7 FF D6 # goto -42           # goto <709:loop>
# <711:exit>
15 01    # vload 1            # S
15 08    # vload 8            # keep
14 60 FB # aldc 24827         # s[24827] = "eval (clac.c0: 302.7-302.20)"
B8 00 3A # invokestatic 58    # push__1(S, keep, "eval (clac.c0: 302.7-302.20)")
57       # pop                # (ignore result)
A7 02 19 # goto +537          # goto <693:endif>
# <692:else>
15 05    # vload 5            # tok
14 61 18 # aldc 24856         # s[24856] = ":"
14 61 1A # aldc 24858         # s[24858] = "eval (clac.c0: 306.14-306.36)"
B8 00 05 # invokestatic 5     # string_equal__1(tok, ":", "eval (clac.c0: 306.14-306.36)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (string_equal__1(tok, ":", "eval (clac.c0: 306.14-306.36)") == true) goto <715:then>
A7 00 AB # goto +171          # goto <716:else>
# <715:then>
15 00    # vload 0            # Q
14 61 38 # aldc 24888         # s[24888] = "eval (clac.c0: 307.11-307.25)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 307.11-307.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 307.11-307.25)") == true) goto <718:then>
A7 00 0A # goto +10           # goto <719:else>
# <718:then>
14 61 56 # aldc 24918         # s[24918] = "didn\'t find ;"
BF       # athrow             # error "didn\'t find ;"
A7 00 03 # goto +3            # goto <720:endif>
# <719:else>
# <720:endif>
15 00    # vload 0            # Q
14 61 64 # aldc 24932         # s[24932] = "eval (clac.c0: 310.21-310.27)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 310.21-310.27)")
36 06    # vstore 6           # name = deq__1(Q, "eval (clac.c0: 310.21-310.27)");
15 00    # vload 0            # Q
14 61 82 # aldc 24962         # s[24962] = "eval (clac.c0: 311.11-311.25)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 311.11-311.25)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 311.11-311.25)") == true) goto <721:then>
A7 00 0A # goto +10           # goto <722:else>
# <721:then>
14 61 A0 # aldc 24992         # s[24992] = "didn\'t find ;"
BF       # athrow             # error "didn\'t find ;"
A7 00 03 # goto +3            # goto <723:endif>
# <722:else>
# <723:endif>
14 61 AE # aldc 25006         # s[25006] = "eval (clac.c0: 314.21-314.32)"
B8 00 23 # invokestatic 35    # queue_new__1("eval (clac.c0: 314.21-314.32)")
36 07    # vstore 7           # def = queue_new__1("eval (clac.c0: 314.21-314.32)");
15 00    # vload 0            # Q
14 61 CC # aldc 25036         # s[25036] = "eval (clac.c0: 315.24-315.30)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 315.24-315.30)")
36 08    # vstore 8           # charact = deq__1(Q, "eval (clac.c0: 315.24-315.30)");
# <724:loop>
A7 00 03 # goto +3            # goto <725:body>
# <725:body>
15 08    # vload 8            # charact
14 61 EA # aldc 25066         # s[25066] = ";"
14 61 EC # aldc 25068         # s[25068] = "eval (clac.c0: 316.14-316.42)"
B8 00 06 # invokestatic 6     # string_compare__1(charact, ";", "eval (clac.c0: 316.14-316.42)")
10 00    # bipush 0           # 0
A0 00 06 # if_cmpne +6        # if (string_compare__1(charact, ";", "eval (clac.c0: 316.14-316.42)") != 0) goto <727:then>
A7 00 32 # goto +50           # goto <728:else>
# <727:then>
15 07    # vload 7            # def
15 08    # vload 8            # charact
14 62 0A # aldc 25098         # s[25098] = "eval (clac.c0: 317.9-317.26)"
B8 00 24 # invokestatic 36    # enq__1(def, charact, "eval (clac.c0: 317.9-317.26)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
14 62 27 # aldc 25127         # s[25127] = "eval (clac.c0: 318.13-318.27)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 318.13-318.27)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "eval (clac.c0: 318.13-318.27)") == true) goto <730:then>
A7 00 0A # goto +10           # goto <731:else>
# <730:then>
14 62 45 # aldc 25157         # s[25157] = "didn\'t find ;"
BF       # athrow             # error "didn\'t find ;"
A7 00 03 # goto +3            # goto <732:endif>
# <731:else>
# <732:endif>
15 00    # vload 0            # Q
14 62 53 # aldc 25171         # s[25171] = "eval (clac.c0: 321.19-321.25)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 321.19-321.25)")
36 08    # vstore 8           # charact = deq__1(Q, "eval (clac.c0: 321.19-321.25)");
A7 00 06 # goto +6            # goto <729:endif>
# <728:else>
A7 00 06 # goto +6            # break
# <729:endif>
A7 FF B8 # goto -72           # goto <724:loop>
# <726:exit>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 06    # vload 6            # name
15 07    # vload 7            # def
14 62 71 # aldc 25201         # s[25201] = "eval (clac.c0: 323.7-323.39)"
B8 00 30 # invokestatic 48    # dict_insert__1(ST->dict, name, def, "eval (clac.c0: 323.7-323.39)")
57       # pop                # (ignore result)
A7 01 5E # goto +350          # goto <717:endif>
# <716:else>
15 05    # vload 5            # tok
10 0A    # bipush 10          # 10
14 62 8E # aldc 25230         # s[25230] = "eval (clac.c0: 327.14-327.32)"
B8 00 56 # invokestatic 86    # parse_int__1(tok, 10, "eval (clac.c0: 327.14-327.32)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (parse_int__1(tok, 10, "eval (clac.c0: 327.14-327.32)") != NULL) goto <733:then>
A7 00 1E # goto +30           # goto <734:else>
# <733:then>
15 05    # vload 5            # tok
10 0A    # bipush 10          # 10
14 62 AC # aldc 25260         # s[25260] = "eval (clac.c0: 328.16-328.34)"
B8 00 56 # invokestatic 86    # parse_int__1(tok, 10, "eval (clac.c0: 328.16-328.34)")
36 06    # vstore 6           # p = parse_int__1(tok, 10, "eval (clac.c0: 328.16-328.34)");
15 01    # vload 1            # S
15 06    # vload 6            # p
2E       # imload             # *(p)
14 62 CA # aldc 25290         # s[25290] = "eval (clac.c0: 329.7-329.18)"
B8 00 3A # invokestatic 58    # push__1(S, *(p), "eval (clac.c0: 329.7-329.18)")
57       # pop                # (ignore result)
A7 01 32 # goto +306          # goto <735:endif>
# <734:else>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 05    # vload 5            # tok
14 62 E7 # aldc 25319         # s[25319] = "eval (clac.c0: 344.14-344.40)"
B8 00 2F # invokestatic 47    # dict_lookup__1(ST->dict, tok, "eval (clac.c0: 344.14-344.40)")
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (dict_lookup__1(ST->dict, tok, "eval (clac.c0: 344.14-344.40)") != NULL) goto <736:then>
A7 00 E3 # goto +227          # goto <737:else>
# <736:then>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 05    # vload 5            # tok
14 63 05 # aldc 25349         # s[25349] = "eval (clac.c0: 345.20-345.46)"
B8 00 2F # invokestatic 47    # dict_lookup__1(ST->dict, tok, "eval (clac.c0: 345.20-345.46)")
36 06    # vstore 6           # QT = dict_lookup__1(ST->dict, tok, "eval (clac.c0: 345.20-345.46)");
15 06    # vload 6            # QT
14 63 23 # aldc 25379         # s[25379] = "eval (clac.c0: 346.22-346.46)"
B8 00 27 # invokestatic 39    # queue_read_only_copy__1(QT, "eval (clac.c0: 346.22-346.46)")
36 07    # vstore 7           # back = queue_read_only_copy__1(QT, "eval (clac.c0: 346.22-346.46)");
14 63 41 # aldc 25409         # s[25409] = "eval (clac.c0: 348.20-348.31)"
B8 00 23 # invokestatic 35    # queue_new__1("eval (clac.c0: 348.20-348.31)")
36 08    # vstore 8           # RT = queue_new__1("eval (clac.c0: 348.20-348.31)");
# <739:loop>
A7 00 03 # goto +3            # goto <740:body>
# <740:body>
15 00    # vload 0            # Q
14 63 5F # aldc 25439         # s[25439] = "eval (clac.c0: 349.15-349.29)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 349.15-349.29)")
10 01    # bipush 1           # true
9F 00 1E # if_cmpeq +30       # if (queue_empty__1(Q, "eval (clac.c0: 349.15-349.29)") == true) goto <743:else>
A7 00 03 # goto +3            # goto <742:then>
# <742:then>
15 00    # vload 0            # Q
14 63 7D # aldc 25469         # s[25469] = "eval (clac.c0: 350.23-350.29)"
B8 00 25 # invokestatic 37    # deq__1(Q, "eval (clac.c0: 350.23-350.29)")
36 09    # vstore 9           # next = deq__1(Q, "eval (clac.c0: 350.23-350.29)");
15 08    # vload 8            # RT
15 09    # vload 9            # next
14 63 9B # aldc 25499         # s[25499] = "eval (clac.c0: 351.9-351.22)"
B8 00 24 # invokestatic 36    # enq__1(RT, next, "eval (clac.c0: 351.9-351.22)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <744:endif>
# <743:else>
A7 00 06 # goto +6            # break
# <744:endif>
A7 FF D2 # goto -46           # goto <739:loop>
# <741:exit>
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->qstack
2F       # amload             # ST->qstack
15 08    # vload 8            # RT
14 63 B8 # aldc 25528         # s[25528] = "eval (clac.c0: 353.7-353.28)"
B8 00 46 # invokestatic 70    # qpush__1(ST->qstack, RT, "eval (clac.c0: 353.7-353.28)")
57       # pop                # (ignore result)
# <745:loop>
A7 00 03 # goto +3            # goto <746:body>
# <746:body>
15 07    # vload 7            # back
14 63 D5 # aldc 25557         # s[25557] = "eval (clac.c0: 355.15-355.32)"
B8 00 21 # invokestatic 33    # queue_empty__1(back, "eval (clac.c0: 355.15-355.32)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (queue_empty__1(back, "eval (clac.c0: 355.15-355.32)") == true) goto <749:else>
A7 00 03 # goto +3            # goto <748:then>
# <748:then>
15 00    # vload 0            # Q
15 07    # vload 7            # back
14 63 F3 # aldc 25587         # s[25587] = "eval (clac.c0: 356.16-356.25)"
B8 00 25 # invokestatic 37    # deq__1(back, "eval (clac.c0: 356.16-356.25)")
14 64 11 # aldc 25617         # s[25617] = "eval (clac.c0: 356.9-356.26)"
B8 00 24 # invokestatic 36    # enq__1(Q, deq__1(back, "eval (clac.c0: 356.16-356.25)"), "eval (clac.c0: 356.9-356.26)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <750:endif>
# <749:else>
A7 00 06 # goto +6            # break
# <750:endif>
A7 FF D6 # goto -42           # goto <745:loop>
# <747:exit>
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->qstack
2F       # amload             # ST->qstack
14 64 2E # aldc 25646         # s[25646] = "eval (clac.c0: 359.12-359.36)"
B8 00 44 # invokestatic 68    # qstack_empty__1(ST->qstack, "eval (clac.c0: 359.12-359.36)")
10 01    # bipush 1           # true
9F 00 43 # if_cmpeq +67       # if (qstack_empty__1(ST->qstack, "eval (clac.c0: 359.12-359.36)") == true) goto <752:else>
A7 00 03 # goto +3            # goto <751:then>
# <751:then>
15 02    # vload 2            # ST
62 08    # aaddf 8            # &ST->qstack
2F       # amload             # ST->qstack
14 64 4C # aldc 25676         # s[25676] = "eval (clac.c0: 360.24-360.40)"
B8 00 47 # invokestatic 71    # qpop__1(ST->qstack, "eval (clac.c0: 360.24-360.40)")
36 09    # vstore 9           # temp = qpop__1(ST->qstack, "eval (clac.c0: 360.24-360.40)");
# <754:loop>
A7 00 03 # goto +3            # goto <755:body>
# <755:body>
15 09    # vload 9            # temp
14 64 6A # aldc 25706         # s[25706] = "eval (clac.c0: 361.16-361.33)"
B8 00 21 # invokestatic 33    # queue_empty__1(temp, "eval (clac.c0: 361.16-361.33)")
10 01    # bipush 1           # true
9F 00 1A # if_cmpeq +26       # if (queue_empty__1(temp, "eval (clac.c0: 361.16-361.33)") == true) goto <758:else>
A7 00 03 # goto +3            # goto <757:then>
# <757:then>
15 00    # vload 0            # Q
15 09    # vload 9            # temp
14 64 88 # aldc 25736         # s[25736] = "eval (clac.c0: 362.18-362.27)"
B8 00 25 # invokestatic 37    # deq__1(temp, "eval (clac.c0: 362.18-362.27)")
14 64 A6 # aldc 25766         # s[25766] = "eval (clac.c0: 362.11-362.28)"
B8 00 24 # invokestatic 36    # enq__1(Q, deq__1(temp, "eval (clac.c0: 362.18-362.27)"), "eval (clac.c0: 362.11-362.28)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <759:endif>
# <758:else>
A7 00 06 # goto +6            # break
# <759:endif>
A7 FF D6 # goto -42           # goto <754:loop>
# <756:exit>
A7 00 03 # goto +3            # goto <753:endif>
# <752:else>
# <753:endif>
A7 00 3E # goto +62           # goto <738:endif>
# <737:else>
15 02    # vload 2            # ST
62 00    # aaddf 0            # &ST->dict
2F       # amload             # ST->dict
15 05    # vload 5            # tok
14 64 C4 # aldc 25796         # s[25796] = "eval (clac.c0: 368.14-368.40)"
B8 00 2F # invokestatic 47    # dict_lookup__1(ST->dict, tok, "eval (clac.c0: 368.14-368.40)")
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (dict_lookup__1(ST->dict, tok, "eval (clac.c0: 368.14-368.40)") == NULL) goto <760:then>
A7 00 0A # goto +10           # goto <761:else>
# <760:then>
14 64 E2 # aldc 25826         # s[25826] = "operation undefined"
BF       # athrow             # error "operation undefined"
A7 00 23 # goto +35           # goto <762:endif>
# <761:else>
15 05    # vload 5            # tok
10 0A    # bipush 10          # 10
14 64 F6 # aldc 25846         # s[25846] = "eval (clac.c0: 372.14-372.32)"
B8 00 56 # invokestatic 86    # parse_int__1(tok, 10, "eval (clac.c0: 372.14-372.32)")
01       # aconst_null        # NULL
9F 00 06 # if_cmpeq +6        # if (parse_int__1(tok, 10, "eval (clac.c0: 372.14-372.32)") == NULL) goto <763:then>
A7 00 12 # goto +18           # goto <764:else>
# <763:then>
14 65 14 # aldc 25876         # s[25876] = "undefined token "
15 05    # vload 5            # tok
14 65 25 # aldc 25893         # s[25893] = "eval (clac.c0: 373.13-373.49)"
B8 00 03 # invokestatic 3     # string_join__1("undefined token ", tok, "eval (clac.c0: 373.13-373.49)")
BF       # athrow             # error string_join__1("undefined token ", tok, "eval (clac.c0: 373.13-373.49)")
A7 00 03 # goto +3            # goto <765:endif>
# <764:else>
# <765:endif>
# <762:endif>
# <738:endif>
# <735:endif>
# <717:endif>
# <693:endif>
# <675:endif>
# <657:endif>
# <645:endif>
# <636:endif>
# <630:endif>
# <618:endif>
# <602:endif>
# <586:endif>
# <574:endif>
# <565:endif>
# <556:endif>
# <547:endif>
# <541:endif>
# <535:endif>
A7 00 06 # goto +6            # goto <529:endif>
# <528:else>
A7 00 06 # goto +6            # break
# <529:endif>
A7 F6 83 # goto -2429         # goto <524:loop>
# <526:exit>
10 01    # bipush 1           # true
36 04    # vstore 4           # _result = true;
15 04    # vload 4            # _result
10 00    # bipush 0           # false
9F 00 06 # if_cmpeq +6        # if (_result == false) goto <766:cond_true>
A7 00 08 # goto +8            # goto <767:cond_false>
# <766:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <768:cond_end>
# <767:cond_false>
15 00    # vload 0            # Q
14 65 43 # aldc 25923         # s[25923] = "eval (clac.c0: 59.32-59.46)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "eval (clac.c0: 59.32-59.46)")
# <768:cond_end>
14 65 5F # aldc 25951         # s[25951] = "clac.c0: 59.4-59.47: @ensures annotation failed"
CF       # assert             # assert ((_result == false) || queue_empty__1(Q, "eval (clac.c0: 59.32-59.46)")) [failure message on stack]
15 04    # vload 4            # _result
B0       # return             # 


#<print_top>
02                # number of arguments = 2
04                # number of local variables = 4
01 04             # code length = 260 bytes
15 00    # vload 0            # S
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (S != NULL) goto <769:cond_true>
A7 00 08 # goto +8            # goto <770:cond_false>
# <769:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <771:cond_end>
# <770:cond_false>
10 00    # bipush 0           # false
# <771:cond_end>
14 65 8F # aldc 25999         # s[25999] = "clac-main.c0: 17.4-17.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 65 C6 # aldc 26054         # s[26054] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("clac-main.c0: 17.4-17.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (S != NULL) [failure message on stack]
15 00    # vload 0            # S
14 65 D8 # aldc 26072         # s[26072] = "print_top (clac-main.c0: 19.7-19.21)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "print_top (clac-main.c0: 19.7-19.21)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "print_top (clac-main.c0: 19.7-19.21)") == true) goto <772:then>
A7 00 13 # goto +19           # goto <773:else>
# <772:then>
14 65 FD # aldc 26109         # s[26109] = "Stack is now empty\n"
14 66 11 # aldc 26129         # s[26129] = "print_top (clac-main.c0: 20.5-20.35)"
B8 00 10 # invokestatic 16    # print__1("Stack is now empty\n", "print_top (clac-main.c0: 20.5-20.35)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <774:endif>
# <773:else>
# <774:endif>
14 66 36 # aldc 26166         # s[26166] = "Stack is now ["
14 66 45 # aldc 26181         # s[26181] = "print_top (clac-main.c0: 24.3-24.27)"
B8 00 10 # invokestatic 16    # print__1("Stack is now [", "print_top (clac-main.c0: 24.3-24.27)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
14 66 6A # aldc 26218         # s[26218] = "print_top (clac-main.c0: 25.13-25.19)"
B8 00 3B # invokestatic 59    # pop__1(S, "print_top (clac-main.c0: 25.13-25.19)")
36 02    # vstore 2           # top = pop__1(S, "print_top (clac-main.c0: 25.13-25.19)");
15 00    # vload 0            # S
14 66 90 # aldc 26256         # s[26256] = "print_top (clac-main.c0: 26.7-26.21)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "print_top (clac-main.c0: 26.7-26.21)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (stack_empty__1(S, "print_top (clac-main.c0: 26.7-26.21)") == true) goto <775:then>
A7 00 31 # goto +49           # goto <776:else>
# <775:then>
14 66 B5 # aldc 26293         # s[26293] = ""
14 66 B6 # aldc 26294         # s[26294] = "print_top (clac-main.c0: 27.5-27.23)"
B8 00 10 # invokestatic 16    # print__1("", "print_top (clac-main.c0: 27.5-27.23)")
57       # pop                # (ignore result)
15 02    # vload 2            # top
14 66 DB # aldc 26331         # s[26331] = "print_top (clac-main.c0: 27.5-27.23)"
B8 00 12 # invokestatic 18    # printint__1(top, "print_top (clac-main.c0: 27.5-27.23)")
57       # pop                # (ignore result)
14 67 00 # aldc 26368         # s[26368] = "]"
14 67 02 # aldc 26370         # s[26370] = "print_top (clac-main.c0: 27.5-27.23)"
B8 00 10 # invokestatic 16    # print__1("]", "print_top (clac-main.c0: 27.5-27.23)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
15 02    # vload 2            # top
14 67 27 # aldc 26407         # s[26407] = "print_top (clac-main.c0: 28.5-28.17)"
B8 00 3A # invokestatic 58    # push__1(S, top, "print_top (clac-main.c0: 28.5-28.17)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
A7 00 03 # goto +3            # goto <777:endif>
# <776:else>
# <777:endif>
15 00    # vload 0            # S
14 67 4C # aldc 26444         # s[26444] = "print_top (clac-main.c0: 32.14-32.20)"
B8 00 3B # invokestatic 59    # pop__1(S, "print_top (clac-main.c0: 32.14-32.20)")
36 03    # vstore 3           # next = pop__1(S, "print_top (clac-main.c0: 32.14-32.20)");
15 00    # vload 0            # S
14 67 72 # aldc 26482         # s[26482] = "print_top (clac-main.c0: 33.8-33.22)"
B8 00 38 # invokestatic 56    # stack_empty__1(S, "print_top (clac-main.c0: 33.8-33.22)")
10 01    # bipush 1           # true
9F 00 13 # if_cmpeq +19       # if (stack_empty__1(S, "print_top (clac-main.c0: 33.8-33.22)") == true) goto <779:else>
A7 00 03 # goto +3            # goto <778:then>
# <778:then>
14 67 97 # aldc 26519         # s[26519] = "..,"
14 67 9B # aldc 26523         # s[26523] = "print_top (clac-main.c0: 33.24-33.37)"
B8 00 10 # invokestatic 16    # print__1("..,", "print_top (clac-main.c0: 33.24-33.37)")
57       # pop                # (ignore result)
A7 00 03 # goto +3            # goto <780:endif>
# <779:else>
# <780:endif>
14 67 C1 # aldc 26561         # s[26561] = ""
14 67 C2 # aldc 26562         # s[26562] = "print_top (clac-main.c0: 34.3-34.32)"
B8 00 10 # invokestatic 16    # print__1("", "print_top (clac-main.c0: 34.3-34.32)")
57       # pop                # (ignore result)
15 03    # vload 3            # next
14 67 E7 # aldc 26599         # s[26599] = "print_top (clac-main.c0: 34.3-34.32)"
B8 00 12 # invokestatic 18    # printint__1(next, "print_top (clac-main.c0: 34.3-34.32)")
57       # pop                # (ignore result)
14 68 0C # aldc 26636         # s[26636] = ","
14 68 0E # aldc 26638         # s[26638] = "print_top (clac-main.c0: 34.3-34.32)"
B8 00 10 # invokestatic 16    # print__1(",", "print_top (clac-main.c0: 34.3-34.32)")
57       # pop                # (ignore result)
15 02    # vload 2            # top
14 68 33 # aldc 26675         # s[26675] = "print_top (clac-main.c0: 34.3-34.32)"
B8 00 12 # invokestatic 18    # printint__1(top, "print_top (clac-main.c0: 34.3-34.32)")
57       # pop                # (ignore result)
14 68 58 # aldc 26712         # s[26712] = "]\n"
14 68 5B # aldc 26715         # s[26715] = "print_top (clac-main.c0: 34.3-34.32)"
B8 00 10 # invokestatic 16    # print__1("]\n", "print_top (clac-main.c0: 34.3-34.32)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
15 03    # vload 3            # next
14 68 80 # aldc 26752         # s[26752] = "print_top (clac-main.c0: 35.3-35.16)"
B8 00 3A # invokestatic 58    # push__1(S, next, "print_top (clac-main.c0: 35.3-35.16)")
57       # pop                # (ignore result)
15 00    # vload 0            # S
15 02    # vload 2            # top
14 68 A5 # aldc 26789         # s[26789] = "print_top (clac-main.c0: 36.3-36.15)"
B8 00 3A # invokestatic 58    # push__1(S, top, "print_top (clac-main.c0: 36.3-36.15)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 


#<top_level>
02                # number of arguments = 2
05                # number of local variables = 5
00 D6             # code length = 214 bytes
15 00    # vload 0            # Q
01       # aconst_null        # NULL
A0 00 06 # if_cmpne +6        # if (Q != NULL) goto <781:cond_true>
A7 00 08 # goto +8            # goto <782:cond_false>
# <781:cond_true>
10 01    # bipush 1           # true
A7 00 05 # goto +5            # goto <783:cond_end>
# <782:cond_false>
10 00    # bipush 0           # false
# <783:cond_end>
14 68 CA # aldc 26826         # s[26826] = "clac-main.c0: 41.4-41.23: @requires annotation failed\n"
15 01    # vload 1            # _caller
14 69 01 # aldc 26881         # s[26881] = ": caller location"
B7 00 01 # invokenative 1     # string_join(_caller, ": caller location")
B7 00 01 # invokenative 1     # string_join("clac-main.c0: 41.4-41.23: @requires annotation failed\n", string_join(_caller, ": caller location"))
CF       # assert             # assert (Q != NULL) [failure message on stack]
14 69 13 # aldc 26899         # s[26899] = "top_level (clac-main.c0: 44.15-44.26)"
B8 00 39 # invokestatic 57    # stack_new__1("top_level (clac-main.c0: 44.15-44.26)")
36 02    # vstore 2           # S = stack_new__1("top_level (clac-main.c0: 44.15-44.26)");
14 69 39 # aldc 26937         # s[26937] = "top_level (clac-main.c0: 45.16-45.28)"
B8 00 6D # invokestatic 109   # init_state("top_level (clac-main.c0: 45.16-45.28)")
36 03    # vstore 3           # ST = init_state("top_level (clac-main.c0: 45.16-45.28)");
10 01    # bipush 1           # true
36 04    # vstore 4           # cont = true;
14 69 5F # aldc 26975         # s[26975] = "Clac top level\n"
14 69 6F # aldc 26991         # s[26991] = "top_level (clac-main.c0: 48.3-48.29)"
B8 00 10 # invokestatic 16    # print__1("Clac top level\n", "top_level (clac-main.c0: 48.3-48.29)")
57       # pop                # (ignore result)
# <784:loop>
A7 00 03 # goto +3            # goto <785:body>
# <785:body>
15 04    # vload 4            # cont
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (cont == true) goto <787:then>
A7 00 79 # goto +121          # goto <788:else>
# <787:then>
15 00    # vload 0            # Q
14 69 94 # aldc 27028         # s[27028] = "top_level (clac-main.c0: 51.9-51.23)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "top_level (clac-main.c0: 51.9-51.23)")
10 01    # bipush 1           # true
9F 00 06 # if_cmpeq +6        # if (queue_empty__1(Q, "top_level (clac-main.c0: 51.9-51.23)") == true) goto <790:then>
A7 00 34 # goto +52           # goto <791:else>
# <790:then>
14 69 B9 # aldc 27065         # s[27065] = "top_level (clac-main.c0: 52.12-52.17)"
B8 00 16 # invokestatic 22    # eof__1("top_level (clac-main.c0: 52.12-52.17)")
10 01    # bipush 1           # true
9F 00 23 # if_cmpeq +35       # if (eof__1("top_level (clac-main.c0: 52.12-52.17)") == true) goto <794:else>
A7 00 03 # goto +3            # goto <793:then>
# <793:then>
14 69 DF # aldc 27103         # s[27103] = "clac>> "
14 69 E7 # aldc 27111         # s[27111] = "top_level (clac-main.c0: 53.9-53.26)"
B8 00 10 # invokestatic 16    # print__1("clac>> ", "top_level (clac-main.c0: 53.9-53.26)")
57       # pop                # (ignore result)
14 6A 0C # aldc 27148         # s[27148] = "top_level (clac-main.c0: 54.9-54.16)"
B8 00 15 # invokestatic 21    # flush__1("top_level (clac-main.c0: 54.9-54.16)")
57       # pop                # (ignore result)
15 00    # vload 0            # Q
14 6A 31 # aldc 27185         # s[27185] = "top_level (clac-main.c0: 55.9-55.22)"
B8 00 4F # invokestatic 79    # input_line__1(Q, "top_level (clac-main.c0: 55.9-55.22)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <795:endif>
# <794:else>
10 00    # bipush 0           # dummy return value
B0       # return             # 
# <795:endif>
A7 00 03 # goto +3            # goto <792:endif>
# <791:else>
# <792:endif>
15 00    # vload 0            # Q
15 02    # vload 2            # S
15 03    # vload 3            # ST
14 6A 56 # aldc 27222         # s[27222] = "top_level (clac-main.c0: 61.12-61.26)"
B8 00 6F # invokestatic 111   # eval(Q, S, ST, "top_level (clac-main.c0: 61.12-61.26)")
36 04    # vstore 4           # cont = eval(Q, S, ST, "top_level (clac-main.c0: 61.12-61.26)");
15 04    # vload 4            # cont
10 01    # bipush 1           # true
9F 00 0B # if_cmpeq +11       # if (cont == true) goto <797:cond_false>
A7 00 03 # goto +3            # goto <796:cond_true>
# <796:cond_true>
10 01    # bipush 1           # true
A7 00 0B # goto +11           # goto <798:cond_end>
# <797:cond_false>
15 00    # vload 0            # Q
14 6A 7C # aldc 27260         # s[27260] = "top_level (clac-main.c0: 62.24-62.38)"
B8 00 21 # invokestatic 33    # queue_empty__1(Q, "top_level (clac-main.c0: 62.24-62.38)")
# <798:cond_end>
14 6A A2 # aldc 27298         # s[27298] = "clac-main.c0: 62.8-62.39: @assert annotation failed"
CF       # assert             # assert (!(cont) || queue_empty__1(Q, "top_level (clac-main.c0: 62.24-62.38)")) [failure message on stack]
15 02    # vload 2            # S
14 6A D6 # aldc 27350         # s[27350] = "top_level (clac-main.c0: 63.5-63.17)"
B8 00 70 # invokestatic 112   # print_top(S, "top_level (clac-main.c0: 63.5-63.17)")
57       # pop                # (ignore result)
A7 00 06 # goto +6            # goto <789:endif>
# <788:else>
A7 00 06 # goto +6            # break
# <789:endif>
A7 FF 7A # goto -134          # goto <784:loop>
# <786:exit>
14 6A FB # aldc 27387         # s[27387] = "Bye!\n"
14 6B 01 # aldc 27393         # s[27393] = "top_level (clac-main.c0: 66.3-66.19)"
B8 00 10 # invokestatic 16    # print__1("Bye!\n", "top_level (clac-main.c0: 66.3-66.19)")
57       # pop                # (ignore result)
10 00    # bipush 0           # dummy return value
B0       # return             # 
10 00    # bipush 0           # dummy return value
B0       # return             # 

00 26             # native count
# native pool
00 01 00 65       # string_length
00 02 00 64       # string_join
00 02 00 5D       # string_charat
00 03 00 66       # string_sub
00 02 00 5F       # string_equal
00 02 00 5E       # string_compare
00 01 00 63       # string_fromint
00 01 00 61       # string_frombool
00 01 00 62       # string_fromchar
00 01 00 69       # string_tolower
00 02 00 67       # string_terminated
00 01 00 68       # string_to_chararray
00 01 00 60       # string_from_chararray
00 01 00 5C       # char_ord
00 01 00 5B       # char_chr
00 01 00 06       # print
00 01 00 0A       # println
00 01 00 09       # printint
00 01 00 07       # printbool
00 01 00 08       # printchar
00 00 00 05       # flush
00 00 00 04       # eof
00 00 00 0B       # readline
00 01 00 3F       # file_closed
00 01 00 41       # file_read
00 01 00 3E       # file_close
00 01 00 40       # file_eof
00 01 00 42       # file_readline
00 01 00 57       # parse_bool
00 02 00 58       # parse_int
00 01 00 56       # num_tokens
00 02 00 55       # int_tokens
00 01 00 5A       # parse_tokens
00 02 00 59       # parse_ints
00 02 00 00       # args_flag
00 02 00 01       # args_int
00 02 00 03       # args_string
00 00 00 02       # args_parse

